{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.2c22458fb1268f72fb2a.hot-update.js","sources":["webpack:///./src/gql/items.js"],"sourcesContent":["import { gql } from 'apollo-boost';\r\nimport { SingletonApolloClient } from '../singleton/client';\r\nimport { SingletonStore } from '../singleton/store';\r\n\r\nexport const getItems = async({subCategory,  search,  sort,  filter})=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n\r\n        let res = await client\r\n            .query({\r\n                variables: {subCategory: subCategory, search: search, sort: sort, filter: filter},\r\n                query: gql`\r\n                    query ($subCategory: ID!,$search: String!, $sort: String!, $filter: String!) {\r\n                        items(subCategory: $subCategory, search: $search, sort: $sort, filter: $filter) {\r\n                            _id\r\n                            subCategory\r\n                                {_id name}\r\n                            name\r\n                            status\r\n                            updatedAt                  \r\n                            stock\r\n                            image\r\n                            info\r\n                            price\r\n                            reiting\r\n                            organization\r\n                                {_id name}\r\n                            hit\r\n                            latest\r\n                            favorite\r\n                            basket\r\n                        }\r\n                        sortItem {\r\n                            name\r\n                            field\r\n                        }\r\n                        filterItem {\r\n                           name\r\n                           value\r\n                        }\r\n                        subCategory(_id: $subCategory) {\r\n                           _id\r\n                           name\r\n                          }\r\n                    }`,\r\n            })\r\n        if(!res.data)res.data={}\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const favorites = async({ search})=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        let res = await client\r\n            .query({\r\n                variables: { search: search },\r\n                query: gql`\r\n                    query ($search: String!) {\r\n                        favorites(search: $search) {\r\n                            _id\r\n                            subCategory\r\n                                {_id name}\r\n                            name\r\n                            status\r\n                            updatedAt                  \r\n                            stock\r\n                            image\r\n                            info\r\n                            price\r\n                            reiting\r\n                            organization\r\n                                {_id name}\r\n                            hit\r\n                            latest\r\n                            favorite\r\n                            basket\r\n                        }\r\n                    }`,\r\n            })\r\n        if(!res.data)res.data={}\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const getItem = async({_id})=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        let res = await client\r\n            .query({\r\n                variables: {_id: _id},\r\n                query: gql`\r\n                    query ($_id: ID!) {\r\n                        item(_id: $_id) {\r\n                            _id\r\n                            subCategory\r\n                                {_id name}\r\n                            name\r\n                            status\r\n                            updatedAt                  \r\n                            stock\r\n                            image\r\n                            info\r\n                            price\r\n                            reiting\r\n                            organization\r\n                                {_id name}\r\n                            hit\r\n                            latest\r\n                            favorite\r\n                            basket\r\n                        }\r\n                    }`,\r\n            })\r\n        if(!res.data)res.data={}\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const deleteItem = async(ids, subCategory)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {_id: ids},\r\n            mutation : gql`\r\n                    mutation ($_id: [ID]!) {\r\n                        deleteItem(_id: $_id) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        return await getItems({subCategory: subCategory, ...(new SingletonStore().getStore().getState().app)})\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const onoffItem = async(ids)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {_id: ids},\r\n            mutation : gql`\r\n                    mutation ($_id: [ID]!) {\r\n                        onoffItem(_id: $_id) {\r\n                             data\r\n                        }\r\n                    }`})\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const favoriteItem = async(ids)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {_id: ids},\r\n            mutation : gql`\r\n                    mutation ($_id: [ID]!) {\r\n                        favoriteItem(_id: $_id) {\r\n                             data\r\n                        }\r\n                    }`})\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const addFavoriteItem = async(ids)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {_id: ids},\r\n            mutation : gql`\r\n                    mutation ($_id: [ID]!) {\r\n                        addFavoriteItem(_id: $_id) {\r\n                             data\r\n                        }\r\n                    }`})\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const addItem = async(element, subCategory)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {...element, subCategory: subCategory},\r\n            mutation : gql`\r\n                    mutation ($stock: Int!, $name: String!, $image: Upload, $info: String!, $price: Int!, $subCategory: ID!, $organization: ID!, $hit: Boolean!, $latest: Boolean!) {\r\n                        addItem(stock: $stock, name: $name, image: $image, info: $info, price: $price, subCategory: $subCategory, organization: $organization, hit: $hit, latest: $latest) {\r\n                             data\r\n                        }\r\n                    }`})\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const setItem = async(element, subCategory)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {...element},\r\n            mutation : gql`\r\n                    mutation ($_id: ID!, $stock: Int, $name: String, $image: Upload, $info: String, $price: Int, $subCategory: ID, $organization: ID, $hit: Boolean, $latest: Boolean) {\r\n                        setItem(_id: $_id, stock: $stock, name: $name, image: $image, info: $info, price: $price, subCategory: $subCategory, organization: $organization, hit: $hit, latest: $latest) {\r\n                             data\r\n                        }\r\n                    }`})\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}"],"mappings":"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","sourceRoot":""}