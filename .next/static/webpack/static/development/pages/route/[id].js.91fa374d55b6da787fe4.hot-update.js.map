{"version":3,"file":"static/webpack/static\\development\\pages\\route\\[id].js.91fa374d55b6da787fe4.hot-update.js","sources":["webpack:///./components/dialog/GeoRoute.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport dialogContentStyle from '../../src/styleMUI/dialogContent'\r\nimport { Map, YMaps, Placemark } from 'react-yandex-maps';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport GpsFixed from '@material-ui/icons/GpsFixed';\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Confirmation from './Confirmation'\r\n\r\nconst Geo =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog, setMiniDialog } = props.mini_dialogActions;\r\n        const { classes, invoices } = props;\r\n        /*let getGeo = () => {\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition((position)=>{\r\n                    setNewGeo(position.coords.latitude+', '+position.coords.longitude)\r\n                });\r\n            } else {\r\n                showSnackBar('Геолокация не поддерживается')\r\n            }\r\n        }*/\r\n        let [load, setLoad] = useState(true);\r\n        return (\r\n            <YMaps>\r\n                <div className={classes.column}>\r\n                    <div style={{height: window.innerHeight-128, width: window.innerWidth-48, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                        {\r\n                            load?<CircularProgress/>:null\r\n                        }\r\n                        <div style={{display: load?'none':'block'}}>\r\n                            <Map onLoad={()=>{setLoad(false)}} height={window.innerHeight-128} width={window.innerWidth-48} defaultState={{ center: ['42.8700000', '74.5900000'], zoom: 12 }} >\r\n                                {invoices.map((invoice, idx)=>\r\n                                    <Placemark\r\n                                        key={idx}\r\n                                        options={{draggable: false, iconColor: !invoice.confirmationForwarder?'red':'#ffb300'}}\r\n                                        properties={{iconCaption: invoice.number}}\r\n                                        geometry={invoice.address[1]?invoice.address[1].split(', '):'42.8700000, 74.5900000'} />\r\n                                )}\r\n                            </Map>\r\n                        </div>\r\n                    </div>\r\n                    <center>\r\n                        <Button variant='contained' color='secondary' onClick={()=>{showMiniDialog(false);}} className={classes.button}>\r\n                            Закрыть\r\n                        </Button>\r\n                    </center>\r\n                </div>\r\n            </YMaps>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\r\n    }\r\n}\r\n\r\nGeo.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(Geo));"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;AAHA;AAAA;AAAA;AACA;AAYA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAJA;AADA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AADA;AAIA;;;;A","sourceRoot":""}