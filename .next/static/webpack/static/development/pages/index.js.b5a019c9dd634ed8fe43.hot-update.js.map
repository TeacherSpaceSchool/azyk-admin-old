{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.b5a019c9dd634ed8fe43.hot-update.js","sources":["webpack:///./components/app/Drawer.js"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport drawerStyle from '../../src/styleMUI/drawer'\r\nimport * as appActions from '../../redux/actions/app'\r\nimport * as userActions from '../../redux/actions/user'\r\nimport Drawer from '@material-ui/core/SwipeableDrawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ReorderIcon from '@material-ui/icons/ViewList';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport ArtTrackIcon from '@material-ui/icons/ArtTrack';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\n\r\n\r\nconst MyDrawer = React.memo((props) => {\r\n    const { classes } = props\r\n    const { drawer, isMobileApp } = props.app;\r\n    const { profile, authenticated } = props.user;\r\n    const { showDrawer } = props.appActions;\r\n    let variant = isMobileApp?'temporary' : 'permanent';\r\n    const open = isMobileApp?drawer:true\r\n    const router = useRouter();\r\n    return (\r\n        <Drawer\r\n            variant= {variant}\r\n            className={classes.drawer}\r\n            open={open}\r\n            onClose={()=>showDrawer(false)}\r\n            classes={{paper: classes.drawerPaper,}}\r\n            onOpen={()=>showDrawer(true)}\r\n            hysteresis={1}\r\n        >\r\n            {\r\n                isMobileApp?\r\n                    null\r\n                    :\r\n                    <div className={classes.toolbar}/>\r\n            }\r\n            <Divider />\r\n            <List>\r\n                {\r\n                    ['экспедитор', 'организация', 'менеджер'].includes(profile.role)?\r\n                        <Link href='/items/[id]' as='/items/all'>\r\n                            <ListItem style={{background:\r\n                                router.pathname===('/')\r\n                                ||\r\n                                router.pathname.includes('subcategory')\r\n                                ||\r\n                                router.pathname.includes('item')?\r\n                                    '#f5f5f5':'#ffffff'}} button onClick={()=>{showDrawer(false)}}>\r\n                                <ListItemIcon><ReorderIcon color='inherit'/></ListItemIcon>\r\n                                <ListItemText primary='Товары' />\r\n                            </ListItem>\r\n                        </Link>\r\n                        :\r\n                        <Link href='/'>\r\n                            <ListItem style={{background: router.pathname===('/')\r\n                            ||\r\n                            router.pathname.includes('subcategory')\r\n                            ||\r\n                            router.pathname.includes('item')?'#f5f5f5':'#ffffff'}} button onClick={()=>{showDrawer(false)}}>\r\n                                <ListItemIcon><ReorderIcon color='inherit'/></ListItemIcon>\r\n                                <ListItemText primary='Товары' />\r\n                            </ListItem>\r\n                        </Link>\r\n                }\r\n                <Divider/>\r\n                {\r\n                    ['admin', 'client'].includes(profile.role)||!authenticated?\r\n                        <>\r\n                        <Link href='/ads'>\r\n                            <ListItem style={{background: router.pathname==='/ads'?'#f5f5f5':'#ffffff'}} button onClick={()=>{showDrawer(false)}}>\r\n                                <ListItemIcon><WhatshotIcon color='inherit'/></ListItemIcon>\r\n                                <ListItemText primary='Акции' />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Divider/>\r\n                        </>\r\n                        :null\r\n                }\r\n                {\r\n                    ['admin', 'организация', 'менеджер'].includes(profile.role)?\r\n                        <>\r\n                        <Link href={'/clients'}>\r\n                            <ListItem style={{background: router.pathname.includes('client')?'#f5f5f5':'#ffffff'}} button onClick={()=>{showDrawer(false)}}>\r\n                                <ListItemIcon><GroupIcon color='inherit'/></ListItemIcon>\r\n                                <ListItemText primary='Клиенты' />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Divider/>\r\n                        </>\r\n                        :null\r\n                }\r\n                {\r\n                    ['client', 'admin', 'организация', 'менеджер'].includes(profile.role)?\r\n                        <>\r\n                        <Link href='/orders'>\r\n                            <ListItem style={{background: router.pathname==='/orders'?'#f5f5f5':'#ffffff'}} button onClick={()=>{showDrawer(false)}}>\r\n                                <ListItemIcon><ReceiptIcon color='inherit'/></ListItemIcon>\r\n                                <ListItemText primary='Заказы' />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Divider/>\r\n                        </>\r\n                        :null\r\n                }\r\n                {\r\n                    ['admin', 'организация', 'менеджер', 'экспедитор'].includes(profile.role)?\r\n                        <>\r\n                        <Link href='/routes'>\r\n                            <ListItem style={{background: router.pathname==='/routes'?'#f5f5f5':'#ffffff'}} button onClick={()=>{showDrawer(false)}}>\r\n                                <ListItemIcon><FormatListNumberedIcon color='inherit'/></ListItemIcon>\r\n                                <ListItemText primary='Маршрутные листы' />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Divider/>\r\n                        </>\r\n                        :null\r\n                }\r\n                {\r\n                    ['экспедитор', 'организация', 'менеджер'].includes(profile.role)?\r\n                        <Link href='/organization/[id]' as={`/organization/${profile.organization}`}>\r\n                            <ListItem style={{background: router.pathname.includes('organization')?'#f5f5f5':'#ffffff'}} button onClick={()=>{showDrawer(false)}}>\r\n                                <ListItemIcon><LocationCityIcon color='inherit'/></ListItemIcon>\r\n                                <ListItemText primary='Организация' />\r\n                            </ListItem>\r\n                        </Link>\r\n                        :\r\n                        <Link href='/organizations'>\r\n                            <ListItem style={{background: router.pathname.includes('organization')?'#f5f5f5':'#ffffff'}} button onClick={()=>{showDrawer(false)}}>\r\n                                <ListItemIcon><LocationCityIcon color='inherit'/></ListItemIcon>\r\n                                <ListItemText primary='Организации' />\r\n                            </ListItem>\r\n                        </Link>\r\n                }\r\n                <Divider/>\r\n                {\r\n                    ['admin', 'организация'].includes(profile.role)?\r\n                        <>\r\n                        <Link href={'/employments'}>\r\n                            <ListItem style={{background: router.pathname.includes('employment')?'#f5f5f5':'#ffffff'}} button onClick={()=>{showDrawer(false)}}>\r\n                                <ListItemIcon><GroupIcon color='inherit'/></ListItemIcon>\r\n                                <ListItemText primary='Сотрудники' />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Divider/>\r\n                        </>\r\n                        :null\r\n                }\r\n                {\r\n                    ['admin', 'client'].includes(profile.role)||!authenticated?\r\n                        <>\r\n                        <Link href='/blog'>\r\n                            <ListItem style={{background: router.pathname==='/blog'?'#f5f5f5':'#ffffff'}} button onClick={()=>{showDrawer(false)}}>\r\n                                <ListItemIcon><ArtTrackIcon color='inherit'/></ListItemIcon>\r\n                                <ListItemText primary='Блог' />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Divider/>\r\n                        </>\r\n                        :null\r\n                }\r\n                <Link href={'/contact'}>\r\n                    <ListItem style={{background: router.pathname==='/contact'?'#f5f5f5':'#ffffff'}} button onClick={()=>{showDrawer(false)}}>\r\n                        <ListItemIcon><InfoIcon color='inherit'/></ListItemIcon>\r\n                        <ListItemText primary='Контакты' />\r\n                    </ListItem>\r\n                </Link>\r\n                <Divider/>\r\n            </List>\r\n        </Drawer>\r\n    )\r\n})\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n    }\r\n}\r\n\r\nMyDrawer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(drawerStyle)(MyDrawer))"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AADA;AAIA;;;;A","sourceRoot":""}