{"version":3,"file":"static/webpack/static\\development\\pages\\organizations.js.8cc0ea1c7ec04e6c1418.hot-update.js","sources":["webpack:///./components/organization/CardOrganization.js","webpack:///./src/styleMUI/organization/cardOrganization.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport cardOrganizationStyle from '../../src/styleMUI/organization/cardOrganization.js'\r\nimport { connect } from 'react-redux'\r\nimport Link from 'next/link';\r\nimport Button from '@material-ui/core/Button';\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport { onoffOrganization, deleteOrganization } from '../../src/gql/organization'\r\nimport Confirmation from '../../components/dialog/Confirmation'\r\n\r\n\r\nconst CardOrganization = React.memo((props) => {\r\n    const classes = cardOrganizationStyle();\r\n    const { element, setList } = props;\r\n    const { isMobileApp } = props.app;\r\n    const { profile } = props.user;\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    let [status, setStatus] = useState(element!==undefined?element.status:'');\r\n    return (\r\n        <Card className={isMobileApp?classes.cardM:classes.cardD}>\r\n            <CardActionArea>\r\n                <Link href='/organization/[id]' as={`/organization/${element._id}`}>\r\n                    <div className={classes.line}>\r\n                        <img\r\n                            className={classes.mediaO}\r\n                            src={element.image}\r\n                            alt={element.name}\r\n                        />\r\n                        <h3 className={classes.input}>\r\n                            {element.name}\r\n                        </h3>\r\n                    </div>\r\n                </Link>\r\n            </CardActionArea>\r\n                {\r\n                    profile.role === 'admin' ?\r\n                        <CardActions>\r\n                            <Button onClick={async()=>{\r\n                                        const action = async() => {\r\n                                            await onoffOrganization([element._id])\r\n                                            setStatus(status==='active'?'deactive':'active')\r\n                                        }\r\n                                        setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                        showMiniDialog(true)\r\n                                    }} size='small' color='primary'>\r\n                                {status==='active'?'Отключить':'Включить'}\r\n                            </Button>\r\n                                    <Button onClick={async()=>{\r\n                                        const action = async() => {\r\n                                            const list = (await deleteOrganization([element._id])).organizations\r\n                                            setList(list)\r\n                                        }\r\n                                        setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                        showMiniDialog(true)\r\n                                    }} size='small' color='primary'>\r\n                                        Удалить\r\n                                    </Button>\r\n                        </CardActions>\r\n                        :\r\n                        null\r\n                }\r\n        </Card>\r\n    );\r\n})\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardOrganization)","import { makeStyles } from '@material-ui/core/styles';\r\nexport default makeStyles({\r\n    cardM: {\r\n        width: 'calc(100vw - 40px)',\r\n        marginBottom: 20\r\n    },\r\n    cardD: {\r\n        width: 400,\r\n        margin: 10\r\n    },\r\n    mediaO: {\r\n        borderRadius: '30px',\r\n        objectFit: 'cover',\r\n        height: '60px',\r\n        width: '60px',\r\n        marginRight: 10\r\n    },\r\n    avatar: {\r\n        borderRadius: '50px',\r\n        objectFit: 'cover',\r\n        height: '100px',\r\n        width: '100px',\r\n        margin: 10\r\n    },\r\n    text: {\r\n        fontWeight: 'bold',\r\n        fontSize: '1rem',\r\n        fontFamily: 'Roboto'\r\n    },\r\n    input: {\r\n        marginBottom: 5,\r\n        width: 'calc(100vw - 82px)',\r\n        fontSize: '1rem',\r\n        fontFamily: 'Roboto'\r\n    },\r\n    line: {\r\n        margin: 10,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'row',\r\n    },\r\n})"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;;;;;;;;;;;;ACjFA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAlCA;;;;A","sourceRoot":""}