{"version":3,"file":"static/webpack/static\\development\\pages\\employment\\[id].js.eaabfb770edf50e390f0.hot-update.js","sources":["webpack:///./redux/actions/user.js"],"sourcesContent":["import {\r\n    AUTHENTICATED,\r\n    UNAUTHENTICATED,\r\n    SET_PROFILE,\r\n    SET_AUTH,\r\n    ERROR_AUTHENTICATED\r\n} from '../constants/user'\r\nimport {\r\n    SHOW_MINI_DIALOG\r\n} from '../constants/mini_dialog'\r\nimport Cookies from 'js-cookie';\r\nimport { gql } from 'apollo-boost';\r\nimport { SingletonApolloClient } from '../../src/singleton/client';\r\nimport Router from 'next/router'\r\n\r\nexport function signup(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const client = new SingletonApolloClient().getClient()\r\n            let result = await client.mutate({\r\n                variables: payload,\r\n                mutation : gql`\r\n                    mutation ($phone: String!, $password: String!) {\r\n                        signupuser(phone: $phone, password: $password) {\r\n                            data,\r\n                        }\r\n                    }`})\r\n            if(result.data.signupuser.data==='Проверьте данные')\r\n                await dispatch({\r\n                    type: ERROR_AUTHENTICATED,\r\n                    payload: true\r\n                })\r\n            else {\r\n                await dispatch({type: AUTHENTICATED});\r\n                await dispatch({\r\n                    type: SHOW_MINI_DIALOG,\r\n                    payload: false\r\n                })\r\n                Router.push('/')\r\n                setTimeout(()=>window.location.reload(), 1)\r\n            }\r\n        } catch(error) {\r\n            dispatch({\r\n                type: ERROR_AUTHENTICATED,\r\n                payload: true\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nexport function signin(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const client = new SingletonApolloClient().getClient();\r\n            let result = await client.mutate({\r\n                variables: payload,\r\n                mutation : gql`\r\n                    mutation ($phone: String!, $password: String!) {\r\n                        signinuser(phone: $phone, password: $password) {\r\n                            data,\r\n                        }\r\n                    }`})\r\n            if(result.data.signinuser.data==='Проверьте данные')\r\n                await dispatch({\r\n                    type: ERROR_AUTHENTICATED,\r\n                    payload: true\r\n                })\r\n            else {\r\n                await dispatch({type: AUTHENTICATED});\r\n                await dispatch({\r\n                    type: SHOW_MINI_DIALOG,\r\n                    payload: false\r\n                })\r\n                Router.push('/')\r\n                setTimeout(()=>window.location.reload(), 1)\r\n            }\r\n        } catch(error) {\r\n            console.log(error)\r\n            await dispatch({\r\n                type: ERROR_AUTHENTICATED,\r\n                payload: true\r\n            })\r\n        }\r\n    };\r\n}\r\n\r\nexport function checkAuthenticated() {\r\n    return async (dispatch) => {\r\n        try {\r\n            if (Cookies.get('jwt')) {\r\n                dispatch ({type: AUTHENTICATED});\r\n            } else {\r\n                dispatch ({type: UNAUTHENTICATED});\r\n            }\r\n        } catch (error) {\r\n            dispatch ({type: UNAUTHENTICATED});\r\n        }\r\n    };\r\n}\r\n\r\nexport function setAuthenticated(auth) {\r\n    return {\r\n        type: SET_AUTH,\r\n        payload: auth\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return async (dispatch) => {\r\n        Cookies.remove('jwt');\r\n        dispatch({\r\n            type: UNAUTHENTICATED,\r\n        })\r\n        Router.push('/')\r\n        setTimeout(()=>window.location.reload(),1)\r\n\r\n\r\n    }\r\n}\r\n\r\nexport function setProfile() {\r\n    return async (dispatch) => {\r\n        try {\r\n            const client = new SingletonApolloClient().getClient()\r\n            let result = await client\r\n                .query({\r\n                    query: gql`\r\n                    query {\r\n                        getStatus {\r\n                           role\r\n                           status\r\n                           phone\r\n                           organization\r\n                           _id\r\n                          }\r\n                    }`\r\n                })\r\n            await dispatch({\r\n                type: SET_PROFILE,\r\n                payload: result.data.getStatus\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAOA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAFA;AAAA;AAIA;AACA;AAFA;AACA;AAJA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAaA;AACA;AAFA;AACA;AAbA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAiBA;AAAA;AACA;AAlBA;AAAA;AAAA;AAmBA;AACA;AAFA;AACA;AAnBA;AAsBA;AACA;AAAA;AAAA;AACA;AAxBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AA0BA;AACA;AACA;AAFA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAgCA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAFA;AAAA;AAIA;AACA;AAFA;AACA;AAJA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAaA;AACA;AAFA;AACA;AAbA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAiBA;AAAA;AACA;AAlBA;AAAA;AAAA;AAmBA;AACA;AAFA;AACA;AAnBA;AAsBA;AACA;AAAA;AAAA;AACA;AAxBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AA0BA;AA1BA;AAAA;AA4BA;AACA;AAFA;AACA;AA5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAiiBA;AACA;AAFA;AACA;AAjBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAqBA;AACA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAwBA;;;;A","sourceRoot":""}