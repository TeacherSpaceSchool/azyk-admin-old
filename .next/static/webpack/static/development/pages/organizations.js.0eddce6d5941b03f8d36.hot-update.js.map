{"version":3,"file":"static/webpack/static\\development\\pages\\organizations.js.0eddce6d5941b03f8d36.hot-update.js","sources":["webpack:///./components/app/AppBar.js","webpack:///./layouts/App.js","webpack:///./redux/actions/user.js"],"sourcesContent":["import Link from 'next/link';\r\nimport React, { useState, useEffect } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport LocalGroceryStore from '@material-ui/icons/LocalGroceryStore';\r\nimport Star from '@material-ui/icons/Star';\r\nimport ExitToApp from '@material-ui/icons/ExitToApp';\r\nimport AssignmentInd from '@material-ui/icons/AssignmentInd';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as userActions from '../../redux/actions/user'\r\nimport * as appActions from '../../redux/actions/app'\r\nimport appbarStyle from '../../src/styleMUI/appbar'\r\nimport { getCountBasket } from '../../src/gql/basket'\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Search from '@material-ui/icons/SearchRounded';\r\nimport Sort from '@material-ui/icons/SortRounded';\r\nimport FilterList from '@material-ui/icons/FilterListRounded';\r\nimport PermIdentity from '@material-ui/icons/PermIdentity';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Sign from '../dialog/Sign'\r\nimport Confirmation from '../dialog/Confirmation'\r\n\r\nconst MyAppBar = React.memo((props) => {\r\n    //props\r\n    const classes = appbarStyle();\r\n    const { filters, sorts, pageName } = props\r\n    const { drawer, search, filter, sort, isMobileApp, countBasket } = props.app;\r\n    const { showDrawer, setSearch, setFilter, setSort } = props.appActions;\r\n    const { authenticated, profile } = props.user;\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    const { logout } = props.userActions;\r\n    //state\r\n    const [anchorElMobileMenu, setAnchorElMobileMenu] = React.useState(null);\r\n    const openMobileMenu = Boolean(anchorElMobileMenu);\r\n    let handleMobileMenu = (event) => {\r\n        setAnchorElMobileMenu(event.currentTarget);\r\n    }\r\n    let handleCloseMobileMenu = () => {\r\n        setAnchorElMobileMenu(null);\r\n    }\r\n    const [anchorElSort, setAnchorElSort] = useState(null);\r\n    const openSort = Boolean(anchorElSort);\r\n    let handleMenuSort = (event) => {\r\n        setAnchorElSort(event.currentTarget);\r\n    }\r\n    let handleCloseSort = () => {\r\n        setAnchorElSort(null);\r\n    }\r\n    const [anchorElProfile, setAnchorElProfile] = useState(null);\r\n    const openProfile = Boolean(anchorElProfile);\r\n    let handleMenuProfile = (event) => {\r\n        setAnchorElProfile(event.currentTarget);\r\n    }\r\n    let handleCloseProfile = () => {\r\n        setAnchorElProfile(null);\r\n    }\r\n    const [anchorElFilter, setAnchorElFilter] = useState(null);\r\n    const openFilter = Boolean(anchorElFilter);\r\n    let handleMenuFilter = (event) => {\r\n        setAnchorElFilter(event.currentTarget);\r\n    }\r\n    let handleCloseFilter = () => {\r\n        setAnchorElFilter(null);\r\n    }\r\n    const [openSearch, setOpenSearch] = useState(false);\r\n    let handleSearch = (event) => {\r\n        setSearch(event.target.value)\r\n    };\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            getCountBasket()\r\n        })()\r\n    },[])\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position='fixed' className={classes.appBar}>\r\n                <Toolbar>\r\n                    {isMobileApp?\r\n                        <IconButton\r\n                            edge='start'\r\n                            aria-owns='menu-appbar'\r\n                            aria-haspopup='true'\r\n                            onClick={() => {showDrawer(!drawer)}}\r\n                            color='inherit'\r\n                        >\r\n                            <MenuIcon/>\r\n                        </IconButton>\r\n                        :\r\n                        <IconButton\r\n                            aria-owns='menu-appbar'\r\n                            aria-haspopup='true'\r\n                            onClick={() => {showDrawer(!drawer)}}\r\n                            color='inherit'\r\n                        >\r\n                            <MenuIcon/>\r\n                        </IconButton>\r\n                    }\r\n                    <Typography variant='h6' className={classes.title}>\r\n                        {pageName}\r\n                    </Typography>\r\n                    {isMobileApp?\r\n                        openSearch?\r\n                            <Paper className={classes.searchM}>\r\n                                    <Input className={classes.searchField}\r\n                                        id='adornment-password'\r\n                                        type={'login'}\r\n                                        value={search}\r\n                                        onChange={handleSearch}\r\n                                        endAdornment={\r\n                                            <InputAdornment position='end'>\r\n                                                <IconButton aria-label='Search' onClick={()=>{setSearch('');setOpenSearch(false)}}>\r\n                                                    <Cancel />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }/>\r\n                            </Paper>\r\n                            :\r\n                            <>\r\n                            <IconButton\r\n                                aria-owns={openMobileMenu ? 'menu-appbar' : undefined}\r\n                                aria-haspopup='true'\r\n                                onClick={handleMobileMenu}\r\n                                color='inherit'\r\n                            >\r\n                                <Search />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id='menu-appbar'\r\n                                anchorEl={anchorElMobileMenu}\r\n                                anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                transformOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={openMobileMenu}\r\n                                onClose={handleCloseMobileMenu}\r\n                            >\r\n                                <MenuItem onClick={()=>{\r\n                                    setOpenSearch(true);handleCloseMobileMenu()\r\n                                }}>\r\n                                    <div style={{display: 'flex', color: '#606060'}}>\r\n                                        <Search/>&nbsp;Поиск\r\n                                    </div>\r\n                                </MenuItem>\r\n                                {filters&&filters.length>0?\r\n                                    [\r\n                                        <MenuItem onClick={handleMenuFilter}>\r\n                                            <div style={{display: 'flex', color: '#606060'}}>\r\n                                                <FilterList/>&nbsp;Фильтр\r\n                                            </div>\r\n                                        </MenuItem>,\r\n                                        <Menu\r\n                                            key='filters2'\r\n                                            id='menu-appbar'\r\n                                            anchorEl={anchorElFilter}\r\n                                            anchorOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right',\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right',\r\n                                            }}\r\n                                            open={openFilter}\r\n                                            onClose={handleCloseFilter}\r\n                                        >\r\n                                            {filters.map((elem, idx)=><MenuItem key={idx} style={{background: filter===elem.value?'rgba(51, 143, 255, 0.29)': '#fff'}}  onClick={()=>{setFilter(elem.value);handleCloseFilter();}}>{elem.name}</MenuItem>)}\r\n                                        </Menu>\r\n                                    ]\r\n                                    :null\r\n                                }\r\n                                {sorts&&sorts.length>0?\r\n                                    [\r\n                                        <MenuItem onClick={handleMenuSort}>\r\n                                            <div style={{display: 'flex', color: '#606060'}}>\r\n                                                <Sort/>&nbsp;Сортировка\r\n                                            </div>\r\n                                        </MenuItem>,\r\n                                        <Menu\r\n                                            key='sort2'\r\n                                            id='menu-appbar'\r\n                                            anchorEl={anchorElSort}\r\n                                            anchorOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'left',\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'left',\r\n                                            }}\r\n                                            open={openSort}\r\n                                            onClose={handleCloseSort}\r\n                                        >\r\n                                            {sorts.map((elem, idx)=><MenuItem key={idx} onClick={()=>{sort===`-${elem.field}`?setSort(elem.field):setSort(`-${elem.field}`);/*handleCloseSort();handleCloseMobileMenu()*/}}>{sort===`-${elem.field}`?<ArrowDownward />:sort===elem.field?<ArrowUpward />:<div style={{width: '24px'}}/>}{elem.name}</MenuItem>)}\r\n                                        </Menu>\r\n                                    ]\r\n                                    :null\r\n                                }\r\n                            </Menu>\r\n                                    <Tooltip title='Профиль'>\r\n                                        <IconButton\r\n                                            aria-owns='menu-appbar'\r\n                                            aria-haspopup='true'\r\n                                            color='inherit'\r\n                                            onClick={handleMenuProfile}\r\n                                        >\r\n                                            <Badge badgeContent={countBasket} color='secondary'>\r\n                                                <PermIdentity/>\r\n                                            </Badge>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                    <Menu\r\n                                        id='menu-appbar'\r\n                                        anchorEl={anchorElProfile}\r\n                                        anchorOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        transformOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        open={openProfile}\r\n                                        onClose={handleCloseProfile}\r\n                                    >\r\n                                        {\r\n                                            !authenticated||profile.role==='client'?\r\n                                                [\r\n                                                <MenuItem>\r\n                                                    <Badge badgeContent={countBasket} color='secondary'>\r\n                                                        <Link href='/basket'>\r\n                                                            <a style={{display: 'flex', color: '#606060'}}>\r\n                                                                <LocalGroceryStore/>\r\n                                                                &nbsp;Корзина&nbsp;&nbsp;\r\n                                                            </a>\r\n                                                        </Link>\r\n                                                    </Badge>\r\n                                                </MenuItem>,\r\n                                                <MenuItem>\r\n                                                    <Link href='/favorite'>\r\n                                                        <a style={{display: 'flex', color: '#606060'}}>\r\n                                                            <Star/>&nbsp;Избранное\r\n                                                        </a>\r\n                                                    </Link>\r\n                                                </MenuItem>\r\n                                                ]\r\n                                                :\r\n                                                null\r\n                                        }\r\n                                        {\r\n                                            authenticated&&profile.role!=='admin'?\r\n                                                <MenuItem>\r\n                                                    <Link href={`/${profile.role==='client'?'client':'employment'}/[id]`} as={`/${profile.role==='client'?'client':'employment'}/${profile._id}`}>\r\n                                                        <a style={{display: 'flex', color: '#606060'}}>\r\n                                                            <AssignmentInd/>&nbsp;Профиль\r\n                                                        </a>\r\n                                                    </Link>\r\n                                                </MenuItem>\r\n                                                :\r\n                                                null\r\n                                        }\r\n                                        {\r\n                                            authenticated?\r\n                                                <MenuItem onClick={()=>{\r\n                                                    handleCloseProfile()\r\n                                                    const action = async() => {\r\n                                                        logout(true)\r\n                                                    }\r\n                                                    setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                    showMiniDialog(true)\r\n                                                }}>\r\n                                                    <div style={{display: 'flex', color: '#606060'}}>\r\n                                                        <ExitToApp/>&nbsp;Выйти\r\n                                                    </div>\r\n                                                </MenuItem>\r\n                                            :\r\n                                                <MenuItem onClick={()=>{\r\n                                                    handleCloseProfile()\r\n                                                    setMiniDialog('Вход', <Sign isMobileApp={isMobileApp}/>)\r\n                                                    showMiniDialog(true)\r\n                                                }}>\r\n                                                    <div style={{display: 'flex', color: '#606060'}}>\r\n                                                        <ExitToApp/>&nbsp;Войти\r\n                                                    </div>\r\n                                                </MenuItem>\r\n                                        }\r\n                                    </Menu>\r\n\r\n                            </>\r\n                        :\r\n                        openSearch?\r\n                            <Paper className={classes.searchD}>\r\n                                    <Input className={classes.searchField}\r\n                                        id='adornment-password'\r\n                                        type={'login'}\r\n                                        value={search}\r\n                                        onChange={handleSearch}\r\n                                        endAdornment={\r\n                                            <InputAdornment position='end'>\r\n                                                <IconButton aria-label='Search' onClick={()=>{setSearch('');setOpenSearch(false)}}>\r\n                                                    <Cancel />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }/>\r\n                            </Paper>\r\n                            :\r\n                            <>\r\n                            {filters&&filters.length>0?\r\n                                <>\r\n                                <Tooltip title='Фильтр'>\r\n                                    <IconButton\r\n                                        aria-owns={openFilter ? 'menu-appbar' : undefined}\r\n                                        aria-haspopup='true'\r\n                                        onClick={handleMenuFilter}\r\n                                        color='inherit'\r\n                                    >\r\n                                        <FilterList/>\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                                <Menu\r\n                                    id='menu-appbar'\r\n                                    anchorEl={anchorElFilter}\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    transformOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    open={openFilter}\r\n                                    onClose={handleCloseFilter}\r\n                                >\r\n                                    {filters.map((elem, idx)=><MenuItem key={idx} style={{background: filter===elem.value?'rgba(51, 143, 255, 0.29)': '#fff'}} onClick={()=>{setFilter(elem.value);handleCloseFilter();}}>{elem.name}</MenuItem>)}\r\n                                </Menu>\r\n                                &nbsp;\r\n                                </>\r\n                                :null\r\n                            }\r\n                            {sorts&&sorts.length>0?\r\n                                <>\r\n                                <Tooltip title='Сортировка'>\r\n                                    <IconButton\r\n                                        aria-owns={openSort ? 'menu-appbar' : undefined}\r\n                                        aria-haspopup='true'\r\n                                        onClick={handleMenuSort}\r\n                                        color='inherit'\r\n                                    >\r\n                                        <Sort />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                                <Menu\r\n                                    id='menu-appbar'\r\n                                    anchorEl={anchorElSort}\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    transformOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    open={openSort}\r\n                                    onClose={handleCloseSort}\r\n                                >\r\n                                    {sorts.map((elem, idx)=><MenuItem key={idx} onClick={()=>{sort===`-${elem.field}`?setSort(elem.field):setSort(`-${elem.field}`);handleCloseSort();}}>{sort===`-${elem.field}`?<ArrowDownward />:sort===elem.field?<ArrowUpward />:<div style={{width: '24px'}}/>}{elem.name}</MenuItem>)}\r\n                                </Menu>\r\n                                &nbsp;\r\n                                </>\r\n                                :null\r\n                            }\r\n                            <Tooltip title='Поиск'>\r\n                                <IconButton\r\n                                    aria-owns={openSearch ? 'menu-appbar' : undefined}\r\n                                    aria-haspopup='true'\r\n                                    onClick={()=>{setOpenSearch(true)}}\r\n                                    color='inherit'\r\n                                >\r\n                                    <Search />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                                       <Tooltip title='Профиль'>\r\n                                            <IconButton\r\n                                                aria-owns='menu-appbar'\r\n                                                aria-haspopup='true'\r\n                                                color='inherit'\r\n                                                onClick={handleMenuProfile}\r\n                                            >\r\n                                                <Badge badgeContent={countBasket} color='secondary'>\r\n                                                    <PermIdentity/>\r\n                                                </Badge>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    <Menu\r\n                                        id='menu-appbar'\r\n                                        anchorEl={anchorElProfile}\r\n                                        anchorOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        transformOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        open={openProfile}\r\n                                        onClose={handleCloseProfile}\r\n                                    >\r\n                                        {\r\n                                            !authenticated||profile.role==='client'?\r\n                                                [\r\n                                                    <MenuItem>\r\n                                                        <Badge badgeContent={countBasket} color='secondary'>\r\n                                                        <Link href='/basket'>\r\n                                                            <a style={{display: 'flex', color: '#606060'}}>\r\n                                                                  <LocalGroceryStore/>\r\n                                                                &nbsp;Корзина&nbsp;&nbsp;\r\n                                                            </a>\r\n                                                        </Link>\r\n                                                </Badge>\r\n                                                    </MenuItem>,\r\n                                                <MenuItem>\r\n                                                    <Link href='/favorite'>\r\n                                                        <a style={{display: 'flex', color: '#606060'}}>\r\n                                                            <Star/>&nbsp;Избранное\r\n                                                        </a>\r\n                                                    </Link>\r\n                                                </MenuItem>\r\n                                                ]\r\n                                                :\r\n                                                null\r\n                                        }\r\n                                        {\r\n                                            authenticated&&profile.role!=='admin'?\r\n                                                <MenuItem>\r\n                                                    <Link href={`/${profile.role==='client'?'client':'employment'}/[id]`} as={`/${profile.role==='client'?'client':'employment'}/${profile._id}`}>\r\n                                                        <a style={{display: 'flex', color: '#606060'}}>\r\n                                                            <AssignmentInd/>&nbsp;Профиль\r\n                                                        </a>\r\n                                                    </Link>\r\n                                                </MenuItem>\r\n                                                :\r\n                                                null\r\n                                        }\r\n                                        {\r\n                                            authenticated?\r\n                                                <MenuItem onClick={()=>{\r\n                                                    handleCloseProfile()\r\n                                                    const action = async() => {\r\n                                                        logout(true)\r\n                                                    }\r\n                                                    setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                    showMiniDialog(true)\r\n                                                }}>\r\n                                                    <div style={{display: 'flex', color: '#606060'}}>\r\n                                                        <ExitToApp/>&nbsp;Выйти\r\n                                                    </div>\r\n                                                </MenuItem>\r\n                                                :\r\n                                                <MenuItem onClick={()=>{\r\n                                                    handleCloseProfile()\r\n                                                    setMiniDialog('Вход', <Sign isMobileApp={isMobileApp}/>)\r\n                                                    showMiniDialog(true)\r\n                                                }}>\r\n                                                    <div style={{display: 'flex', color: '#606060'}}>\r\n                                                        <ExitToApp/>&nbsp;Войти\r\n                                                    </div>\r\n                                                </MenuItem>\r\n                                        }\r\n                                    </Menu>\r\n\r\n                            </>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n})\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAppBar);\r\n","import React, { useEffect, useState } from 'react';\nimport { getAds } from '../src/gql/ads'\nimport AppBar from '../components/app/AppBar'\nimport Dialog from '../components/app/Dialog'\nimport SnackBar from '../components/app/SnackBar'\nimport Drawer from '../components/app/Drawer'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { addFavoriteItem } from '../src/gql/items'\nimport { addBasket } from '../src/gql/basket'\nimport * as userActions from '../redux/actions/user'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport '../scss/app.scss'\n\nexport const mainWindow = React.createRef();\n\nconst App = React.memo(props => {\n    const { setProfile, logout } = props.userActions;\n    const { profile, authenticated } = props.user;\n    let { sorts, filters, getList, pageName } = props;\n    //let [ads, setAds] = useState({});\n    useEffect( ()=>{\n        if(authenticated)\n            setProfile()\n        else if(!authenticated&&profile.role)\n            logout(false)\n    },[authenticated,])\n    useEffect( ()=>{\n        (async ()=>{\n            if(authenticated){\n                if(localStorage.favorites&&localStorage.favorites!=='[]') {\n                    let favorites = JSON.parse(localStorage.favorites)\n                    favorites = favorites.map(element => element._id)\n                    await addFavoriteItem(favorites)\n                    localStorage.favorites = JSON.stringify([])\n                    if (getList !== undefined)\n                        await getList()\n                }\n                if(localStorage.basket&&localStorage.basket!=='[]') {\n                    let basket = JSON.parse(localStorage.basket)\n                    for(let i=0; i<basket.length; i++){\n                        await addBasket({item: basket[i].item._id, count: basket[i].count})\n                    }\n                    localStorage.basket = '[]'\n                    if (getList !== undefined)\n                        await getList()\n                }\n            }\n            setAds((await getAds()).ads)\n        })()\n    },[])\n    const { load } = props.app;\n    /*const { data: { data }, loading } = useSubscription(\n        BASKET_SUBSCRIPTION\n    );\n    console.log(data, loading)*/\n    return(\n        <div ref={mainWindow} className='App'>\n                <AppBar pageName={pageName} sorts={sorts} filters={filters}/>\n                <Drawer />\n                <div className='App-body'>\n                    {/*\n                        ads&&ads.url?\n                            <a href={ads.url}>\n                                <img\n                                    src={ads.image}\n                                    alt={ads.title}\n                                    className='marketImg'\n                                />\n                            </a>\n                            :\n                            null*/\n                    }\n                    {props.children}\n                </div>\n                <Dialog />\n                <SnackBar/>\n            {load?\n                <div className='load'>\n                    <CircularProgress/>\n                </div>\n                :\n                null\n            }\n        </div>\n    )\n});\n\nfunction mapStateToProps (state) {\n    return {\n        user: state.user,\n        app: state.app,\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        userActions: bindActionCreators(userActions, dispatch),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {\r\n    AUTHENTICATED,\r\n    UNAUTHENTICATED,\r\n    SET_PROFILE,\r\n    SET_AUTH,\r\n    ERROR_AUTHENTICATED\r\n} from '../constants/user'\r\nimport {\r\n    SHOW_MINI_DIALOG\r\n} from '../constants/mini_dialog'\r\nimport {\r\n    SET_COUNT_BASKET\r\n} from '../constants/app'\r\nimport Cookies from 'js-cookie';\r\nimport { gql } from 'apollo-boost';\r\nimport { SingletonApolloClient } from '../../src/singleton/client';\r\nimport Router from 'next/router'\r\nimport { SingletonStore } from '../../src/singleton/store';\r\n\r\nexport function signup(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const client = new SingletonApolloClient().getClient()\r\n            let result = await client.mutate({\r\n                variables: payload,\r\n                mutation : gql`\r\n                    mutation ($phone: String!, $password: String!) {\r\n                        signupuser(phone: $phone, password: $password) {\r\n                           role\r\n                           status\r\n                           phone\r\n                           organization\r\n                           _id\r\n                        }\r\n                    }`})\r\n            if(result.data.signupuser.role==='Проверьте данные')\r\n                await dispatch({\r\n                    type: ERROR_AUTHENTICATED,\r\n                    payload: true\r\n                })\r\n            else {\r\n                await dispatch({\r\n                    type: SHOW_MINI_DIALOG,\r\n                    payload: false\r\n                })\r\n                await Router.push('/')\r\n                /*\r\n                await dispatch({type: AUTHENTICATED});\r\n                await dispatch({\r\n                    type: SET_PROFILE,\r\n                    payload: result.data.signupuser\r\n                })*/\r\n                window.location.reload()\r\n            }\r\n        } catch(error) {\r\n            dispatch({\r\n                type: ERROR_AUTHENTICATED,\r\n                payload: true\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nexport function signin(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const client = new SingletonApolloClient().getClient();\r\n            let result = await client.mutate({\r\n                variables: payload,\r\n                mutation : gql`\r\n                    mutation ($phone: String!, $password: String!) {\r\n                        signinuser(phone: $phone, password: $password) {\r\n                           role\r\n                           status\r\n                           phone\r\n                           organization\r\n                           _id\r\n                        }\r\n                    }`})\r\n            if(result.data.signinuser.role==='Проверьте данные')\r\n                await dispatch({\r\n                    type: ERROR_AUTHENTICATED,\r\n                    payload: true\r\n                })\r\n            else {\r\n                await dispatch({\r\n                    type: SHOW_MINI_DIALOG,\r\n                    payload: false\r\n                })\r\n                await Router.push('/')\r\n                window.location.reload()\r\n                /*\r\n                await dispatch({type: AUTHENTICATED});\r\n                await dispatch({\r\n                    type: SET_PROFILE,\r\n                    payload: result.data.signinuser\r\n                })*/\r\n            }\r\n        } catch(error) {\r\n            console.error(error)\r\n            await dispatch({\r\n                type: ERROR_AUTHENTICATED,\r\n                payload: true\r\n            })\r\n        }\r\n    };\r\n}\r\n\r\nexport function checkAuthenticated() {\r\n    return async (dispatch) => {\r\n        try {\r\n            if (Cookies.get('jwt')) {\r\n                dispatch ({type: AUTHENTICATED});\r\n            } else {\r\n                dispatch ({type: UNAUTHENTICATED});\r\n            }\r\n        } catch (error) {\r\n            dispatch ({type: UNAUTHENTICATED});\r\n        }\r\n    };\r\n}\r\n\r\nexport function setAuthenticated(auth) {\r\n    return {\r\n        type: SET_AUTH,\r\n        payload: auth\r\n    }\r\n}\r\n\r\nexport function logout(reload) {\r\n    return async (dispatch) => {\r\n        await dispatch({\r\n            type: UNAUTHENTICATED,\r\n        })\r\n        if(reload)\r\n            await Router.push('/')\r\n        await Cookies.remove('jwt');\r\n        await dispatch({\r\n            type: SET_COUNT_BASKET,\r\n            payload: 0\r\n        })\r\n        await dispatch({\r\n            type: SET_PROFILE,\r\n            payload: {}\r\n        })\r\n        //setTimeout(()=>window.location.reload(),100)\r\n\r\n\r\n    }\r\n}\r\n\r\nexport function setProfile() {\r\n    return async (dispatch) => {\r\n        try {\r\n            const client = new SingletonApolloClient().getClient()\r\n            let result = await client\r\n                .query({\r\n                    query: gql`\r\n                    query {\r\n                        getStatus {\r\n                           role\r\n                           status\r\n                           phone\r\n                           organization\r\n                           _id\r\n                          }\r\n                    }`\r\n                })\r\n            await dispatch({\r\n                type: SET_PROFILE,\r\n                payload: result.data.getStatus\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport async function getProfile() {\r\n    try {\r\n        const client = new SingletonApolloClient().getClient()\r\n        let result = await client\r\n            .query({\r\n                query: gql`\r\n                   query {\r\n                       getStatus {\r\n                          role\r\n                          status\r\n                          phone\r\n                          organization\r\n                          _id\r\n                         }\r\n                   }`\r\n            })\r\n        return result.data.getStatus\r\n    } catch(error) {\r\n        console.error(error)\r\n    }\r\n}"],"mappings":"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","sourceRoot":""}