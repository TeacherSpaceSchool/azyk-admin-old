{"version":3,"file":"static/webpack/static\\development\\pages\\blog.js.3ef1d6c29cd8b68dff7e.hot-update.js","sources":["webpack:///./components/organization/CardOrganizationPlaceholder.js","webpack:///./pages/blog.js"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport cardCategoryStyle from '../../src/styleMUI/organization/cardOrganization'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nconst CardOrganizationPlaceholder = React.memo((props) => {\r\n    const classes = cardCategoryStyle();\r\n    const { height } = props;\r\n    const { isMobileApp } = props.app;\r\n    return (\r\n        <div className={isMobileApp?classes.cardM:classes.cardD} style={{height: height}}>\r\n            <Skeleton variant=\"rect\" height=\"100%\"/>\r\n        </div>\r\n    );\r\n})\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CardOrganizationPlaceholder)","import Head from 'next/head';\r\nimport React, { useState, useEffect } from 'react';\r\nimport App from '../layouts/App';\r\nimport pageListStyle from '../src/styleMUI/blog/blogList'\r\nimport {getBlogs} from '../src/gql/blog'\r\nimport CardBlog from '../components/blog/CardBlog'\r\nimport { connect } from 'react-redux'\r\nimport { urlMain } from '../redux/constants/other'\r\nimport LazyLoad from 'react-lazyload';\r\nimport CardOrganizationPlaceholder from '../components/organization/CardOrganizationPlaceholder'\r\n\r\nconst Blog = React.memo((props) => {\r\n    const classes = pageListStyle();\r\n    const { data } = props;\r\n    let [list, setList] = useState(data.blogs);\r\n    const { search, filter, sort } = props.app;\r\n    const { profile } = props.user;\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            setList((await getBlogs({search: search, sort: sort, filter: filter})).blogs)\r\n        })()\r\n    },[filter, sort, search])\r\n    let height = profile.role==='admin'?126:80\r\n    return (\r\n        <App filters={data.filterBlog} sorts={data.sortBlog} pageName='Блог'>\r\n            <Head>\r\n                <title>Блог</title>\r\n                <meta name='description' content='Азык – это онлайн платформа для заказа товаров оптом, разработанная специально для малого и среднего бизнеса.  Она объединяет производителей и торговые точки напрямую, сокращая расходы и повышая продажи. Азык предоставляет своим пользователям мощные технологии для масштабирования и развития своего бизнеса.' />\r\n                <meta property='og:title' content='Блог' />\r\n                <meta property='og:description' content='Азык – это онлайн платформа для заказа товаров оптом, разработанная специально для малого и среднего бизнеса.  Она объединяет производителей и торговые точки напрямую, сокращая расходы и повышая продажи. Азык предоставляет своим пользователям мощные технологии для масштабирования и развития своего бизнеса.' />\r\n                <meta property='og:type' content='website' />\r\n                <meta property='og:image' content={`${urlMain}/static/512x512.png`} />\r\n                <meta property=\"og:url\" content={`${urlMain}/blog`} />\r\n                <link rel='canonical' href={`${urlMain}/blog`}/>\r\n            </Head>\r\n            <div className={classes.page}>\r\n                {profile.role==='admin'?<CardBlog setList={setList}/>:null}\r\n                {list?list.map((element)=>\r\n                    <CardBlog key={element._id} setList={setList} element={element}/>\r\n                ):null}\r\n            </div>\r\n        </App>\r\n    )\r\n})\r\n\r\nBlog.getInitialProps = async function() {\r\n    return {\r\n        data: await getBlogs({search: '', sort: '-createdAt', filter: ''})\r\n    };\r\n};\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Blog);"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AADA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;A","sourceRoot":""}