{"version":3,"file":"static/webpack/static\\development\\pages\\employments.js.370775e9744f7c9f8bc4.hot-update.js","sources":["webpack:///./components/employment/CardEmploymentPlaceholder.js","webpack:///./pages/employments.js"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport cardStyle from '../../src/styleMUI/employment/cardEmployment'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nconst CardEmploymentPlaceholder = React.memo((props) => {\r\n    const classes = cardStyle();\r\n    const { isMobileApp } = props.app;\r\n    const height = 186\r\n    return (\r\n        <div className={isMobileApp?classes.cardM:classes.cardD} style={{height: height}}>\r\n            <Skeleton variant=\"rect\" height=\"100%\"/>\r\n        </div>\r\n    );\r\n})\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CardEmploymentPlaceholder)","import Head from 'next/head';\r\nimport React, { useState, useEffect } from 'react';\r\nimport App from '../layouts/App';\r\nimport pageListStyle from '../src/styleMUI/employment/employmentList'\r\nimport {getEmployments} from '../src/gql/employment'\r\nimport CardEmployment from '../components/employment/CardEmployment'\r\nimport { connect } from 'react-redux'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Link from 'next/link';\r\nimport Router from 'next/router'\r\nimport { urlMain } from '../redux/constants/other'\r\nimport LazyLoad from 'react-lazyload';\r\nimport CardEmploymentPlaceholder from '../components/employment/CardEmploymentPlaceholder'\r\nconst height = 186\r\n\r\nconst Employment = React.memo((props) => {\r\n    const { profile } = props.user;\r\n    const classes = pageListStyle();\r\n    const { data } = props;\r\n    let [list, setList] = useState(data.employments);\r\n    const { search, filter, sort } = props.app;\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            setList((await getEmployments({search: search, sort: sort, filter: filter})).employments)\r\n        })()\r\n    },[filter, sort, search])\r\n    return (\r\n        <App filters={data.filterEmployment} sorts={data.sortEmployment} pageName='Сотрудники'>\r\n            <Head>\r\n                <title>Сотрудники</title>\r\n                <meta name='description' content='Азык – это онлайн платформа для заказа товаров оптом, разработанная специально для малого и среднего бизнеса.  Она объединяет производителей и торговые точки напрямую, сокращая расходы и повышая продажи. Азык предоставляет своим пользователям мощные технологии для масштабирования и развития своего бизнеса.' />\r\n                <meta property='og:title' content='Сотрудники' />\r\n                <meta property='og:description' content='Азык – это онлайн платформа для заказа товаров оптом, разработанная специально для малого и среднего бизнеса.  Она объединяет производителей и торговые точки напрямую, сокращая расходы и повышая продажи. Азык предоставляет своим пользователям мощные технологии для масштабирования и развития своего бизнеса.' />\r\n                <meta property='og:type' content='website' />\r\n                <meta property='og:image' content={`${urlMain}/static/512x512.png`} />\r\n                <meta property=\"og:url\" content={`${urlMain}/employments`} />\r\n                <link rel='canonical' href={`${urlMain}/employments`}/>\r\n            </Head>\r\n            <div className={classes.page}>\r\n                {list?list.map((element)=>\r\n                    <LazyLoad scrollContainer={'.App-body'} key={element._id} height={height} offset={[height, 0]} debounce={100}  placeholder={<CardEmploymentPlaceholder height={height}/>}>\r\n                        <CardEmployment key={element._id} setList={setList} element={element}/>\r\n                    </LazyLoad>\r\n                ):null}\r\n            </div>\r\n            {['admin', 'организация'].includes(profile.role)?\r\n                <Link href='/employment/[id]' as={`/employment/new`}>\r\n                    <Fab color='primary' aria-label='add' className={classes.fab}>\r\n                        <AddIcon />\r\n                    </Fab>\r\n                </Link>\r\n                :\r\n                null\r\n            }\r\n        </App>\r\n    )\r\n})\r\n\r\nEmployment.getInitialProps = async function(ctx) {\r\n    if(!['admin', 'организация', 'менеджер'].includes(ctx.store.getState().user.profile.role))\r\n        if(ctx.res) {\r\n            ctx.res.writeHead(302, {\r\n                Location: '/'\r\n            })\r\n            ctx.res.end()\r\n        } else\r\n            Router.push('/')\r\n    return {\r\n        data: await getEmployments({search: '', sort: '-createdAt', filter: ''})\r\n    };\r\n};\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Employment);"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AADA;AAGA;AACA;AAPA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AAXA;AAAA;AAAA;AAUA;AAVA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAaA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;A","sourceRoot":""}