{"version":3,"file":"static/webpack/static\\development\\pages\\basket.js.be72aeeab66d831e10e9.hot-update.js","sources":["webpack:///./pages/basket.js"],"sourcesContent":["import Head from 'next/head';\r\nimport React, { useState, useEffect } from 'react';\r\nimport App from '../layouts/App';\r\nimport { connect } from 'react-redux'\r\nimport pageListStyle from '../src/styleMUI/basket/basket'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../redux/actions/mini_dialog'\r\nimport * as snackbarActions from '../redux/actions/snackbar'\r\nimport { getBasket, setBasket, deleteBasket } from '../src/gql/basket';\r\nimport { getClient } from '../src/gql/client';\r\nimport Router from 'next/router'\r\nimport BuyBasket from '../components/dialog/BuyBasket'\r\nimport Sign from '../components/dialog/Sign'\r\nimport Confirmation from '../components/dialog/Confirmation'\r\n\r\nconst Basket = React.memo((props) => {\r\n    const { authenticated } = props.user;\r\n    const classes = pageListStyle();\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    const { showSnackBar } = props.snackbarActions;\r\n    const { data } = props;\r\n    let [list, setList] = useState(data.baskets);\r\n    let [allPrice, setAllPrice] = useState(0);\r\n    const { isMobileApp } = props.app;\r\n    let increment = (idx)=>{\r\n        list[idx].count+=1\r\n        setBasketChange(idx, list[idx].count)\r\n        setList([...list])\r\n    }\r\n    let decrement = (idx)=>{\r\n        if(list[idx].count>0) {\r\n            list[idx].count -= 1\r\n            setBasketChange(idx, list[idx].count)\r\n            setList([...list])\r\n        }\r\n    }\r\n    let setBasketChange= (idx, count)=>{\r\n        if(authenticated)\r\n            setBasket({_id: list[idx]._id, count: count})\r\n        else {\r\n            let list = JSON.parse(localStorage.basket);\r\n            list[idx].count = count;\r\n            localStorage.basket = JSON.stringify(list);\r\n        }\r\n    }\r\n    let removeBasketChange= async (idx)=>{\r\n        const action = async() => {\r\n            if(authenticated) {\r\n                deleteBasket([list[idx]._id])\r\n                setList((await getBasket()).baskets)\r\n            } else {\r\n                let list = JSON.parse(localStorage.basket)\r\n                list.splice(idx, 1)\r\n                localStorage.basket = JSON.stringify(list)\r\n                setList(list)\r\n            }\r\n        }\r\n        setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n        showMiniDialog(true)\r\n    }\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            if(!authenticated){\r\n                if(localStorage.basket==undefined) {\r\n                    localStorage.basket = JSON.stringify([])\r\n                }\r\n                setList(JSON.parse(localStorage.basket))\r\n            }\r\n        })()\r\n    },[])\r\n    useEffect(()=>{\r\n        calculateAllPrice()\r\n    },[list])\r\n    let getList = async()=>{\r\n        setList((await getBasket()).baskets)\r\n    };\r\n    let calculateAllPrice = async()=>{\r\n        let allPrice = 0\r\n        for(let i=0;i < list.length; i++){\r\n            allPrice+=((list[i].item.stock===0||list[i].item.stock===undefined?list[i].item.price:list[i].item.stock)*list[i].count)\r\n        }\r\n        setAllPrice(allPrice)\r\n    };\r\n    return (\r\n        <App getList={getList} pageName='Корзина'>\r\n            <Head>\r\n                <title>Корзина</title>\r\n            </Head>\r\n                {\r\n                        isMobileApp?\r\n                            <div className={classes.column} style={{width: 'calc(100% - 16px)', margin: 8}}>\r\n                                {\r\n                                    list.map((row, idx) => (\r\n                                        <Card className={classes.page} key={idx}>\r\n                                            <CardActions className={classes.column} style={isMobileApp?{}:{justifyContent: 'start', alignItems: 'flex-start'}}>\r\n                                                <div className={classes.itemM}>\r\n                                                <div className={classes.divImage}>\r\n                                                    <img className={classes.mediaM} src={row.item.image}/>\r\n                                                    <IconButton onClick={()=>{removeBasketChange(idx)}} color=\"primary\" className={classes.cancelM}>\r\n                                                        <CancelIcon style={{height: 40, width: 40}} />\r\n                                                    </IconButton>\r\n                                                </div>\r\n                                                <br/>\r\n                                                <div className={classes.nameM}>\r\n                                                    {row.item.name}\r\n                                                </div>\r\n                                                <br/>\r\n                                                <div className={classes.counter} style={isMobileApp?{marginBottom: 20}:{marginRight: 20}}>\r\n                                                    <div className={classes.counterbtn} onClick={()=>{decrement(idx)}}>–</div>\r\n                                                    <input type='text' className={classes.counternmbr} value={row.count} onChange={(event)=>{\r\n                                                        list[idx].count = isNaN(event.target.value)||event.target.value.length===0?0:parseInt(event.target.value)\r\n                                                        setBasketChange(idx, list[idx].count)\r\n                                                        setList([...list])\r\n                                                    }}/>\r\n                                                    <div className={classes.counterbtn} onClick={()=>{increment(idx)}}>+</div>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <div className={classes.row}>\r\n                                                        <div className={classes.nameField}>\r\n                                                            Цена\r\n                                                        </div>\r\n                                                        <div className={classes.value}>\r\n                                                            {`${row.item.stock===0||row.item.stock===undefined?row.item.price:row.item.stock} сом`}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className={classes.row}>\r\n                                                        <div className={classes.nameField}>\r\n                                                            Итого\r\n                                                        </div>\r\n                                                        <div className={classes.value}>\r\n                                                            {`${(row.item.stock===0||row.item.stock===undefined?row.item.price:row.item.stock)*row.count} сом`}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            </CardActions>\r\n                                        </Card>\r\n                                    ))\r\n                                }\r\n                                <div style={{height: 70}}/>\r\n                            </div>\r\n                            :\r\n                            <>\r\n                            <Card className={classes.page}>\r\n                                <CardActions className={classes.column} style={isMobileApp?{}:{justifyContent: 'start', alignItems: 'flex-start'}}>\r\n                                <Table aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell/>\r\n                                        <TableCell align=\"left\">Количество</TableCell>\r\n                                        <TableCell align=\"left\">Цена</TableCell>\r\n                                        <TableCell align=\"left\">Итого</TableCell>\r\n                                        <TableCell align=\"center\">Отменить</TableCell>\r\n                                    </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {list.map((row, idx) => (\r\n                                            <TableRow key={idx}>\r\n                                                <TableCell component=\"th\" scope=\"row\" >\r\n                                                    <div className={classes.row}>\r\n                                                        <img className={classes.mediaD} src={row.item.image}/>\r\n                                                        <div className={classes.nameD}>\r\n                                                            {row.item.name}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">\r\n\r\n                                                    <div className={classes.counterD} style={isMobileApp?{marginBottom: 20}:{marginRight: 20}}>\r\n                                                        <div className={classes.counterbtnD} onClick={()=>{decrement(idx)}}>–</div>\r\n                                                        <input type='text' className={classes.counternmbrD} value={row.count} onChange={(event)=>{\r\n                                                            list[idx].count = isNaN(event.target.value)||event.target.value.length===0?0:parseInt(event.target.value)\r\n                                                            setBasketChange(idx, list[idx].count)\r\n                                                            setList([...list])\r\n                                                        }}/>\r\n                                                        <div className={classes.counterbtnD} onClick={()=>{increment(idx)}}>+</div>\r\n                                                    </div>\r\n\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">{`${row.item.stock===0||row.item.stock===undefined?row.item.price:row.item.stock*row.count} сом`}</TableCell>\r\n                                                <TableCell align=\"left\">{`${(row.item.stock===0||row.item.stock===undefined?row.item.price:row.item.stock*row.count)*row.count} сом`}</TableCell>\r\n                                                <TableCell align=\"center\">\r\n                                                    <IconButton onClick={()=>{removeBasketChange(idx)}} color=\"primary\" className={classes.button} aria-label=\"add to shopping cart\">\r\n                                                        <CancelIcon />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </CardActions>\r\n                            </Card>\r\n                            <div style={{height: 70}}/>\r\n                            </>\r\n                    }\r\n            <div className={isMobileApp?classes.bottomBasketM:classes.bottomBasketD}>\r\n                <div className={isMobileApp?classes.allPriceM:classes.allPriceD}>\r\n                    <div className={isMobileApp?classes.value:classes.priceAllText}>Общая стоимость</div>\r\n                    <div className={isMobileApp?classes.nameM:classes.priceAll}>{`${allPrice} сом`}</div>\r\n                </div>\r\n                <div className={isMobileApp?classes.buyM:classes.buyD} onClick={()=>{\r\n                    if(allPrice>0) {\r\n                        if (authenticated)\r\n                            setMiniDialog('Купить', <BuyBasket client={data.client} allPrice={allPrice}/>)\r\n                        else\r\n                            setMiniDialog('Купить', <Sign/>)\r\n                        showMiniDialog(true)\r\n                    } else\r\n                        showSnackBar('Добавьте товар в корзину')\r\n                }}>\r\n                    КУПИТЬ\r\n                </div>\r\n            </div>\r\n        </App>\r\n    )\r\n})\r\n\r\nBasket.getInitialProps = async function(ctx) {\r\n    console.log()\r\n    if('client'===ctx.store.getState().user.profile.role||!ctx.store.getState().user.authenticated)\r\n        if(ctx.res) {\r\n            ctx.res.writeHead(302, {\r\n                Location: '/'\r\n            })\r\n            ctx.res.end()\r\n        } else\r\n            Router.push('/')\r\n    return {\r\n        data: {\r\n            ...await getBasket(),\r\n            ...(ctx.store.getState().user.profile._id?await getClient({_id: ctx.store.getState().user.profile._id}):[])\r\n        }\r\n    };\r\n};\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Basket);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAFA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAcroCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AARA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAaA;AAAA;AACA;AAdA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAWA;AAXA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAiBA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;A","sourceRoot":""}