{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.9f18aa97ffa4286af775.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react';\nimport App  from 'next/app';\nimport { ThemeProvider } from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../src/theme';\nimport withRedux from 'next-redux-wrapper';\nimport configureStore from '../redux/configureStore'\nimport { Provider } from 'react-redux';\nimport { SingletonApolloClient } from '../src/singleton/client'\nimport { SingletonStore } from '../src/singleton/store'\nimport { getProfile } from '../redux/actions/user'\nimport { checkMobile, checkAuth } from '../src/lib'\n\nexport default withRedux(configureStore, { debug: true })(\n    class MyApp extends App {\n        static componentDidMount() {\n            // Remove the server-side injected CSS.\n            const jssStyles = document.querySelector('#jss-server-side');\n            if (jssStyles) {\n                jssStyles.parentNode.removeChild(jssStyles);\n            }\n        }\n        static async getInitialProps({ Component, ctx }) {\n            new SingletonApolloClient(ctx.req)\n            if(ctx.req){\n                ctx.store.getState().app.isMobileApp = checkMobile(ctx.req.headers['user-agent'])\n                ctx.store.getState().user.authenticated = checkAuth(ctx.req.headers.cookie)\n                console.log(await getProfile())\n                if(ctx.store.getState().user.authenticated)\n                    ctx.store.getState().user.profile = await getProfile()\n            }\n            ctx.store.getState().app.search = ''\n            ctx.store.getState().app.sort = '-updatedAt'\n            ctx.store.getState().app.filter = ''\n            return {\n                pageProps: {\n                    ...(Component.getInitialProps\n                        ? await Component.getInitialProps(ctx)\n                        : {}),\n                }\n            };\n        }\n\n        render() {\n            const { Component, pageProps, store } = this.props;\n            new SingletonStore(store)\n            return (\n                <React.Fragment>\n                    <ThemeProvider theme={theme}>\n                        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n                        <CssBaseline />\n                        <Provider store={store}>\n                                <Component {...pageProps} />\n                        </Provider>\n                    </ThemeProvider>\n                </React.Fragment>\n            );\n        }\n    }\n\n)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AA8BA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AA5CA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AAbA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAgBA;AACA;AAjBA;AAkBA;AACA;AACA;AApBA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAsBA;AAtBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;;;;A","sourceRoot":""}