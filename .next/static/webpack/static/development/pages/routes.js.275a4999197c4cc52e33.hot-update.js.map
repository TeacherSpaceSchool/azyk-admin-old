{"version":3,"file":"static/webpack/static\\development\\pages\\routes.js.275a4999197c4cc52e33.hot-update.js","sources":["webpack:///./src/gql/route.js"],"sourcesContent":["import { gql } from 'apollo-boost';\r\nimport { SingletonApolloClient } from '../singleton/client';\r\nimport { SingletonStore } from '../singleton/store';\r\n\r\nexport const getRoutes = async({search, sort, filter})=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        let res = await client\r\n            .query({\r\n                variables: {search: search, sort: sort, filter: filter},\r\n                query: gql`\r\n                    query ($search: String!, $sort: String!, $filter: String!) {\r\n                        routes(search: $search, sort: $sort, filter: $filter) {\r\n                            _id\r\n                            updatedAt\r\n                            invoices\r\n                                {\r\n                                    _id\r\n                                    updatedAt\r\n                                    orders \r\n                                        { \r\n                                            _id\r\n                                            updatedAt\r\n                                            item\r\n                                                {\r\n                                                    image\r\n                                                    _id\r\n                                                    name    \r\n                                                    organization\r\n                                                        {_id name}\r\n                                                }\r\n                                            count\r\n                                            allPrice\r\n                                            status\r\n                                         }\r\n                                    client \r\n                                        { \r\n                                            _id\r\n                                            name\r\n                                            email\r\n                                            user \r\n                                                {_id phone} \r\n                                        }\r\n                                    allPrice\r\n                                    info\r\n                                    address\r\n                                    paymentMethod\r\n                                    number\r\n                                    confirmationForwarder\r\n                                    confirmationClient\r\n                                }\r\n                            employment\r\n                                { \r\n                                    _id\r\n                                    updatedAt\r\n                                    name\r\n                                    email\r\n                                    user \r\n                                        {_id role status phone}\r\n                                    organization \r\n                                        {_id name}\r\n                                }\r\n                            status\r\n                            dateStart\r\n                            dateEnd\r\n                            number\r\n                        }\r\n                        sortRoute {\r\n                            name\r\n                            field\r\n                        }\r\n                        filterRoute {\r\n                           name\r\n                           value\r\n                        }\r\n                    }`,\r\n            })\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const getRoute = async({_id})=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        let res = await client\r\n            .query({\r\n                variables: {_id: _id},\r\n                query: gql`\r\n                    query ($_id: ID!) {\r\n                        route(_id: $_id) {\r\n                            _id\r\n                            updatedAt\r\n                            invoices\r\n                                {\r\n                                    _id\r\n                                    updatedAt\r\n                                    orders \r\n                                        { \r\n                                            _id\r\n                                            updatedAt\r\n                                            item\r\n                                                {\r\n                                                    image\r\n                                                    _id\r\n                                                    name    \r\n                                                    organization\r\n                                                        {_id name}\r\n                                                }\r\n                                            count\r\n                                            allPrice\r\n                                            status\r\n                                         }\r\n                                    client \r\n                                        { \r\n                                            _id\r\n                                            name\r\n                                            email\r\n                                            user \r\n                                                {_id phone} \r\n                                        }\r\n                                    allPrice\r\n                                    info\r\n                                    address\r\n                                    paymentMethod\r\n                                    number\r\n                                    confirmationForwarder\r\n                                    confirmationClient\r\n                                }\r\n                            employment\r\n                                { \r\n                                    _id\r\n                                    updatedAt\r\n                                    name\r\n                                    email\r\n                                    user \r\n                                        {_id role status phone}\r\n                                    organization \r\n                                        {_id name}\r\n                                }\r\n                            status\r\n                            dateStart\r\n                            dateEnd\r\n                            number\r\n                        }\r\n                    }`,\r\n            })\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const deleteRoute = async(ids)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {_id: ids},\r\n            mutation : gql`\r\n                    mutation ($_id: [ID]!) {\r\n                        deleteRoute(_id: $_id) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        return await getRoutes(new SingletonStore().getStore().getState().app)\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const addRoute = async(element)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: element,\r\n            mutation : gql`\r\n                    mutation ($invoices: [ID]!, $employment: ID!, $dateStart: Date!) {\r\n                        addRoute(invoices: $invoices, employment: $employment, dateStart: $dateStart) {\r\n                             data\r\n                        }\r\n                    }`})\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const setRoute = async(element)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: element,\r\n            mutation : gql`\r\n                    mutation ($_id: ID!, $invoices: [ID], $employment: ID, $cancelInvoices: [ID], $dateStart: Date) {\r\n                        setRoute(_id: $_id, invoices: $invoices, employment: $employment, cancelInvoices: $cancelInvoices, dateStart: $dateStart) {\r\n                             data\r\n                        }\r\n                    }`})\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAFA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AACA;AALA;AAGA;AAHA;AACA;AADA;AAAA;AAAA;AA2EA;AACA;AA5EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AA+EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAFA;AAAA;AAKA;AAAA;AAAA;AACA;AAFA;AACA;AALA;AAGA;AAHA;AACA;AADA;AAAA;AAAA;AAmEA;AACA;AApEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAuEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAFA;AAAA;AAIA;AAAA;AAAA;AACA;AAFA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAaA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAFA;AAAA;AAIA;AACA;AAFA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAYA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAFA;AAAA;AAIA;AACA;AAFA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAYA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}