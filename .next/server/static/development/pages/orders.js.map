{"version":3,"file":"static\\development\\pages\\orders.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/app/AppBar.js","webpack:///./components/app/Dialog.js","webpack:///./components/app/Drawer.js","webpack:///./components/app/SnackBar.js","webpack:///./components/dialog/Confirmation.js","webpack:///./components/dialog/Geo.js","webpack:///./components/dialog/Order.js","webpack:///./components/dialog/SetDate.js","webpack:///./components/dialog/Sign.js","webpack:///./components/order/CardOrder.js","webpack:///./components/order/CardOrderPlaceholder.js","webpack:///./layouts/App.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/map.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/assign.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-int.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/extends.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/interopRequireWildcard.js","webpack:///./node_modules/next/dist/client/link.js","webpack:///./node_modules/next/dist/client/router.js","webpack:///./node_modules/next/dist/client/with-router.js","webpack:///./node_modules/next/link.js","webpack:///./pages/orders.js","webpack:///./redux/actions/app.js","webpack:///./redux/actions/mini_dialog.js","webpack:///./redux/actions/pagination.js","webpack:///./redux/actions/snackbar.js","webpack:///./redux/actions/user.js","webpack:///./redux/constants/app.js","webpack:///./redux/constants/mini_dialog.js","webpack:///./redux/constants/other.js","webpack:///./redux/constants/pagination.js","webpack:///./redux/constants/snackbar.js","webpack:///./redux/constants/user.js","webpack:///./src/gql/basket.js","webpack:///./src/gql/items.js","webpack:///./src/gql/order.js","webpack:///./src/lib.js","webpack:///./src/singleton/client.js","webpack:///./src/singleton/store.js","webpack:///./src/styleMUI/appbar.js","webpack:///./src/styleMUI/dialogContent.js","webpack:///./src/styleMUI/drawer.js","webpack:///./src/styleMUI/orders/cardOrder.js","webpack:///./src/styleMUI/orders/orderList.js","webpack:///external \"@material-ui/core/AppBar\"","webpack:///external \"@material-ui/core/Badge\"","webpack:///external \"@material-ui/core/Button\"","webpack:///external \"@material-ui/core/Card\"","webpack:///external \"@material-ui/core/CardActionArea\"","webpack:///external \"@material-ui/core/CardContent\"","webpack:///external \"@material-ui/core/Checkbox\"","webpack:///external \"@material-ui/core/CircularProgress\"","webpack:///external \"@material-ui/core/Dialog\"","webpack:///external \"@material-ui/core/DialogContent\"","webpack:///external \"@material-ui/core/DialogTitle\"","webpack:///external \"@material-ui/core/Divider\"","webpack:///external \"@material-ui/core/Fab\"","webpack:///external \"@material-ui/core/FormControl\"","webpack:///external \"@material-ui/core/FormControlLabel\"","webpack:///external \"@material-ui/core/IconButton\"","webpack:///external \"@material-ui/core/Input\"","webpack:///external \"@material-ui/core/InputAdornment\"","webpack:///external \"@material-ui/core/InputLabel\"","webpack:///external \"@material-ui/core/List\"","webpack:///external \"@material-ui/core/ListItem\"","webpack:///external \"@material-ui/core/ListItemIcon\"","webpack:///external \"@material-ui/core/ListItemText\"","webpack:///external \"@material-ui/core/Menu\"","webpack:///external \"@material-ui/core/MenuItem\"","webpack:///external \"@material-ui/core/Paper\"","webpack:///external \"@material-ui/core/Snackbar\"","webpack:///external \"@material-ui/core/SwipeableDrawer\"","webpack:///external \"@material-ui/core/TextField\"","webpack:///external \"@material-ui/core/Toolbar\"","webpack:///external \"@material-ui/core/Tooltip\"","webpack:///external \"@material-ui/core/Typography\"","webpack:///external \"@material-ui/core/styles\"","webpack:///external \"@material-ui/icons/ArrowDownward\"","webpack:///external \"@material-ui/icons/ArrowUpward\"","webpack:///external \"@material-ui/icons/ArtTrack\"","webpack:///external \"@material-ui/icons/AssignmentInd\"","webpack:///external \"@material-ui/icons/Cancel\"","webpack:///external \"@material-ui/icons/Clear\"","webpack:///external \"@material-ui/icons/DateRange\"","webpack:///external \"@material-ui/icons/Done\"","webpack:///external \"@material-ui/icons/ExitToApp\"","webpack:///external \"@material-ui/icons/FilterListRounded\"","webpack:///external \"@material-ui/icons/FormatListNumbered\"","webpack:///external \"@material-ui/icons/GpsFixed\"","webpack:///external \"@material-ui/icons/Group\"","webpack:///external \"@material-ui/icons/Info\"","webpack:///external \"@material-ui/icons/LocalGroceryStore\"","webpack:///external \"@material-ui/icons/LocationCity\"","webpack:///external \"@material-ui/icons/Loyalty\"","webpack:///external \"@material-ui/icons/Menu\"","webpack:///external \"@material-ui/icons/Money\"","webpack:///external \"@material-ui/icons/PermIdentity\"","webpack:///external \"@material-ui/icons/Receipt\"","webpack:///external \"@material-ui/icons/SearchRounded\"","webpack:///external \"@material-ui/icons/SortRounded\"","webpack:///external \"@material-ui/icons/Star\"","webpack:///external \"@material-ui/icons/UnfoldLess\"","webpack:///external \"@material-ui/icons/UnfoldMore\"","webpack:///external \"@material-ui/icons/ViewList\"","webpack:///external \"@material-ui/icons/Visibility\"","webpack:///external \"@material-ui/icons/VisibilityOff\"","webpack:///external \"@material-ui/icons/Whatshot\"","webpack:///external \"@material-ui/lab/Skeleton\"","webpack:///external \"apollo-boost\"","webpack:///external \"apollo-cache-inmemory\"","webpack:///external \"apollo-client\"","webpack:///external \"apollo-link\"","webpack:///external \"apollo-link-context\"","webpack:///external \"apollo-link-error\"","webpack:///external \"apollo-upload-client\"","webpack:///external \"classnames\"","webpack:///external \"core-js/library/fn/json/stringify\"","webpack:///external \"core-js/library/fn/map\"","webpack:///external \"core-js/library/fn/object/assign\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptor\"","webpack:///external \"core-js/library/fn/object/get-own-property-symbols\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"core-js/library/fn/parse-int\"","webpack:///external \"js-cookie\"","webpack:///external \"next-server/dist/lib/router-context\"","webpack:///external \"next-server/dist/lib/router/rewrite-url-for-export\"","webpack:///external \"next-server/dist/lib/router/router\"","webpack:///external \"next-server/dist/lib/utils\"","webpack:///external \"next/head\"","webpack:///external \"next/router\"","webpack:///external \"node-fetch\"","webpack:///external \"prop-types\"","webpack:///external \"prop-types-exact\"","webpack:///external \"react\"","webpack:///external \"react-bottom-scroll-listener\"","webpack:///external \"react-lazyload\"","webpack:///external \"react-redux\"","webpack:///external \"react-yandex-maps\"","webpack:///external \"redux\"","webpack:///external \"url\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","import Link from 'next/link';\r\nimport React, { useState, useEffect } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport LocalGroceryStore from '@material-ui/icons/LocalGroceryStore';\r\nimport Star from '@material-ui/icons/Star';\r\nimport ExitToApp from '@material-ui/icons/ExitToApp';\r\nimport AssignmentInd from '@material-ui/icons/AssignmentInd';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as userActions from '../../redux/actions/user'\r\nimport * as appActions from '../../redux/actions/app'\r\nimport appbarStyle from '../../src/styleMUI/appbar'\r\nimport { getCountBasket } from '../../src/gql/basket'\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Cancel from '@material-ui/icons/Cancel';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Search from '@material-ui/icons/SearchRounded';\r\nimport Sort from '@material-ui/icons/SortRounded';\r\nimport FilterList from '@material-ui/icons/FilterListRounded';\r\nimport DateRange from '@material-ui/icons/DateRange';\r\nimport PermIdentity from '@material-ui/icons/PermIdentity';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Sign from '../dialog/Sign'\r\nimport Confirmation from '../dialog/Confirmation'\r\nimport SetDate from '../dialog/SetDate'\r\n\r\nconst MyAppBar = React.memo((props) => {\r\n    //props\r\n    const classes = appbarStyle();\r\n    const { filters, sorts, pageName, dates } = props\r\n    const { drawer, search, filter, sort, isMobileApp, countBasket, date } = props.app;\r\n    const { showDrawer, setSearch, setFilter, setSort, setDate } = props.appActions;\r\n    const { authenticated, profile } = props.user;\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    const { logout } = props.userActions;\r\n    //state\r\n    const [anchorElMobileMenu, setAnchorElMobileMenu] = React.useState(null);\r\n    const openMobileMenu = Boolean(anchorElMobileMenu);\r\n    let handleMobileMenu = (event) => {\r\n        setAnchorElMobileMenu(event.currentTarget);\r\n    }\r\n    let handleCloseMobileMenu = () => {\r\n        setAnchorElMobileMenu(null);\r\n    }\r\n    const [anchorElSort, setAnchorElSort] = useState(null);\r\n    const openSort = Boolean(anchorElSort);\r\n    let handleMenuSort = (event) => {\r\n        setAnchorElSort(event.currentTarget);\r\n    }\r\n    let handleCloseSort = () => {\r\n        setAnchorElSort(null);\r\n    }\r\n    const [anchorElProfile, setAnchorElProfile] = useState(null);\r\n    const openProfile = Boolean(anchorElProfile);\r\n    let handleMenuProfile = (event) => {\r\n        setAnchorElProfile(event.currentTarget);\r\n    }\r\n    let handleCloseProfile = () => {\r\n        setAnchorElProfile(null);\r\n    }\r\n    const [anchorElFilter, setAnchorElFilter] = useState(null);\r\n    const openFilter = Boolean(anchorElFilter);\r\n    let handleMenuFilter = (event) => {\r\n        setAnchorElFilter(event.currentTarget);\r\n    }\r\n    let handleCloseFilter = () => {\r\n        setAnchorElFilter(null);\r\n    }\r\n    const [anchorElDate, setAnchorElDate] = useState(null);\r\n    const openDate = Boolean(anchorElDate);\r\n    let handleMenuDate = (event) => {\r\n        setAnchorElDate(event.currentTarget);\r\n    }\r\n    let handleCloseDate = () => {\r\n        setAnchorElDate(null);\r\n    }\r\n    const [openSearch, setOpenSearch] = useState(false);\r\n    let handleSearch = (event) => {\r\n        setSearch(event.target.value)\r\n    };\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            getCountBasket()\r\n        })()\r\n    },[])\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position='fixed' className='appBar'>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge='start'\r\n                        aria-owns='menu-appbar'\r\n                        aria-haspopup='true'\r\n                        onClick={() => {showDrawer(!drawer)}}\r\n                        color='inherit'\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant='h6' className={classes.title}>\r\n                        {pageName}\r\n                    </Typography>\r\n                    {isMobileApp?\r\n                        openSearch?\r\n                            <Paper className={classes.searchM}>\r\n                                    <Input className={classes.searchField}\r\n                                        id='adornment-password'\r\n                                        type={'login'}\r\n                                        value={search}\r\n                                        onChange={handleSearch}\r\n                                        endAdornment={\r\n                                            <InputAdornment position='end'>\r\n                                                <IconButton aria-label='Search' onClick={()=>{setSearch('');setOpenSearch(false)}}>\r\n                                                    <Cancel />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }/>\r\n                            </Paper>\r\n                            :\r\n                            <>\r\n                            <IconButton\r\n                                aria-owns={openMobileMenu ? 'menu-appbar' : undefined}\r\n                                aria-haspopup='true'\r\n                                onClick={handleMobileMenu}\r\n                                color='inherit'\r\n                            >\r\n                                <Search />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id='menu-appbar'\r\n                                anchorEl={anchorElMobileMenu}\r\n                                anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                transformOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={openMobileMenu}\r\n                                onClose={handleCloseMobileMenu}\r\n                            >\r\n                                <MenuItem onClick={()=>{\r\n                                    setOpenSearch(true);handleCloseMobileMenu()\r\n                                }}>\r\n                                    <div style={{display: 'flex', color: '#606060'}}>\r\n                                        <Search/>&nbsp;Поиск\r\n                                    </div>\r\n                                </MenuItem>\r\n                                {filters&&filters.length>0?\r\n                                    [\r\n                                        <MenuItem onClick={handleMenuFilter}>\r\n                                            <div style={{display: 'flex', color: '#606060'}}>\r\n                                                <FilterList/>&nbsp;Фильтр\r\n                                            </div>\r\n                                        </MenuItem>,\r\n                                        <Menu\r\n                                            key='filter'\r\n                                            id='menu-appbar'\r\n                                            anchorEl={anchorElFilter}\r\n                                            anchorOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right',\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right',\r\n                                            }}\r\n                                            open={openFilter}\r\n                                            onClose={handleCloseFilter}\r\n                                        >\r\n                                            {filters.map((elem, idx)=><MenuItem key={'filter'+idx} style={{background: filter===elem.value?'rgba(51, 143, 255, 0.29)': '#fff'}}  onClick={()=>{setFilter(elem.value);handleCloseFilter();}}>{elem.name}</MenuItem>)}\r\n                                        </Menu>\r\n                                    ]\r\n                                    :null\r\n                                }\r\n                                {dates?\r\n                                    [\r\n                                        <MenuItem onClick={handleMenuDate}>\r\n                                            <div style={{display: 'flex', color: '#606060'}}>\r\n                                                <DateRange/>&nbsp;Дата\r\n                                            </div>\r\n                                        </MenuItem>,\r\n                                        <Menu\r\n                                            key='Date'\r\n                                            id='menu-appbar'\r\n                                            anchorEl={anchorElDate}\r\n                                            anchorOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right',\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right',\r\n                                            }}\r\n                                            open={openDate}\r\n                                            onClose={handleCloseDate}\r\n                                        >\r\n                                            <MenuItem style={{background: date!==''?'rgba(51, 143, 255, 0.29)': '#fff'}} onClick={()=>{setMiniDialog('Дата', <SetDate/>);showMiniDialog(true);handleCloseDate();handleCloseMobileMenu();}}>\r\n                                                По дате\r\n                                            </MenuItem>\r\n                                            <MenuItem style={{background: date===''?'rgba(51, 143, 255, 0.29)': '#fff'}} onClick={()=>{setDate('');handleCloseDate();}}>\r\n                                                Все\r\n                                            </MenuItem>\r\n                                        </Menu>\r\n                                    ]\r\n                                    :null\r\n                                }\r\n                                {sorts&&sorts.length>0?\r\n                                    [\r\n                                        <MenuItem onClick={handleMenuSort}>\r\n                                            <div style={{display: 'flex', color: '#606060'}}>\r\n                                                <Sort/>&nbsp;Сортировка\r\n                                            </div>\r\n                                        </MenuItem>,\r\n                                        <Menu\r\n                                            key='sort'\r\n                                            id='menu-appbar'\r\n                                            anchorEl={anchorElSort}\r\n                                            anchorOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'left',\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'left',\r\n                                            }}\r\n                                            open={openSort}\r\n                                            onClose={handleCloseSort}\r\n                                        >\r\n                                            {sorts.map((elem, idx)=><MenuItem key={'sort'+idx} onClick={()=>{sort===`-${elem.field}`?setSort(elem.field):setSort(`-${elem.field}`);/*handleCloseSort();handleCloseMobileMenu()*/}}>{sort===`-${elem.field}`?<ArrowDownward />:sort===elem.field?<ArrowUpward />:<div style={{width: '24px'}}/>}{elem.name}</MenuItem>)}\r\n                                        </Menu>\r\n                                    ]\r\n                                    :null\r\n                                }\r\n                            </Menu>\r\n                                    <Tooltip title='Профиль'>\r\n                                        <IconButton\r\n                                            aria-owns='menu-appbar'\r\n                                            aria-haspopup='true'\r\n                                            color='inherit'\r\n                                            onClick={handleMenuProfile}\r\n                                        >\r\n                                            <Badge badgeContent={countBasket} color='secondary'>\r\n                                                <PermIdentity/>\r\n                                            </Badge>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                    <Menu\r\n                                        id='menu-appbar'\r\n                                        anchorEl={anchorElProfile}\r\n                                        anchorOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        transformOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        open={openProfile}\r\n                                        onClose={handleCloseProfile}\r\n                                    >\r\n                                        {\r\n                                            !authenticated||['client', 'агент'].includes(profile.role)?\r\n                                                <MenuItem>\r\n                                                    <Badge badgeContent={countBasket} color='secondary'>\r\n                                                        <Link href='/basket'>\r\n                                                            <a style={{display: 'flex', color: '#606060'}}>\r\n                                                                <LocalGroceryStore/>\r\n                                                                &nbsp;Корзина&nbsp;&nbsp;\r\n                                                            </a>\r\n                                                        </Link>\r\n                                                    </Badge>\r\n                                                </MenuItem>\r\n                                                :\r\n                                                null\r\n                                        }\r\n                                        {\r\n                                            !authenticated||profile.role==='client'?\r\n                                                <MenuItem>\r\n                                                    <Link href='/favorite'>\r\n                                                        <a style={{display: 'flex', color: '#606060'}}>\r\n                                                            <Star/>&nbsp;Избранное\r\n                                                        </a>\r\n                                                    </Link>\r\n                                                </MenuItem>\r\n                                                :\r\n                                                null\r\n                                        }\r\n                                        {\r\n                                            authenticated&&profile.role!=='admin'?\r\n                                                <MenuItem>\r\n                                                    <Link href={`/${profile.role==='client'?'client':'employment'}/[id]`} as={`/${profile.role==='client'?'client':'employment'}/${profile._id}`}>\r\n                                                        <a style={{display: 'flex', color: '#606060'}}>\r\n                                                            <AssignmentInd/>&nbsp;Профиль\r\n                                                        </a>\r\n                                                    </Link>\r\n                                                </MenuItem>\r\n                                                :\r\n                                                null\r\n                                        }\r\n                                        {\r\n                                            authenticated?\r\n                                                <MenuItem onClick={()=>{\r\n                                                    handleCloseProfile()\r\n                                                    const action = async() => {\r\n                                                        logout(true)\r\n                                                    }\r\n                                                    setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                    showMiniDialog(true)\r\n                                                }}>\r\n                                                    <div style={{display: 'flex', color: '#606060'}}>\r\n                                                        <ExitToApp/>&nbsp;Выйти\r\n                                                    </div>\r\n                                                </MenuItem>\r\n                                            :\r\n                                                <MenuItem onClick={()=>{\r\n                                                    handleCloseProfile()\r\n                                                    setMiniDialog('Вход', <Sign isMobileApp={isMobileApp}/>)\r\n                                                    showMiniDialog(true)\r\n                                                }}>\r\n                                                    <div style={{display: 'flex', color: '#606060'}}>\r\n                                                        <ExitToApp/>&nbsp;Войти\r\n                                                    </div>\r\n                                                </MenuItem>\r\n                                        }\r\n                                    </Menu>\r\n\r\n                            </>\r\n                        :\r\n                        openSearch?\r\n                            <Paper className={classes.searchD}>\r\n                                    <Input className={classes.searchField}\r\n                                        id='adornment-password'\r\n                                        type={'login'}\r\n                                        value={search}\r\n                                        onChange={handleSearch}\r\n                                        endAdornment={\r\n                                            <InputAdornment position='end'>\r\n                                                <IconButton aria-label='Search' onClick={()=>{setSearch('');setOpenSearch(false)}}>\r\n                                                    <Cancel />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }/>\r\n                            </Paper>\r\n                            :\r\n                            <>\r\n                            {dates?\r\n                                <>\r\n                                    <Tooltip title='Дата'>\r\n                                        <IconButton\r\n                                            aria-owns={openDate ? 'menu-appbar' : undefined}\r\n                                            aria-haspopup='true'\r\n                                            onClick={handleMenuDate}\r\n                                            color='inherit'\r\n                                        >\r\n                                            <DateRange/>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                    <Menu\r\n                                        key='Date'\r\n                                        id='menu-appbar'\r\n                                        anchorEl={anchorElDate}\r\n                                        anchorOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        transformOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        open={openDate}\r\n                                        onClose={handleCloseDate}\r\n                                    >\r\n                                        <MenuItem style={{background: date!==''?'rgba(51, 143, 255, 0.29)': '#fff'}} onClick={()=>{setMiniDialog('Дата', <SetDate/>);showMiniDialog(true);handleCloseDate();}}>\r\n                                            По дате\r\n                                        </MenuItem>\r\n                                        <MenuItem style={{background: date===''?'rgba(51, 143, 255, 0.29)': '#fff'}} onClick={()=>{setDate('');handleCloseDate();}}>\r\n                                            Все\r\n                                        </MenuItem>\r\n                                    </Menu>\r\n                                &nbsp;\r\n                                </>\r\n                                :null\r\n                            }\r\n                            {filters&&filters.length>0?\r\n                                <>\r\n                                <Tooltip title='Фильтр'>\r\n                                    <IconButton\r\n                                        aria-owns={openFilter ? 'menu-appbar' : undefined}\r\n                                        aria-haspopup='true'\r\n                                        onClick={handleMenuFilter}\r\n                                        color='inherit'\r\n                                    >\r\n                                        <FilterList/>\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                                <Menu\r\n                                    id='menu-appbar'\r\n                                    key='filter'\r\n                                    anchorEl={anchorElFilter}\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    transformOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    open={openFilter}\r\n                                    onClose={handleCloseFilter}\r\n                                >\r\n                                    {filters.map((elem, idx)=><MenuItem key={'filter'+idx} style={{background: filter===elem.value?'rgba(51, 143, 255, 0.29)': '#fff'}} onClick={()=>{setFilter(elem.value);handleCloseFilter();}}>{elem.name}</MenuItem>)}\r\n                                </Menu>\r\n                                &nbsp;\r\n                                </>\r\n                                :null\r\n                            }\r\n                            {sorts&&sorts.length>0?\r\n                                <>\r\n                                <Tooltip title='Сортировка'>\r\n                                    <IconButton\r\n                                        aria-owns={openSort ? 'menu-appbar' : undefined}\r\n                                        aria-haspopup='true'\r\n                                        onClick={handleMenuSort}\r\n                                        color='inherit'\r\n                                    >\r\n                                        <Sort />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                                <Menu\r\n                                    id='menu-appbar'\r\n                                    anchorEl={anchorElSort}\r\n                                    anchorOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    transformOrigin={{\r\n                                        vertical: 'top',\r\n                                        horizontal: 'right',\r\n                                    }}\r\n                                    open={openSort}\r\n                                    onClose={handleCloseSort}\r\n                                    key='sort'\r\n                                >\r\n                                    {sorts.map((elem, idx)=><MenuItem key={'sort'+idx} onClick={()=>{sort===`-${elem.field}`?setSort(elem.field):setSort(`-${elem.field}`);handleCloseSort();}}>{sort===`-${elem.field}`?<ArrowDownward />:sort===elem.field?<ArrowUpward />:<div style={{width: '24px'}}/>}{elem.name}</MenuItem>)}\r\n                                </Menu>\r\n                                &nbsp;\r\n                                </>\r\n                                :null\r\n                            }\r\n                            <Tooltip title='Поиск'>\r\n                                <IconButton\r\n                                    aria-owns={openSearch ? 'menu-appbar' : undefined}\r\n                                    aria-haspopup='true'\r\n                                    onClick={()=>{setOpenSearch(true)}}\r\n                                    color='inherit'\r\n                                >\r\n                                    <Search />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                                       <Tooltip title='Профиль'>\r\n                                            <IconButton\r\n                                                aria-owns='menu-appbar'\r\n                                                aria-haspopup='true'\r\n                                                color='inherit'\r\n                                                onClick={handleMenuProfile}\r\n                                            >\r\n                                                <Badge badgeContent={countBasket} color='secondary'>\r\n                                                    <PermIdentity/>\r\n                                                </Badge>\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    <Menu\r\n                                        id='menu-appbar'\r\n                                        anchorEl={anchorElProfile}\r\n                                        anchorOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        transformOrigin={{\r\n                                            vertical: 'top',\r\n                                            horizontal: 'right',\r\n                                        }}\r\n                                        open={openProfile}\r\n                                        onClose={handleCloseProfile}\r\n                                    >\r\n                                        {\r\n                                            !authenticated||['client', 'агент'].includes(profile.role)?\r\n                                                <MenuItem>\r\n                                                    <Badge badgeContent={countBasket} color='secondary'>\r\n                                                        <Link href='/basket'>\r\n                                                            <a style={{display: 'flex', color: '#606060'}}>\r\n                                                                <LocalGroceryStore/>\r\n                                                                &nbsp;Корзина&nbsp;&nbsp;\r\n                                                            </a>\r\n                                                        </Link>\r\n                                                    </Badge>\r\n                                                </MenuItem>\r\n                                                :\r\n                                                null\r\n                                        }\r\n                                        {\r\n                                            !authenticated||profile.role==='client'?\r\n                                                <MenuItem>\r\n                                                    <Link href='/favorite'>\r\n                                                        <a style={{display: 'flex', color: '#606060'}}>\r\n                                                            <Star/>&nbsp;Избранное\r\n                                                        </a>\r\n                                                    </Link>\r\n                                                </MenuItem>\r\n                                                :\r\n                                                null\r\n                                        }\r\n                                        {\r\n                                            authenticated&&profile.role!=='admin'?\r\n                                                <MenuItem>\r\n                                                    <Link href={`/${profile.role==='client'?'client':'employment'}/[id]`} as={`/${profile.role==='client'?'client':'employment'}/${profile._id}`}>\r\n                                                        <a style={{display: 'flex', color: '#606060'}}>\r\n                                                            <AssignmentInd/>&nbsp;Профиль\r\n                                                        </a>\r\n                                                    </Link>\r\n                                                </MenuItem>\r\n                                                :\r\n                                                null\r\n                                        }\r\n                                        {\r\n                                            authenticated?\r\n                                                <MenuItem onClick={()=>{\r\n                                                    handleCloseProfile()\r\n                                                    const action = async() => {\r\n                                                        logout(true)\r\n                                                    }\r\n                                                    setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                    showMiniDialog(true)\r\n                                                }}>\r\n                                                    <div style={{display: 'flex', color: '#606060'}}>\r\n                                                        <ExitToApp/>&nbsp;Выйти\r\n                                                    </div>\r\n                                                </MenuItem>\r\n                                                :\r\n                                                <MenuItem onClick={()=>{\r\n                                                    handleCloseProfile()\r\n                                                    setMiniDialog('Вход', <Sign isMobileApp={isMobileApp}/>)\r\n                                                    showMiniDialog(true)\r\n                                                }}>\r\n                                                    <div style={{display: 'flex', color: '#606060'}}>\r\n                                                        <ExitToApp/>&nbsp;Войти\r\n                                                    </div>\r\n                                                </MenuItem>\r\n                                        }\r\n                                    </Menu>\r\n\r\n                            </>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n})\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAppBar);\r\n","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\n\r\nconst MyDialog =  React.memo(\r\n    (props) =>{\r\n        const { title, child, show, fullScreen  } = props.mini_dialog;\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        return (\r\n                <Dialog\r\n                    fullScreen={fullScreen}\r\n                    open={show}\r\n                    onClose={()=>{showMiniDialog(false)}}\r\n                    aria-labelledby='alert-dialog-title'\r\n                    aria-describedby='alert-dialog-description'>\r\n                    <DialogTitle onClose={()=>{showMiniDialog(false)}}>{title}</DialogTitle>\r\n                    <DialogContent>\r\n                        {child}\r\n                    </DialogContent>\r\n                </Dialog>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyDialog);","import React, {useState} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport drawerStyle from '../../src/styleMUI/drawer'\r\nimport * as appActions from '../../redux/actions/app'\r\nimport * as userActions from '../../redux/actions/user'\r\nimport Drawer from '@material-ui/core/SwipeableDrawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ReorderIcon from '@material-ui/icons/ViewList';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport CopyrightIcon from '@material-ui/icons/Loyalty';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport ArtTrackIcon from '@material-ui/icons/ArtTrack';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore';\r\nimport UnfoldLessIcon from '@material-ui/icons/UnfoldLess';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\n\r\n\r\nconst MyDrawer = React.memo((props) => {\r\n    const { classes } = props\r\n    const { drawer, isMobileApp } = props.app;\r\n    const { profile, authenticated } = props.user;\r\n    const { showDrawer } = props.appActions;\r\n    let variant = isMobileApp?'temporary' : 'permanent';\r\n    const open = isMobileApp?drawer:true;\r\n    const router = useRouter();\r\n    const [uncoverBonus, setUncoverBonus] = useState(null);\r\n    return (\r\n        <Drawer\r\n            onOpen={()=>showDrawer(true)}\r\n            disableDiscovery={true}\r\n            variant= {variant}\r\n            className={classes.drawer}\r\n            open={open}\r\n            onClose={()=>showDrawer(false)}\r\n            classes={{paper: classes.drawerPaper,}}\r\n        >\r\n            {\r\n                isMobileApp?\r\n                    null\r\n                    :\r\n                    <div className={classes.toolbar}/>\r\n            }\r\n            <Divider />\r\n            <List>\r\n                {\r\n                    ['экспедитор', 'организация', 'менеджер', 'агент'].includes(profile.role)?\r\n                        <Link href='/items/[id]' as='/items/all'>\r\n                            <ListItem style={{background:\r\n                                router.pathname===('/')\r\n                                ||\r\n                                router.pathname.includes('subcategory')\r\n                                ||\r\n                                router.pathname.includes('item')?\r\n                                    '#f5f5f5':'#ffffff'}} button onClick={()=>{showDrawer(false)}}>\r\n                                <ListItemIcon><ReorderIcon color='inherit'/></ListItemIcon>\r\n                                <ListItemText primary='Товары' />\r\n                            </ListItem>\r\n                        </Link>\r\n                        :\r\n                        <Link href='/'>\r\n                            <ListItem style={{background: router.pathname===('/')\r\n                            ||\r\n                            router.pathname.includes('subcategory')\r\n                            ||\r\n                            router.pathname.includes('item')?'#f5f5f5':'#ffffff'}} button onClick={()=>{showDrawer(false)}}>\r\n                                <ListItemIcon><ReorderIcon color='inherit'/></ListItemIcon>\r\n                                <ListItemText primary='Товары' />\r\n                            </ListItem>\r\n                        </Link>\r\n                }\r\n                <Divider/>\r\n                {\r\n                    ['admin', 'client', 'организация', 'менеджер', 'агент'].includes(profile.role)||!authenticated?\r\n                        <>\r\n                        <ListItem style={{background: router.pathname.includes('bonus')?'#f5f5f5':'#ffffff'}} button onClick={()=>{setUncoverBonus(!uncoverBonus)}}>\r\n                            <ListItemIcon><MoneyIcon color='inherit'/></ListItemIcon>\r\n                            <ListItemText primary='Бонусы' />\r\n                            <ListItemIcon>{uncoverBonus?<UnfoldMoreIcon color='inherit'/>:<UnfoldLessIcon color='inherit'/>}</ListItemIcon>\r\n                        </ListItem>\r\n                        <Divider/>\r\n                        {\r\n                            uncoverBonus?\r\n                                <>\r\n                                <Link href='/bonus'>\r\n                                    <ListItem style={{marginLeft: 16, background: router.pathname==='/bonus'?'#f5f5f5':'#ffffff'}} button onClick={()=>{showDrawer(false)}}>\r\n                                        <ListItemText primary={['организация', 'менеджер', 'агент'].includes(profile.role)?'Бонусы компании':'Бонусы компаний'}/>\r\n                                    </ListItem>\r\n                                </Link>\r\n                                <Divider/>\r\n                                {\r\n                                    ['admin', 'client', 'организация', 'менеджер'].includes(profile.role)?\r\n                                        <>\r\n                                        <Link href='/bonusclient'>\r\n                                            <ListItem style={{marginLeft: 16, background: router.pathname==='/bonusclient'?'#f5f5f5':'#ffffff'}} button onClick={()=>{showDrawer(false)}}>\r\n                                                <ListItemText primary={['admin', 'организация', 'менеджер', 'агент'].includes(profile.role)?'Бонусы клиентов':'Мои бонусы'}/>\r\n                                            </ListItem>\r\n                                        </Link>\r\n                                        <Divider/>\r\n                                        </>\r\n                                        :null\r\n                                }\r\n                                </>\r\n                                :\r\n                                null\r\n                        }\r\n                        </>\r\n                        :null\r\n                }\r\n                {\r\n                    ['admin', 'client'].includes(profile.role)||!authenticated?\r\n                        <>\r\n                        <Link href='/ads'>\r\n                            <ListItem style={{background: router.pathname==='/ads'?'#f5f5f5':'#ffffff'}} button onClick={()=>{setUncoverBonus(false);showDrawer(false)}}>\r\n                                <ListItemIcon><WhatshotIcon color='inherit'/></ListItemIcon>\r\n                                <ListItemText primary='Акции' />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Divider/>\r\n                        </>\r\n                        :null\r\n                }\r\n                {\r\n                    ['admin', 'организация', 'менеджер', 'агент'].includes(profile.role)?\r\n                        <>\r\n                        <Link href={'/clients'}>\r\n                            <ListItem style={{background: router.pathname.includes('client')&&router.pathname!=='/bonusclient'?'#f5f5f5':'#ffffff'}} button onClick={()=>{setUncoverBonus(false);showDrawer(false)}}>\r\n                                <ListItemIcon><GroupIcon color='inherit'/></ListItemIcon>\r\n                                <ListItemText primary='Клиенты' />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Divider/>\r\n                        </>\r\n                        :null\r\n                }\r\n                {\r\n                    ['client', 'admin', 'организация', 'менеджер', 'агент'].includes(profile.role)?\r\n                        <>\r\n                        <Link href='/orders'>\r\n                            <ListItem style={{background: router.pathname==='/orders'?'#f5f5f5':'#ffffff'}} button onClick={()=>{setUncoverBonus(false);showDrawer(false)}}>\r\n                                <ListItemIcon><ReceiptIcon color='inherit'/></ListItemIcon>\r\n                                <ListItemText primary='Заказы' />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Divider/>\r\n                        </>\r\n                        :null\r\n                }\r\n                {\r\n                    ['admin', 'организация', 'менеджер', 'экспедитор'].includes(profile.role)?\r\n                        <>\r\n                        <Link href='/routes'>\r\n                            <ListItem style={{background: router.pathname==='/routes'?'#f5f5f5':'#ffffff'}} button onClick={()=>{setUncoverBonus(false);showDrawer(false)}}>\r\n                                <ListItemIcon><FormatListNumberedIcon color='inherit'/></ListItemIcon>\r\n                                <ListItemText primary='Маршрутные листы' />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Divider/>\r\n                        </>\r\n                        :null\r\n                }\r\n                {\r\n                    ['экспедитор', 'организация', 'менеджер', 'агент'].includes(profile.role)?\r\n                        <Link href='/organization/[id]' as={`/organization/${profile.organization}`}>\r\n                            <ListItem style={{background: router.pathname.includes('organization')?'#f5f5f5':'#ffffff'}} button onClick={()=>{setUncoverBonus(false);showDrawer(false)}}>\r\n                                <ListItemIcon><LocationCityIcon color='inherit'/></ListItemIcon>\r\n                                <ListItemText primary='Организация' />\r\n                            </ListItem>\r\n                        </Link>\r\n                        :\r\n                        <Link href='/organizations'>\r\n                            <ListItem style={{background: router.pathname.includes('organization')?'#f5f5f5':'#ffffff'}} button onClick={()=>{setUncoverBonus(false);showDrawer(false)}}>\r\n                                <ListItemIcon><LocationCityIcon color='inherit'/></ListItemIcon>\r\n                                <ListItemText primary='Организации' />\r\n                            </ListItem>\r\n                        </Link>\r\n                }\r\n                <Divider/>\r\n                {\r\n                    ['admin', 'client'].includes(profile.role)||!authenticated?\r\n                        <>\r\n                        <Link href='/brands'>\r\n                            <ListItem style={{background: (router.pathname).includes('brand')?'#f5f5f5':'#ffffff'}} button onClick={()=>{setUncoverBonus(false);showDrawer(false)}}>\r\n                                <ListItemIcon><CopyrightIcon color='inherit'/></ListItemIcon>\r\n                                <ListItemText primary='Бренды' />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Divider/>\r\n                        </>\r\n                        :null\r\n                }\r\n                {\r\n                    ['admin', 'организация'].includes(profile.role)?\r\n                        <>\r\n                        <Link href={'/employments'}>\r\n                            <ListItem style={{background: router.pathname.includes('employment')?'#f5f5f5':'#ffffff'}} button onClick={()=>{setUncoverBonus(false);showDrawer(false)}}>\r\n                                <ListItemIcon><GroupIcon color='inherit'/></ListItemIcon>\r\n                                <ListItemText primary='Сотрудники' />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Divider/>\r\n                        </>\r\n                        :null\r\n                }\r\n                {\r\n                    ['admin', 'client'].includes(profile.role)||!authenticated?\r\n                        <>\r\n                        <Link href='/blog'>\r\n                            <ListItem style={{background: router.pathname==='/blog'?'#f5f5f5':'#ffffff'}} button onClick={()=>{setUncoverBonus(false);showDrawer(false)}}>\r\n                                <ListItemIcon><ArtTrackIcon color='inherit'/></ListItemIcon>\r\n                                <ListItemText primary='Блог' />\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Divider/>\r\n                        </>\r\n                        :null\r\n                }\r\n                <Link href={'/contact'}>\r\n                    <ListItem style={{background: router.pathname==='/contact'?'#f5f5f5':'#ffffff'}} button onClick={()=>{setUncoverBonus(false);showDrawer(false)}}>\r\n                        <ListItemIcon><InfoIcon color='inherit'/></ListItemIcon>\r\n                        <ListItemText primary='Контакты' />\r\n                    </ListItem>\r\n                </Link>\r\n                <Divider/>\r\n            </List>\r\n        </Drawer>\r\n    )\r\n})\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n    }\r\n}\r\n\r\nMyDrawer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(drawerStyle)(MyDrawer))","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\n\r\nconst MyDialog =  React.memo(\r\n    (props) =>{\r\n        const { title, show } = props.snackbar;\r\n        const { closeSnackBar } = props.snackbarActions;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={show}\r\n                autoHideDuration={6000}\r\n                onClose={closeSnackBar}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{title}</span>}\r\n                action={[\r\n                    <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={closeSnackBar}>\r\n                        Закрыть\r\n                    </Button>\r\n                ]}\r\n            />\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        snackbar: state.snackbar\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyDialog)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as appActions from '../../redux/actions/app'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport Done from '@material-ui/icons/Done';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport dialogContentStyle from '../../src/styleMUI/dialogContent'\r\n\r\nconst Confirmation =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { showSnackBar } = props.snackbarActions;\r\n        const { showLoad } = props.appActions;\r\n        const { classes, action } = props;\r\n        return (\r\n            <div className={classes.line}>\r\n                <IconButton onClick={async()=>{\r\n                    try {\r\n                        await showMiniDialog(false)\r\n                        await showLoad(true)\r\n                        await action()\r\n                        await showLoad(false)\r\n                    }  catch (err) {\r\n                        showSnackBar('Ошибка')\r\n                    }\r\n                }} aria-label='Delete'>\r\n                    <Done className={classes.button} />\r\n                </IconButton>\r\n                <IconButton onClick={async()=>{\r\n                    showMiniDialog(false)\r\n                }} aria-label='Cancel'>\r\n                    <Clear className={classes.button}/>\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nConfirmation.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(Confirmation));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport dialogContentStyle from '../../src/styleMUI/dialogContent'\r\nimport { Map, YMaps, Placemark } from 'react-yandex-maps';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport GpsFixed from '@material-ui/icons/GpsFixed';\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Confirmation from './Confirmation'\r\n\r\nconst Geo =  React.memo(\r\n    (props) =>{\r\n        const { showSnackBar } = props.snackbarActions;\r\n        const { showMiniDialog, setMiniDialog } = props.mini_dialogActions;\r\n        const { classes, geo, name, idx, setAddressGeo, change } = props;\r\n        let [newGeo, setNewGeo] = useState(geo?geo:'42.8700000, 74.5900000');\r\n        let getGeo = () => {\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition((position)=>{\r\n                    setNewGeo(position.coords.latitude+', '+position.coords.longitude)\r\n                });\r\n            } else {\r\n                showSnackBar('Геолокация не поддерживается')\r\n            }\r\n        }\r\n        let dragend = (e) => {\r\n            let geo = e.get('target').geometry.getCoordinates()\r\n            setNewGeo(geo[0]+', '+geo[1])\r\n        }\r\n        let [load, setLoad] = useState(true);\r\n        return (\r\n            <YMaps>\r\n                <div className={classes.column}>\r\n                    <div style={{height: window.innerHeight-128, width: window.innerWidth-48, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n                        {\r\n                            load?<CircularProgress/>:null\r\n                        }\r\n                        <div style={{display: load?'none':'block'}}>\r\n                            <Map onLoad={()=>{setLoad(false)}} height={window.innerHeight-128} width={window.innerWidth-48} defaultState={{ center: newGeo.split(', '), zoom: 15 }} >\r\n                                <Placemark\r\n                                    onDragEnd={dragend}\r\n                                    options={{draggable: true, iconColor: '#ffb300'}}\r\n                                    properties={{iconCaption: name}}\r\n                                    geometry={newGeo.split(', ')} />\r\n                            </Map>\r\n                        </div>\r\n                    </div>\r\n                    <center>\r\n                        {\r\n                            change?\r\n                                <Button variant='contained' color='primary' onClick={async()=>{\r\n                                    const action = async() => {\r\n                                        await setAddressGeo(newGeo, idx)\r\n                                        showMiniDialog(false);\r\n                                    }\r\n                                    setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                }} className={classes.button}>\r\n                                    Сохранить\r\n                                </Button>\r\n                                :null\r\n                        }\r\n                        <Button variant='contained' color='secondary' onClick={()=>{showMiniDialog(false);}} className={classes.button}>\r\n                            Закрыть\r\n                        </Button>\r\n                    </center>\r\n                </div>\r\n                {\r\n                    change?\r\n                        <Fab color='primary' aria-label='Найти геолокацию' className={classes.fabGeo} onClick={getGeo}>\r\n                            <GpsFixed/>\r\n                        </Fab>\r\n                        :null}\r\n            </YMaps>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\r\n    }\r\n}\r\n\r\nGeo.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(Geo));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { cancelOrders, approveOrders, setOrder, setInvoice } from '../../src/gql/order'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport * as userActions from '../../redux/actions/user'\r\nimport Button from '@material-ui/core/Button';\r\nimport dialogContentStyle from '../../src/styleMUI/dialogContent'\r\nimport { pdDDMMYYHHMM, pdDDMMYYHHMMCancel } from '../../src/lib'\r\nimport Confirmation from './Confirmation'\r\nimport Geo from '../../components/dialog/Geo'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst Order =  React.memo(\r\n    (props) =>{\r\n        const { isMobileApp } = props.app;\r\n        const { profile } = props.user;\r\n        const { showMiniDialog, setMiniDialog } = props.mini_dialogActions;\r\n        const { classes, element, setList, route, getInvoices } = props;\r\n        let [orders, setOrders] = useState(element.orders);\r\n        let [allPrice, setAllPrice] = useState(element.allPrice);\r\n        let [taken, setTaken] = useState(element.taken);\r\n        let [confirmationForwarder, setConfirmationForwarder] = useState(element.confirmationForwarder);\r\n        let [confirmationClient, setConfirmationClient] = useState(element.confirmationClient);\r\n        let [cancelForwarder, setCancelForwarder] = useState(element.cancelForwarder!=undefined&&element.cancelForwarder);\r\n        let [cancelClient, setCancelClient] = useState(element.cancelClient!=undefined&&element.cancelClient);\r\n        const width = isMobileApp? (window.innerWidth-112) : 500;\r\n        const { showSnackBar } = props.snackbarActions;\r\n        let canculateAllPrice = ()=>{\r\n            allPrice=0\r\n            for(let i=0; i<orders.length; i++){\r\n                allPrice+=orders[i].allPrice\r\n            }\r\n            if(element.usedBonus&&element.usedBonus>0)\r\n                allPrice -= element.usedBonus\r\n            setAllPrice(allPrice)\r\n        }\r\n        let increment = (idx)=>{\r\n            orders[idx].count+=1\r\n            orders[idx].allPrice = orders[idx].count * (orders[idx].item.stock===0||orders[idx].item.stock===undefined?orders[idx].item.price:orders[idx].item.stock)\r\n            setOrders([...orders])\r\n            canculateAllPrice()\r\n        }\r\n        let decrement = (idx)=>{\r\n            if(orders[idx].count>1) {\r\n                orders[idx].count -= 1\r\n                orders[idx].allPrice = orders[idx].count * (orders[idx].item.stock===0||orders[idx].item.stock===undefined?orders[idx].item.price:orders[idx].item.stock)\r\n                setOrders([...orders])\r\n                canculateAllPrice()\r\n            }\r\n        }\r\n        let remove = (idx)=>{\r\n            if(orders.length>1) {\r\n                orders.splice(idx, 1)\r\n                setOrders([...orders])\r\n                canculateAllPrice()\r\n            } else\r\n                showSnackBar('Товары не могут отсутствовать в заказе')\r\n        }\r\n        return (\r\n            <div className={classes.column} style={{width: width}}>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Заказ №:&nbsp;</div>\r\n                    <div className={classes.value}>{element.number}</div>\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Статус:&nbsp;</div>\r\n                    <div className={classes.value}>{\r\n                            element.orders[0].status==='принят'&&(element.confirmationForwarder||element.confirmationClient)?\r\n                                element.confirmationClient?\r\n                                    'подтвержден клиентом'\r\n                                    :\r\n                                    element.confirmationForwarder?\r\n                                        'доставлен поставщиком'\r\n                                        :\r\n                                        element.orders[0].status\r\n                                :\r\n                                element.orders[0].status\r\n                    }</div>\r\n                </div>\r\n                {\r\n                    element.agent&&element.agent.name?\r\n                        <a href={`/employment/${element.agent._id}`} target='_blank'>\r\n                            <div className={classes.row}>\r\n                                <div className={classes.nameField}>Агент: &nbsp;</div>\r\n                                <div className={classes.value}>{element.agent.name}</div>\r\n                            </div>\r\n                        </a>\r\n                        :\r\n                        null\r\n                }\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Адрес: &nbsp;</div>\r\n                    <div className={classes.value}>{element.address[0]}</div>\r\n                </div>\r\n                <div className={classes.geo} style={{color: element.address[1]?'#ffb300':'red'}} onClick={()=>{\r\n                    if(element.address[1]) {\r\n                        setMiniDialog('Геолокация', <Geo geo={element.address[1]}/>, true)\r\n                        showMiniDialog(true)\r\n                    }\r\n                }}>\r\n                    {\r\n                        element.address[1]?\r\n                            'Посмотреть геолокацию'\r\n                            :\r\n                            'Геолокация не задана'\r\n                    }\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Время заказа: &nbsp;</div>\r\n                    <div className={classes.value}>{pdDDMMYYHHMM(new Date(element.createdAt))}</div>\r\n                </div>\r\n                {\r\n                    element.dateDelivery?\r\n                        <div className={classes.row}>\r\n                            <div className={classes.nameField}>Время доставки:&nbsp;</div>\r\n                            <div className={classes.value}>{pdDDMMYYHHMM(new Date(element.dateDelivery))}</div>\r\n                        </div>\r\n                        :\r\n                        null\r\n                }\r\n                <a href={`/client/${element.client._id}`} target='_blank'>\r\n                    <div className={classes.row}>\r\n                        <div className={classes.nameField}>Получатель:&nbsp;</div>\r\n                        <div className={classes.value}>{element.client.name}</div>\r\n                    </div>\r\n                </a>\r\n                <a href={`/organization/${element.orders[0].item.organization._id}`} target='_blank'>\r\n                    <div className={classes.row}>\r\n                        <div className={classes.nameField}>Поставщик:&nbsp;</div>\r\n                        <div className={classes.value}>{element.orders[0].item.organization.name}</div>\r\n                    </div>\r\n                </a>\r\n                {\r\n                    element.usedBonus&&element.usedBonus>0?\r\n                        <div className={classes.row}>\r\n                            <div className={classes.nameField}>Использованный бонус:&nbsp;</div>\r\n                            <div className={classes.value}>{element.usedBonus}&nbsp;сом</div>\r\n                        </div>\r\n                        :\r\n                        null\r\n                }\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Сумма:&nbsp;</div>\r\n                    <div className={classes.value}>{allPrice}&nbsp;сом</div>\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Способ оплаты:&nbsp;</div>\r\n                    <div className={classes.value}>{element.paymentMethod}</div>\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Информация:&nbsp;</div>\r\n                    <div className={classes.value}>{element.info}</div>\r\n                </div>\r\n                <br/>\r\n                <div className={classes.column}>\r\n                    <b>Товары:</b>\r\n                    {\r\n                        orders.map((order, idx) => {\r\n                            if(\r\n                                element.orders[0].status==='обработка'&&\r\n                                (\r\n                                    profile.role==='client'||\r\n                                    ['менеджер', 'организация', 'агент'].includes(profile.role)||\r\n                                    profile.role==='admin'\r\n                                )\r\n                            )\r\n                                return(\r\n                                    <div key={idx} className={classes.column}>\r\n                                        <div className={classes.row}>\r\n                                            <div className={classes.nameField}>Товар:&nbsp;</div>\r\n                                            <a href={`/item/${order.item._id}`} target='_blank'>\r\n                                                <div className={classes.value}>{order.item.name}</div>\r\n                                            </a>\r\n                                            <IconButton onClick={()=>{\r\n                                                remove(idx)\r\n                                            }} color='primary' className={classes.button} aria-label='удалить'>\r\n                                                <CancelIcon style={{height: 20, width: 20}}/>\r\n                                            </IconButton>\r\n                                        </div>\r\n                                        <div className={classes.row}>\r\n                                            <div className={classes.nameField}>Количество:&nbsp;</div>\r\n                                            <div className={classes.counterbtn} onClick={()=>{decrement(idx)}}>-</div>\r\n                                            <div className={classes.value}>{order.count}&nbsp;шт</div>\r\n                                            <div className={classes.counterbtn} onClick={()=>{increment(idx)}}>+</div>\r\n                                        </div>\r\n                                        <div className={classes.row}>\r\n                                            <div className={classes.nameField}>Общая стоимость:&nbsp;</div>\r\n                                            <div className={classes.value}>{order.allPrice}&nbsp;сом</div>\r\n                                        </div>\r\n                                        <br/>\r\n                                    </div>\r\n                                )\r\n                            else\r\n                                return(\r\n                                    <div key={idx} className={classes.column}>\r\n                                        <a href={`/item/${order.item._id}`} target='_blank'>\r\n                                            <div className={classes.row}>\r\n                                                <div className={classes.nameField}>Товар:&nbsp;</div>\r\n                                                <div className={classes.value}>{order.item.name}</div>\r\n                                            </div>\r\n                                        </a>\r\n                                        <div className={classes.row}>\r\n                                            <div className={classes.nameField}>Количество:&nbsp;</div>\r\n                                            <div className={classes.value}>{order.count}&nbsp;шт</div>\r\n                                        </div>\r\n                                        <div className={classes.row}>\r\n                                            <div className={classes.nameField}>Общая стоимость:&nbsp;</div>\r\n                                            <div className={classes.value}>{order.allPrice}&nbsp;сом</div>\r\n                                        </div>\r\n                                        <br/>\r\n                                    </div>\r\n                                )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <FormControlLabel\r\n                        disabled={(!['менеджер', 'организация', 'admin'].includes(profile.role)||!['обработка','принят'].includes(element.orders[0].status))}\r\n                        control={\r\n                            <Checkbox\r\n                                checked={taken}\r\n                                onChange={()=>{\r\n                                    setTaken(!taken);\r\n                                }}\r\n                                color='primary'\r\n                            />\r\n                        }\r\n                        label='Заказ принят'\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <FormControlLabel\r\n                        disabled={(!['менеджер', 'организация', 'admin', 'экспедитор'].includes(profile.role)||'принят'!==element.orders[0].status)}\r\n                        control={\r\n                            <Checkbox\r\n                                checked={confirmationForwarder}\r\n                                onChange={()=>{\r\n                                    setConfirmationForwarder(!confirmationForwarder);\r\n                                }}\r\n                                color='primary'\r\n                            />\r\n                        }\r\n                        label='Заказ доставлен'\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <FormControlLabel\r\n                        disabled={\r\n                            (!['client', 'admin'].includes(profile.role)&&!(['менеджер', 'организация', 'экспедитор'].includes(profile.role)&&!element.client.user))||\r\n                                'принят'!==element.orders[0].status\r\n                        }\r\n                        control={\r\n                            <Checkbox\r\n                                checked={confirmationClient}\r\n                                onChange={()=>{\r\n                                    setConfirmationClient(!confirmationClient);\r\n                                }}\r\n                                color='primary'\r\n                            />\r\n                        }\r\n                        label='Заказ получен'\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <FormControlLabel\r\n                        disabled={(\r\n                            !['client', 'организация', 'менеджер', 'admin', 'агент'].includes(profile.role)||!['отмена','обработка'].includes(element.orders[0].status)\r\n                        )}\r\n                        control={\r\n                            <Checkbox\r\n                                checked={\r\n                                    element.cancelClient!=undefined||element.cancelForwarder!=undefined?\r\n                                        element.cancelClient!=undefined?\r\n                                            cancelClient\r\n                                            :\r\n                                            cancelForwarder\r\n                                        :\r\n                                        'client'===profile.role?\r\n                                            cancelClient\r\n                                            :\r\n                                            cancelForwarder\r\n                                }\r\n                                onChange={()=>{\r\n                                    if('client'===profile.role) setCancelClient(!cancelClient);\r\n                                    else if('admin'===profile.role){\r\n                                        if(element.cancelClient!=undefined)\r\n                                            setCancelClient(!cancelClient)\r\n                                        else\r\n                                            setCancelForwarder(!cancelForwarder)\r\n                                    }\r\n                                    else setCancelForwarder(!cancelForwarder);\r\n                                }}\r\n                                color='secondary'\r\n                            />\r\n                        }\r\n                        label={\r\n                            !element.cancelClient&&!element.cancelForwarder?\r\n                                'Заказ отменен'\r\n                                :\r\n                                `Заказ отменен. Востановить заказ до ${element.cancelClient?pdDDMMYYHHMMCancel(new Date(element.cancelClient)):pdDDMMYYHHMMCancel(new Date(element.cancelForwarder))}`\r\n                        }\r\n                    />\r\n                </div>\r\n                {/*\r\n                    {\r\n                        (\r\n                            (profile.role==='client'&&'принят'===element.orders[0].status&&!element.confirmationClient)\r\n                            ||\r\n                            (['менеджер', 'организация'].includes(profile.role)&&'принят'===element.orders[0].status&&!element.confirmationForwarder)\r\n                            ||\r\n                            profile.role==='admin'\r\n                        )?\r\n                            <Button variant='contained' color='primary' onClick={()=>{\r\n                                const action = async() => {\r\n                                    let invoices = (await approveOrders({route: route, invoices: [element._id]})).invoices\r\n                                    if(setList)\r\n                                        setList(invoices)\r\n                                    if(getInvoices)\r\n                                        getInvoices()\r\n                                }\r\n                                setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                            }} className={classes.button}>\r\n                                Заказ выполнен\r\n                            </Button>\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        (profile.role==='client'&&element.orders[0].status==='обработка')\r\n                        ||(['менеджер', 'организация'].includes(profile.role)&&['обработка', 'принят'].includes(element.orders[0].status)&&!element.confirmationForwarder\r\n                        ||profile.role==='admin')?\r\n                            <Button variant='contained' color='primary' onClick={()=>{\r\n                                let _id = element.orders.map(order=>order._id)\r\n                                const action = async() => {\r\n                                    let invoices = (await cancelOrders({_id: _id, invoice: element._id})).invoices\r\n                                    if(setList)\r\n                                        setList(invoices)\r\n                                    if(getInvoices)\r\n                                        getInvoices()\r\n                                }\r\n                                setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                            }} className={classes.button}>\r\n                                Отменить заказ\r\n                            </Button>\r\n                            :\r\n                            null\r\n                    }\r\n                    */}\r\n                    <div>\r\n                {\r\n                    ((profile.role==='client'||['менеджер', 'организация', 'агент', 'экспедитор'].includes(profile.role)||profile.role==='admin'))?\r\n                        <Button variant='contained' color='primary' onClick={()=>{\r\n                            const action = async() => {\r\n\r\n                                let invoice = {invoice: element._id}\r\n                                if(element.taken!==taken)invoice.taken=taken\r\n                                if(element.confirmationClient!==confirmationClient)invoice.confirmationClient=confirmationClient\r\n                                if(element.confirmationForwarder!==confirmationForwarder)invoice.confirmationForwarder=confirmationForwarder\r\n                                if(element.cancelClient!==cancelClient)invoice.cancelClient=cancelClient\r\n                                if(element.cancelForwarder!==cancelForwarder)invoice.cancelForwarder=cancelForwarder\r\n                                await setInvoice(invoice)\r\n\r\n\r\n                                let sendOrders;\r\n                                if(element.orders[0].status!=='обработка') sendOrders = []\r\n                                else sendOrders = orders.map((order)=>{return {_id: order._id, count: order.count, allPrice: order.allPrice, status: order.status}})\r\n\r\n                                let invoices = (await setOrder({orders: sendOrders, invoice: element._id})).invoices\r\n                                if(setList)\r\n                                    setList(invoices)\r\n                                if(getInvoices)\r\n                                    getInvoices()\r\n                                showMiniDialog(false);\r\n                            }\r\n                            setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                        }} className={classes.button}>\r\n                            Сохранить\r\n                        </Button>\r\n                        :\r\n                        null\r\n                }\r\n                    <Button variant='contained' color='secondary' onClick={()=>{showMiniDialog(false);}} className={classes.button}>\r\n                        Закрыть\r\n                    </Button>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nOrder.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(Order));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as appActions from '../../redux/actions/app'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport dialogContentStyle from '../../src/styleMUI/dialogContent'\r\nimport { pdDatePicker } from '../../src/lib'\r\n\r\nconst SetDate =  React.memo(\r\n    (props) =>{\r\n        const { classes } = props;\r\n        let [dateChange, setDateChange] = useState(pdDatePicker(new Date()));\r\n        const { isMobileApp } = props.app;\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { setDate } = props.appActions;\r\n        const width = isMobileApp? (window.innerWidth-112) : 500\r\n        return (\r\n            <div className={classes.main}>\r\n                <TextField\r\n                    style={{width: width}}\r\n                    className={classes.textField}\r\n                    label='Дата'\r\n                    type='date'\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    value={dateChange}\r\n                    inputProps={{\r\n                        'aria-label': 'description',\r\n                    }}\r\n                    onChange={ event => setDateChange(event.target.value) }\r\n                />\r\n                <br/>\r\n                <div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={async()=>{\r\n                       await setDate(new Date(dateChange))\r\n                       showMiniDialog(false);\r\n                    }} className={classes.button}>\r\n                        Сохранить\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>{showMiniDialog(false);}} className={classes.button}>\r\n                        Закрыть\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n    }\r\n}\r\n\r\nSetDate.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(SetDate));","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as userActions from '../../redux/actions/user'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport classNames from 'classnames';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport dialogContentStyle from '../../src/styleMUI/dialogContent'\r\n\r\nconst Sign =  React.memo(\r\n    (props) =>{\r\n        let [loginEnter, setLoginEnter] = useState('');\r\n        let [passEnter, setPassEnter] = useState('');\r\n        let [errorPass, setErrorPass] = useState(false);\r\n        let [errorPassRepeat, setErrorPassRepeat] = useState(false);\r\n        let handlePassEnter =  (event) => {\r\n            setPassEnter(event.target.value)\r\n        };\r\n        let handleLoginEnter =  (event) => {\r\n            setLoginEnter(event.target.value)\r\n        };\r\n        let [loginReg, setLoginReg] = useState('');\r\n        let [passReg, setPassReg] = useState('');\r\n        let [passRepeatReg, setPassRepeatReg] = useState('');\r\n        let handlePassReg =  (event) => {\r\n            setPassReg(event.target.value)\r\n            if(event.target.value!==passRepeatReg){\r\n                setErrorPassRepeat(true)\r\n            }\r\n            else {\r\n                setErrorPassRepeat(false)\r\n            }\r\n            if(event.target.value.length<8){\r\n                setErrorPass(true)\r\n            }\r\n            else {\r\n                setErrorPass(false)\r\n            }\r\n        };\r\n        let handlePassRepeatReg =  (event) => {\r\n            setPassRepeatReg(event.target.value)\r\n            if(event.target.value!==passReg){\r\n                setErrorPassRepeat(true)\r\n            }\r\n            else {\r\n                setErrorPassRepeat(false)\r\n            }\r\n        };\r\n        let handleLoginReg =  (event) => {\r\n            setLoginReg(event.target.value)\r\n        };\r\n\r\n        let [type, setType] = useState('enter');\r\n        let [hide, setHide] = useState('password');\r\n        let handleHide =  () => {\r\n            setHide(!hide)\r\n        };\r\n        const { error } = props.user;\r\n        const { isMobileApp } = props.app;\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { signin, signup } = props.userActions;\r\n        const { classes } = props;\r\n        const width = isMobileApp? (window.innerWidth-112) : 500\r\n        return (\r\n            <div className={classes.main}>\r\n            {type==='enter'?\r\n                <>\r\n                <TextField\r\n                    style={{width: width}}\r\n                    id='standard-search'\r\n                    label='Логин'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={loginEnter}\r\n                    onChange={handleLoginEnter}\r\n                />\r\n                <br/>\r\n                <FormControl style={{width: width}} className={classNames(classes.margin, classes.textField)}>\r\n                    <InputLabel htmlFor=\"adornment-password\">Пароль</InputLabel>\r\n                    <Input\r\n                        id=\"adornment-password\"\r\n                        type={hide ? 'password' : 'text' }\r\n                        value={passEnter}\r\n                        onChange={handlePassEnter}\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton aria-label=\"Toggle password visibility\" onClick={handleHide}>\r\n                                    {hide ? <VisibilityOff />:<Visibility />  }\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                </FormControl>\r\n                <br/>\r\n                {error?\r\n                    <div style={{width: width}} className={classes.error_message}>Неверный логин или пароль</div>\r\n                    :\r\n                    null\r\n                }\r\n                <div>\r\n                    <div style={{width: width}} className={classes.message} onClick={()=>{setType('reg')}}>Зарегестрироваться</div>\r\n                    <div style={{width: width}}>Если забыли пароль то свяжитесь с нашими специалистами.</div>\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={()=>{\r\n                        if(loginEnter.length>0&&passEnter.length>0)\r\n                            signin({login: loginEnter, password: passEnter})\r\n                    }} className={classes.button}>\r\n                        Войти\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>{showMiniDialog(false);}} className={classes.button}>\r\n                        Закрыть\r\n                    </Button>\r\n                </div>\r\n                </>\r\n            :\r\n                <>\r\n                <TextField\r\n                    id='standard-search'\r\n                    label='Логин'\r\n                    type='login'\r\n                    className={classes.textField}\r\n                    margin='normal'\r\n                    value={loginReg}\r\n                    onChange={handleLoginReg}\r\n                    style={{width: width}}\r\n                />\r\n                <br/>\r\n                <FormControl style={{width: width}} className={classNames(classes.margin, classes.textField)}>\r\n                    <InputLabel htmlFor=\"adornment-password\">Придумайте пароль</InputLabel>\r\n                    <Input\r\n                        id=\"adornment-password\"\r\n                        type={hide ? 'password' : 'text' }\r\n                        value={passReg}\r\n                        onChange={handlePassReg}\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton aria-label=\"Toggle password visibility\" onClick={handleHide}>\r\n                                    {hide ? <VisibilityOff />:<Visibility />  }\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                </FormControl>\r\n                <br/>\r\n                <FormControl style={{width: width}} className={classNames(classes.margin, classes.textField)}>\r\n                    <InputLabel htmlFor=\"adornment-password\">Повторите пароль</InputLabel>\r\n                    <Input\r\n                        id=\"adornment-password\"\r\n                        type={hide ? 'password' : 'text' }\r\n                        value={passRepeatReg}\r\n                        onChange={handlePassRepeatReg}\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton aria-label=\"Toggle password visibility\" onClick={handleHide}>\r\n                                    {hide ? <VisibilityOff />:<Visibility />  }\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                </FormControl>\r\n                <br/>\r\n                {error?\r\n                    <div style={{width: width}} className={classes.error_message}>Неверный логин или пароль</div>\r\n                    :\r\n                    null\r\n                }\r\n                {errorPass?\r\n                    <div style={{width: width}} className={classes.error_message}>Недостаточная длина пароля</div>\r\n                    :\r\n                    null\r\n                }\r\n                {errorPassRepeat?\r\n                    <div style={{width: width}} className={classes.error_message}>Пароли не совпадают</div>\r\n                    :\r\n                    null\r\n                }\r\n                <br/>\r\n                <div>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={()=>{if(!errorPass&&!errorPassRepeat)signup({login: loginReg, password: passReg})}} className={classes.button}>\r\n                        Зарегестрироваться\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>{showMiniDialog(false);}} className={classes.button}>\r\n                        Закрыть\r\n                    </Button>\r\n                </div>\r\n                </>\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n    }\r\n}\r\n\r\nSign.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(Sign));","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport cardOrderStyle from '../../src/styleMUI/orders/cardOrder'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport { pdDDMMYYHHMM } from '../../src/lib'\r\nimport Order from '../dialog/Order'\r\n\r\nconst CardOrder = React.memo((props) => {\r\n    const classes = cardOrderStyle();\r\n    const { element, setList, route, getInvoices } = props;\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    const statusColor = {\r\n        'обработка': 'orange',\r\n        'принят': 'blue',\r\n        'выполнен': 'green',\r\n        'отмена': 'red'\r\n    }\r\n    return (\r\n        <Card className={classes.card} onClick={()=>{setMiniDialog('Заказ', <Order getInvoices={getInvoices} route={route} element={element} setList={setList}/>); showMiniDialog(true)}}>\r\n            <CardActionArea>\r\n                <CardContent className={classes.column}>\r\n                    <div className={classes.row}>\r\n                        <div className={classes.number}>{element.number}</div>&nbsp;\r\n                        <div className={classes.status} style={{background: statusColor[element.orders[0].status]}}>{\r\n                            element.orders[0].status==='принят'&&(element.confirmationForwarder||element.confirmationClient)?\r\n                                element.confirmationClient?\r\n                                    'подтвержден клиентом'\r\n                                    :\r\n                                    element.confirmationForwarder?\r\n                                        'доставлен поставщиком'\r\n                                        :\r\n                                        element.orders[0].status\r\n                                :\r\n                                element.orders[0].status\r\n                        }</div>\r\n                    </div>\r\n                    {\r\n                        element.agent&&element.agent.name?\r\n                            <div className={classes.row}>\r\n                                <div className={classes.nameField}>Агент: &nbsp;</div>\r\n                                <div className={classes.value}>{element.agent.name}</div>\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n                    <div className={classes.row}>\r\n                        <div className={classes.nameField}>Время заказа:&nbsp;</div>\r\n                        <div className={classes.value}>{pdDDMMYYHHMM(new Date(element.createdAt))}</div>\r\n                    </div>\r\n                    {\r\n                        element.dateDelivery?\r\n                            <div className={classes.row}>\r\n                                <div className={classes.nameField}>Время доставки:&nbsp;</div>\r\n                                <div className={classes.value}>{pdDDMMYYHHMM(new Date(element.dateDelivery))}</div>\r\n                            </div>\r\n                            :\r\n                            null\r\n\r\n                    }\r\n                    <div className={classes.row}>\r\n                        <div className={classes.nameField}>Адрес:&nbsp;</div>\r\n                        <div className={classes.value}>{element.address[0]}</div>\r\n                    </div>\r\n                    <div className={classes.row}>\r\n                        <div className={classes.nameField}>Получатель:&nbsp;</div>\r\n                        <div className={classes.value}>{element.client.name}</div>\r\n                    </div>\r\n                    <div className={classes.row}>\r\n                        <div className={classes.nameField}>Поставщик:&nbsp;</div>\r\n                        <div className={classes.value}>{element.orders[0].item.organization.name}</div>\r\n                    </div>\r\n                    {\r\n                        element.usedBonus&&element.usedBonus>0?\r\n                            <div className={classes.row}>\r\n                                <div className={classes.nameField}>Использованный бонус:&nbsp;</div>\r\n                                <div className={classes.value}>{element.usedBonus}&nbsp;сом</div>\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n                    <div className={classes.row}>\r\n                        <div className={classes.nameField}>Сумма:&nbsp;</div>\r\n                        <div className={classes.value}>{element.allPrice}&nbsp;сом</div>\r\n                    </div>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n})\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardOrder)","import React from 'react';\r\nimport cardStyle from '../../src/styleMUI/orders/cardOrder'\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nconst CardOrderPlaceholder = React.memo(() => {\r\n    const classes = cardStyle();\r\n    return (\r\n        <div className={classes.card} style={{height: 225}}>\r\n            <Skeleton variant='rect' height='100%'/>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default CardOrderPlaceholder","import React, { useEffect } from 'react';\nimport AppBar from '../components/app/AppBar'\nimport Dialog from '../components/app/Dialog'\nimport SnackBar from '../components/app/SnackBar'\nimport Drawer from '../components/app/Drawer'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { addFavoriteItem } from '../src/gql/items'\nimport { addBasket } from '../src/gql/basket'\nimport * as paginationActions from '../redux/actions/pagination'\nimport * as userActions from '../redux/actions/user'\nimport * as appActions from '../redux/actions/app'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport '../scss/app.scss'\nimport Router from 'next/router'\nimport { useRouter } from 'next/router';\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener';\n\nexport const mainWindow = React.createRef();\n\nconst App = React.memo(props => {\n    const { setProfile, logout } = props.userActions;\n    const { next, disable } = props.paginationActions;\n    const { showLoad } = props.appActions;\n    const { profile, authenticated } = props.user;\n    const { work, count } = props.pagination;\n    let { sorts, filters, getList, pageName, dates } = props;\n    const router = useRouter();\n    useEffect( ()=>{\n        if(authenticated)\n            setProfile()\n        else if(!authenticated&&profile.role)\n            logout(false)\n    },[authenticated,])\n    Router.events.on('routeChangeStart', (err, url)=>{\n        if(!router.pathname.includes(url))\n            showLoad(true)\n        if (err.cancelled) {\n            showLoad(false)\n        }\n    })\n    const containerRef = useBottomScrollListener(()=>{\n        if(work) next()\n    });\n    useEffect( ()=>{\n        (async ()=>{\n            if(authenticated&&profile.role==='client'){\n                if(localStorage.favorites&&localStorage.favorites!=='[]') {\n                    let favorites = JSON.parse(localStorage.favorites)\n                    favorites = favorites.map(element => element._id)\n                    await addFavoriteItem(favorites)\n                    localStorage.favorites = JSON.stringify([])\n                    if (getList !== undefined)\n                        await getList()\n                }\n                if(localStorage.basket&&localStorage.basket!=='[]') {\n                    let basket = JSON.parse(localStorage.basket)\n                    for(let i=0; i<basket.length; i++){\n                        await addBasket({item: basket[i].item._id, count: basket[i].count})\n                    }\n                    localStorage.basket = '[]'\n                    if (getList !== undefined)\n                        await getList()\n                }\n            }\n        })()\n    },[])\n    const { load } = props.app;\n    return(\n        <div ref={mainWindow} className='App'>\n            <Drawer/>\n            <AppBar dates={dates} pageName={pageName} sorts={sorts} filters={filters}/>\n            <div ref={containerRef} className='App-body'>\n                {props.children}\n            </div>\n            <Dialog />\n            <SnackBar/>\n            {load?\n                <div className='load'>\n                    <CircularProgress/>\n                </div>\n                :\n                null\n            }\n        </div>\n    )\n});\n\nfunction mapStateToProps (state) {\n    return {\n        user: state.user,\n        app: state.app,\n        pagination: state.pagination\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        userActions: bindActionCreators(userActions, dispatch),\n        appActions: bindActionCreators(appActions, dispatch),\n        paginationActions: bindActionCreators(paginationActions, dispatch),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/map\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/parse-int\");","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _Object$getOwnPropertyDescriptor from \"../../core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"../../core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"../../core-js/object/keys\";\nimport defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    var ownKeys = _Object$keys(source);\n\n    if (typeof _Object$getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(_Object$getOwnPropertySymbols(source).filter(function (sym) {\n        return _Object$getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","var _Object$assign = require(\"../core-js/object/assign\");\n\nfunction _extends() {\n  module.exports = _extends = _Object$assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","var _Object$getOwnPropertyDescriptor = require(\"../core-js/object/get-own-property-descriptor\");\n\nvar _Object$defineProperty = require(\"../core-js/object/define-property\");\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = _Object$defineProperty && _Object$getOwnPropertyDescriptor ? _Object$getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            _Object$defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nmodule.exports = _interopRequireWildcard;","\"use strict\";var _interopRequireWildcard=require(\"@babel/runtime-corejs2/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");exports.__esModule=true;exports.default=void 0;var _map=_interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/map\"));var _url=require(\"url\");var _react=_interopRequireWildcard(require(\"react\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));var _router=_interopRequireDefault(require(\"./router\"));var _rewriteUrlForExport=require(\"next-server/dist/lib/router/rewrite-url-for-export\");var _utils=require(\"next-server/dist/lib/utils\");/* global __NEXT_DATA__ */function isLocal(href){const url=(0,_url.parse)(href,false,true);const origin=(0,_url.parse)((0,_utils.getLocationOrigin)(),false,true);return!url.host||url.protocol===origin.protocol&&url.host===origin.host;}function memoizedFormatUrl(formatFunc){let lastHref=null;let lastAs=null;let lastResult=null;return(href,as)=>{if(lastResult&&href===lastHref&&as===lastAs){return lastResult;}const result=formatFunc(href,as);lastHref=href;lastAs=as;lastResult=result;return result;};}function formatUrl(url){return url&&typeof url==='object'?(0,_utils.formatWithValidation)(url):url;}let observer;const listeners=new _map.default();const IntersectionObserver=typeof window!=='undefined'?window.IntersectionObserver:null;function getObserver(){// Return shared instance of IntersectionObserver if already created\nif(observer){return observer;}// Only create shared IntersectionObserver if supported in browser\nif(!IntersectionObserver){return undefined;}return observer=new IntersectionObserver(entries=>{entries.forEach(entry=>{if(!listeners.has(entry.target)){return;}const cb=listeners.get(entry.target);if(entry.isIntersecting||entry.intersectionRatio>0){observer.unobserve(entry.target);listeners.delete(entry.target);cb();}});},{rootMargin:'200px'});}const listenToIntersections=(el,cb)=>{const observer=getObserver();if(!observer){return()=>{};}observer.observe(el);listeners.set(el,cb);return()=>{observer.unobserve(el);listeners.delete(el);};};class Link extends _react.Component{constructor(props){super(props);this.p=void 0;this.cleanUpListeners=()=>{};this.formatUrls=memoizedFormatUrl((href,asHref)=>{return{href:formatUrl(href),as:asHref?formatUrl(asHref):asHref};});this.linkClicked=e=>{// @ts-ignore target exists on currentTarget\nconst{nodeName,target}=e.currentTarget;if(nodeName==='A'&&(target&&target!=='_self'||e.metaKey||e.ctrlKey||e.shiftKey||e.nativeEvent&&e.nativeEvent.which===2)){// ignore click for new tab / new window behavior\nreturn;}let{href,as}=this.formatUrls(this.props.href,this.props.as);if(!isLocal(href)){// ignore click if it's outside our scope (e.g. https://google.com)\nreturn;}const{pathname}=window.location;href=(0,_url.resolve)(pathname,href);as=as?(0,_url.resolve)(pathname,as):href;e.preventDefault();//  avoid scroll for urls with anchor refs\nlet{scroll}=this.props;if(scroll==null){scroll=as.indexOf('#')<0;}// replace state instead of push if prop is present\n_router.default[this.props.replace?'replace':'push'](href,as,{shallow:this.props.shallow}).then(success=>{if(!success)return;if(scroll){window.scrollTo(0,0);document.body.focus();}});};if(process.env.NODE_ENV!=='production'){if(props.prefetch){console.warn('Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://err.sh/zeit/next.js/prefetch-true-deprecated');}}this.p=props.prefetch!==false;}componentWillUnmount(){this.cleanUpListeners();}handleRef(ref){if(this.p&&IntersectionObserver&&ref&&ref.tagName){this.cleanUpListeners();this.cleanUpListeners=listenToIntersections(ref,()=>{this.prefetch();});}}// The function is memoized so that no extra lifecycles are needed\n// as per https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\nprefetch(){if(!this.p||typeof window==='undefined')return;// Prefetch the JSON page if asked (only in the client)\nconst{pathname}=window.location;const{href:parsedHref}=this.formatUrls(this.props.href,this.props.as);const href=(0,_url.resolve)(pathname,parsedHref);_router.default.prefetch(href);}render(){let{children}=this.props;const{href,as}=this.formatUrls(this.props.href,this.props.as);// Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag\nif(typeof children==='string'){children=_react.default.createElement(\"a\",null,children);}// This will return the first child, if multiple are provided it will throw an error\nconst child=_react.Children.only(children);const props={ref:el=>{this.handleRef(el);if(child&&typeof child==='object'&&child.ref){if(typeof child.ref==='function')child.ref(el);else if(typeof child.ref==='object'){child.ref.current=el;}}},onMouseEnter:e=>{if(child.props&&typeof child.props.onMouseEnter==='function'){child.props.onMouseEnter(e);}this.prefetch();},onClick:e=>{if(child.props&&typeof child.props.onClick==='function'){child.props.onClick(e);}if(!e.defaultPrevented){this.linkClicked(e);}}// If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n// defined, we specify the current 'href', so that repetition is not needed by the user\n};if(this.props.passHref||child.type==='a'&&!('href'in child.props)){props.href=as||href;}// Add the ending slash to the paths. So, we can serve the\n// \"<page>/index.html\" directly.\nif(process.env.__NEXT_EXPORT_TRAILING_SLASH){if(props.href&&typeof __NEXT_DATA__!=='undefined'&&__NEXT_DATA__.nextExport){props.href=(0,_rewriteUrlForExport.rewriteUrlForNextExport)(props.href);}}return _react.default.cloneElement(child,props);}}Link.propTypes=void 0;if(process.env.NODE_ENV==='development'){const warn=(0,_utils.execOnce)(console.error);// This module gets removed by webpack.IgnorePlugin\nconst exact=require('prop-types-exact');Link.propTypes=exact({href:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.object]).isRequired,as:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.object]),prefetch:_propTypes.default.bool,replace:_propTypes.default.bool,shallow:_propTypes.default.bool,passHref:_propTypes.default.bool,scroll:_propTypes.default.bool,children:_propTypes.default.oneOfType([_propTypes.default.element,(props,propName)=>{const value=props[propName];if(typeof value==='string'){warn(\"Warning: You're using a string directly inside <Link>. This usage has been deprecated. Please add an <a> tag as child of <Link>\");}return null;}]).isRequired});}var _default=Link;exports.default=_default;","\"use strict\";var _interopRequireWildcard=require(\"@babel/runtime-corejs2/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");exports.__esModule=true;exports.useRouter=useRouter;exports.makePublicRouterInstance=makePublicRouterInstance;exports.createRouter=exports.withRouter=exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));var _defineProperty=_interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/object/define-property\"));var _react=_interopRequireDefault(require(\"react\"));var _router2=_interopRequireWildcard(require(\"next-server/dist/lib/router/router\"));exports.Router=_router2.default;exports.NextRouter=_router2.NextRouter;var _routerContext=require(\"next-server/dist/lib/router-context\");var _withRouter=_interopRequireDefault(require(\"./with-router\"));exports.withRouter=_withRouter.default;/* global window */const singletonRouter={router:null,// holds the actual router instance\nreadyCallbacks:[],ready(cb){if(this.router)return cb();if(typeof window!=='undefined'){this.readyCallbacks.push(cb);}}};// Create public properties and methods of the router in the singletonRouter\nconst urlPropertyFields=['pathname','route','query','asPath','components'];const routerEvents=['routeChangeStart','beforeHistoryChange','routeChangeComplete','routeChangeError','hashChangeStart','hashChangeComplete'];const coreMethodFields=['push','replace','reload','back','prefetch','beforePopState'];// Events is a static property on the router, the router doesn't have to be initialized to use it\n(0,_defineProperty.default)(singletonRouter,'events',{get(){return _router2.default.events;}});urlPropertyFields.forEach(field=>{// Here we need to use Object.defineProperty because, we need to return\n// the property assigned to the actual router\n// The value might get changed as we change routes and this is the\n// proper way to access it\n(0,_defineProperty.default)(singletonRouter,field,{get(){const router=getRouter();return router[field];}});});coreMethodFields.forEach(field=>{// We don't really know the types here, so we add them later instead\n;singletonRouter[field]=function(){const router=getRouter();return router[field](...arguments);};});routerEvents.forEach(event=>{singletonRouter.ready(()=>{_router2.default.events.on(event,function(){const eventField=\"on\"+event.charAt(0).toUpperCase()+event.substring(1);const _singletonRouter=singletonRouter;if(_singletonRouter[eventField]){try{_singletonRouter[eventField](...arguments);}catch(err){// tslint:disable-next-line:no-console\nconsole.error(\"Error when running the Router event: \"+eventField);// tslint:disable-next-line:no-console\nconsole.error(err.message+\"\\n\"+err.stack);}}});});});function getRouter(){if(!singletonRouter.router){const message='No router instance found.\\n'+'You should only use \"next/router\" inside the client side of your app.\\n';throw new Error(message);}return singletonRouter.router;}// Export the singletonRouter and this is the public API.\nvar _default=singletonRouter;// Reexport the withRoute HOC\nexports.default=_default;function useRouter(){return _react.default.useContext(_routerContext.RouterContext);}// INTERNAL APIS\n// -------------\n// (do not use following exports inside the app)\n// Create a router and assign it as the singleton instance.\n// This is used in client side when we are initilizing the app.\n// This should **not** use inside the server.\nconst createRouter=function createRouter(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}singletonRouter.router=new _router2.default(...args);singletonRouter.readyCallbacks.forEach(cb=>cb());singletonRouter.readyCallbacks=[];return singletonRouter.router;};// This function is used to create the `withRouter` router instance\nexports.createRouter=createRouter;function makePublicRouterInstance(router){const _router=router;const instance={};for(const property of urlPropertyFields){if(typeof _router[property]==='object'){instance[property]=(0,_extends2.default)({},_router[property]);// makes sure query is not stateful\ncontinue;}instance[property]=_router[property];}// Events is a static property on the router, the router doesn't have to be initialized to use it\ninstance.events=_router2.default.events;coreMethodFields.forEach(field=>{instance[field]=function(){return _router[field](...arguments);};});return instance;}","\"use strict\";var _interopRequireDefault=require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");exports.__esModule=true;exports.default=withRouter;var _extends2=_interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));var _react=_interopRequireDefault(require(\"react\"));var _propTypes=_interopRequireDefault(require(\"prop-types\"));function withRouter(ComposedComponent){class WithRouteWrapper extends _react.default.Component{constructor(){super(...arguments);this.context=void 0;}render(){return _react.default.createElement(ComposedComponent,(0,_extends2.default)({router:this.context.router},this.props));}}WithRouteWrapper.displayName=void 0;WithRouteWrapper.getInitialProps=void 0;WithRouteWrapper.contextTypes={router:_propTypes.default.object};WithRouteWrapper.getInitialProps=ComposedComponent.getInitialProps;if(process.env.NODE_ENV!=='production'){const name=ComposedComponent.displayName||ComposedComponent.name||'Unknown';WithRouteWrapper.displayName=\"withRouter(\"+name+\")\";}return WithRouteWrapper;}","module.exports = require('./dist/client/link')\n","import Head from 'next/head';\r\nimport React, { useState, useEffect } from 'react';\r\nimport App from '../layouts/App';\r\nimport CardOrder from '../components/order/CardOrder'\r\nimport pageListStyle from '../src/styleMUI/orders/orderList'\r\nimport {getOrders} from '../src/gql/order'\r\nimport { connect } from 'react-redux'\r\nimport Router from 'next/router'\r\nimport { urlMain } from '../redux/constants/other'\r\nimport LazyLoad from 'react-lazyload';\r\nimport { forceCheck } from 'react-lazyload';\r\nimport CardOrderPlaceholder from '../components/order/CardOrderPlaceholder'\r\nconst height = 225\r\n\r\n\r\nconst Orders = React.memo((props) => {\r\n    const classes = pageListStyle();\r\n    const { data } = props;\r\n\r\n    let [list, setList] = useState(data.invoices);\r\n    const { search, filter, sort, date } = props.app;\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            setList((await getOrders({search: search, sort: sort, filter: filter, date: date})).invoices)\r\n            forceCheck()\r\n        })()\r\n    },[filter, sort, search, date])\r\n    return (\r\n        <App dates={true} filters={data.filterInvoice} sorts={data.sortInvoice} pageName='Заказы'>\r\n            <Head>\r\n                <title>Заказы</title>\r\n                <meta name='description' content='Азык – это онлайн платформа для заказа товаров оптом, разработанная специально для малого и среднего бизнеса.  Она объединяет производителей и торговые точки напрямую, сокращая расходы и повышая продажи. Азык предоставляет своим пользователям мощные технологии для масштабирования и развития своего бизнеса.' />\r\n                <meta property='og:title' content='Заказы' />\r\n                <meta property='og:description' content='Азык – это онлайн платформа для заказа товаров оптом, разработанная специально для малого и среднего бизнеса.  Она объединяет производителей и торговые точки напрямую, сокращая расходы и повышая продажи. Азык предоставляет своим пользователям мощные технологии для масштабирования и развития своего бизнеса.' />\r\n                <meta property='og:type' content='website' />\r\n                <meta property='og:image' content={`${urlMain}/static/512x512.png`} />\r\n                <meta property=\"og:url\" content={`${urlMain}/orders`} />\r\n                <link rel='canonical' href={`${urlMain}/orders`}/>\r\n            </Head>\r\n            <div className={classes.page}>\r\n                {list?list.map((element)=>\r\n                    <LazyLoad scrollContainer={'.App-body'} key={element._id} height={height} offset={[height, 0]} debounce={0} once={true}  placeholder={<CardOrderPlaceholder/>}>\r\n                        <CardOrder setList={setList} key={element._id} element={element}/>\r\n                    </LazyLoad>\r\n                ):null}\r\n            </div>\r\n        </App>\r\n    )\r\n})\r\n\r\nOrders.getInitialProps = async function(ctx) {\r\n    if(!['admin', 'организация', 'менеджер', 'client', 'агент'].includes(ctx.store.getState().user.profile.role))\r\n        if(ctx.res) {\r\n            ctx.res.writeHead(302, {\r\n                Location: '/'\r\n            })\r\n            ctx.res.end()\r\n        } else\r\n            Router.push('/')\r\n    return {\r\n        data: await getOrders({search: '', sort: '-createdAt', filter: '', date: ''})\r\n    };\r\n};\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Orders);","import { SHOW_DRAWER, SET_SEARCH, SET_FILTER, SET_SORT, SET_IS_MOBILE_APP, SHOW_LOAD, SET_COUNT_BASKET, SET_DATE } from '../constants/app'\r\n\r\nexport function showDrawer(data) {\r\n    return {\r\n        type: SHOW_DRAWER,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport function setFilter(data) {\r\n    return {\r\n        type: SET_FILTER,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport function setDate(data) {\r\n    return {\r\n        type: SET_DATE,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport function setCountBasket(data) {\r\n    return {\r\n        type: SET_COUNT_BASKET,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport function setSort(data) {\r\n    return {\r\n        type: SET_SORT,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport function setSearch(data) {\r\n    return {\r\n        type: SET_SEARCH,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport function setIsMobileApp(data) {\r\n    return {\r\n        type: SET_IS_MOBILE_APP,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport function showLoad(show) {\r\n    return {\r\n        type: SHOW_LOAD,\r\n        payload: show\r\n    }\r\n}","import { SET_MINI_DIALOG, SHOW_MINI_DIALOG } from '../constants/mini_dialog'\r\n\r\nexport function setMiniDialog(title, child, fullScreen) {\r\n    return {\r\n        type: SET_MINI_DIALOG,\r\n        payload: {title: title, child: child, fullScreen}\r\n    }\r\n}\r\n\r\nexport function showMiniDialog(show) {\r\n    return {\r\n        type: SHOW_MINI_DIALOG,\r\n        payload: show\r\n    }\r\n}\r\n","import { NEXT, DISABLE } from '../constants/pagination'\r\n\r\nexport function next(data) {\r\n    return {\r\n        type: NEXT\r\n    }\r\n}\r\nexport function disable(data) {\r\n    return {\r\n        type: DISABLE\r\n    }\r\n}","import { CLOSE_SNACKBAR, SHOW_SNACKBAR } from '../constants/snackbar'\r\n\r\nexport function showSnackBar(title) {\r\n    return {\r\n        type: SHOW_SNACKBAR,\r\n        payload: {title: title}\r\n    }\r\n}\r\n\r\nexport function closeSnackBar() {\r\n    return {\r\n        type: CLOSE_SNACKBAR,\r\n    }\r\n}\r\n","import {\r\n    AUTHENTICATED,\r\n    UNAUTHENTICATED,\r\n    SET_PROFILE,\r\n    SET_AUTH,\r\n    ERROR_AUTHENTICATED\r\n} from '../constants/user'\r\nimport {\r\n    SHOW_MINI_DIALOG\r\n} from '../constants/mini_dialog'\r\nimport {\r\n    SET_COUNT_BASKET\r\n} from '../constants/app'\r\nimport Cookies from 'js-cookie';\r\nimport { gql } from 'apollo-boost';\r\nimport { SingletonApolloClient } from '../../src/singleton/client';\r\nimport Router from 'next/router';\r\n\r\nexport function signup(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const client = new SingletonApolloClient().getClient()\r\n            let result = await client.mutate({\r\n                variables: payload,\r\n                mutation : gql`\r\n                    mutation ($login: String!, $password: String!) {\r\n                        signupuser(login: $login, password: $password) {\r\n                           role\r\n                           status\r\n                           login\r\n                           organization\r\n                           _id\r\n                        }\r\n                    }`})\r\n            if(result.data.signupuser.role==='Проверьте данные')\r\n                await dispatch({\r\n                    type: ERROR_AUTHENTICATED,\r\n                    payload: true\r\n                })\r\n            else {\r\n                await dispatch({\r\n                    type: SHOW_MINI_DIALOG,\r\n                    payload: false\r\n                })\r\n                //await Router.push('/')\r\n                /*\r\n                await dispatch({type: AUTHENTICATED});\r\n                await dispatch({\r\n                    type: SET_PROFILE,\r\n                    payload: result.data.signupuser\r\n                })*/\r\n                window.location.reload()\r\n            }\r\n        } catch(error) {\r\n            dispatch({\r\n                type: ERROR_AUTHENTICATED,\r\n                payload: true\r\n            });\r\n        }\r\n    };\r\n}\r\n\r\nexport function signin(payload) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const client = new SingletonApolloClient().getClient();\r\n            let result = await client.mutate({\r\n                variables: payload,\r\n                mutation : gql`\r\n                    mutation ($login: String!, $password: String!) {\r\n                        signinuser(login: $login, password: $password) {\r\n                           role\r\n                           status\r\n                           login\r\n                           organization\r\n                           _id\r\n                        }\r\n                    }`})\r\n            if(result.data.signinuser.role==='Проверьте данные')\r\n                await dispatch({\r\n                    type: ERROR_AUTHENTICATED,\r\n                    payload: true\r\n                })\r\n            else {\r\n                await dispatch({\r\n                    type: SHOW_MINI_DIALOG,\r\n                    payload: false\r\n                })\r\n                //await Router.push('/')\r\n                window.location.reload()\r\n\r\n                /*await dispatch({type: AUTHENTICATED});\r\n                await dispatch({\r\n                    type: SET_PROFILE,\r\n                    payload: result.data.signinuser\r\n                })*/\r\n            }\r\n        } catch(error) {\r\n            console.error(error)\r\n            await dispatch({\r\n                type: ERROR_AUTHENTICATED,\r\n                payload: true\r\n            })\r\n        }\r\n    };\r\n}\r\n\r\nexport function checkAuthenticated() {\r\n    return async (dispatch) => {\r\n        try {\r\n            if (Cookies.get('jwt')) {\r\n                dispatch ({type: AUTHENTICATED});\r\n            } else {\r\n                dispatch ({type: UNAUTHENTICATED});\r\n            }\r\n        } catch (error) {\r\n            dispatch ({type: UNAUTHENTICATED});\r\n        }\r\n    };\r\n}\r\n\r\nexport function setAuthenticated(auth) {\r\n    return {\r\n        type: SET_AUTH,\r\n        payload: auth\r\n    }\r\n}\r\n\r\nexport function logout(reload) {\r\n    return async (dispatch) => {\r\n        await dispatch({\r\n            type: UNAUTHENTICATED,\r\n        })\r\n        if(reload)\r\n            await Router.push('/')\r\n        await Cookies.remove('jwt');\r\n        await dispatch({\r\n            type: SET_COUNT_BASKET,\r\n            payload: 0\r\n        })\r\n        await dispatch({\r\n            type: SET_PROFILE,\r\n            payload: {}\r\n        })\r\n        //setTimeout(()=>window.location.reload(),100)\r\n\r\n\r\n    }\r\n}\r\n\r\nexport function setProfile() {\r\n    return async (dispatch) => {\r\n        try {\r\n            const client = new SingletonApolloClient().getClient()\r\n            let result = await client\r\n                .query({\r\n                    query: gql`\r\n                    query {\r\n                        getStatus {\r\n                           role\r\n                           status\r\n                           login\r\n                           organization\r\n                           _id\r\n                          }\r\n                    }`\r\n                })\r\n            await dispatch({\r\n                type: SET_PROFILE,\r\n                payload: result.data.getStatus\r\n            })\r\n        } catch(error) {\r\n            console.error(error)\r\n        }\r\n    };\r\n}\r\n\r\nexport async function getProfile() {\r\n    try {\r\n        const client = new SingletonApolloClient().getClient()\r\n        let result = await client\r\n            .query({\r\n                query: gql`\r\n                   query {\r\n                       getStatus {\r\n                          role\r\n                          status\r\n                          login\r\n                          organization\r\n                          _id\r\n                         }\r\n                   }`\r\n            })\r\n        console.log(result.data.getStatus)\r\n        return result.data.getStatus\r\n    } catch(error) {\r\n        console.error(error)\r\n    }\r\n}","export const SHOW_DRAWER = 'SHOW_DRAWER'\r\nexport const SET_SEARCH = 'SET_SEARCH'\r\nexport const SET_SORT = 'SET_SORT'\r\nexport const SET_FILTER = 'SET_FILTER'\r\nexport const SET_DATE = 'SET_DATE'\r\nexport const SET_COUNT_BASKET = 'SET_COUNT_BASKET'\r\nexport const SET_IS_MOBILE_APP = 'SET_IS_MOBILE_APP'\r\nexport const SHOW_LOAD = 'SHOW_LOAD'\r\n","export const SET_MINI_DIALOG = 'SET_MINI_DIALOG'\r\nexport const SHOW_MINI_DIALOG = 'SHOW_MINI_DIALOG'\r\n","export let urlGQL\r\nexport let urlGQLws\r\nexport let urlMain\r\nif(process.env.URL.trim()==='azyk.store') {\r\n    urlGQL = `https://${process.env.URL}:3000/graphql`\r\n    urlGQLws = `ws://${process.env.URL}:3000/graphql`\r\n    urlMain = `https://${process.env.URL}`\r\n}\r\nelse {\r\n    urlGQL = `http://${process.env.URL}:3000/graphql`\r\n    urlGQLws = `ws://${process.env.URL}:3000/graphql`\r\n    urlMain = `http://${process.env.URL}`\r\n}\r\n\r\nexport const validMail = (mail) =>\r\n{\r\n    return /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()\\.,;\\s@\\\"]+\\.{0,1})+([^<>()\\.,;:\\s@\\\"]{2,}|[\\d\\.]+))$/.test(mail);\r\n}\r\nexport const validPhone = (phone) =>\r\n{\r\n    return /^[+]{1}996[0-9]{9}$/.test(phone);\r\n}\r\nexport const checkInt = (int) => {\r\n    return isNaN(parseInt(int))?0:parseInt(int)\r\n}\r\n","export const DISABLE = 'DISABLE'\r\nexport const NEXT = 'NEXT'\r\n","export const CLOSE_SNACKBAR = 'CLOSE_SNACKBAR'\r\nexport const SHOW_SNACKBAR = 'SHOW_SNACKBAR'\r\n","export const AUTHENTICATED = 'AUTHENTICATED'\r\nexport const UNAUTHENTICATED = 'UNAUTHENTICATED'\r\nexport const ERROR_AUTHENTICATED = 'ERROR_AUTHENTICATED'\r\nexport const SET_PROFILE = 'SET_PROFILE'\r\nexport const SET_AUTH = 'SET_AUTH'\r\n","import { gql } from 'apollo-boost';\r\nimport { SingletonApolloClient } from '../singleton/client';\r\nimport { SingletonStore } from '../singleton/store';\r\nimport {\r\n    setCountBasket\r\n} from '../../redux/actions/app'\r\n\r\nexport const getBasket = async()=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        let res = await client\r\n            .query({\r\n                query: gql`\r\n                    query{\r\n                        baskets {\r\n                            _id\r\n                            createdAt\r\n                            item \r\n                                {\r\n                                    _id \r\n                                    name \r\n                                    stock \r\n                                    image \r\n                                    price\r\n                                    organization\r\n                                        {_id name minimumOrder}\r\n                                }\r\n                            count\r\n                        }\r\n                    }`,\r\n            })\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const getCountBasket = async()=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        let res;\r\n        if(new SingletonStore().getStore().getState().user.authenticated)\r\n            res = await client.query({\r\n                query : gql`\r\n                    query {\r\n                        countBasket \r\n                    }`\r\n            })\r\n        else if(localStorage.basket) {\r\n            let basket = JSON.parse(localStorage.basket)\r\n            res = { data: { countBasket: basket.length}}\r\n        }\r\n        new SingletonStore().getStore().dispatch(setCountBasket(res.data.countBasket))\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const deleteBasket = async(ids)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {_id: ids},\r\n            mutation : gql`\r\n                    mutation ($_id: [ID]!) {\r\n                        deleteBasket(_id: $_id) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        await getCountBasket()\r\n        return await getBasket(new SingletonStore().getStore().getState().app)\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const addBasket = async(element)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: element,\r\n            mutation : gql`\r\n                    mutation ($item: ID!, $count: Int!) {\r\n                        addBasket(item: $item, count: $count) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        await getCountBasket()\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const setBasket = async(element)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: element,\r\n            mutation : gql`\r\n                    mutation ($_id: ID!, $count: Int!) {\r\n                        setBasket(_id: $_id, count: $count) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        await getCountBasket()\r\n        return await getBasket(new SingletonStore().getStore().getState().app)\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}","import { gql } from 'apollo-boost';\r\nimport { SingletonApolloClient } from '../singleton/client';\r\nimport { SingletonStore } from '../singleton/store';\r\n\r\nexport const getItems = async({subCategory,  search,  sort,  filter})=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n\r\n        let res = await client\r\n            .query({\r\n                variables: {subCategory: subCategory, search: search, sort: sort, filter: filter},\r\n                query: gql`\r\n                    query ($subCategory: ID!,$search: String!, $sort: String!, $filter: String!) {\r\n                        items(subCategory: $subCategory, search: $search, sort: $sort, filter: $filter) {\r\n                            _id\r\n                            subCategory\r\n                                {_id name}\r\n                            name\r\n                            status\r\n                            createdAt                  \r\n                            stock\r\n                            image\r\n                            info\r\n                            price\r\n                            reiting\r\n                            organization\r\n                                {_id name}\r\n                            hit\r\n                            latest\r\n                            favorite\r\n                            basket\r\n                        }\r\n                        sortItem {\r\n                            name\r\n                            field\r\n                        }\r\n                        filterItem {\r\n                           name\r\n                           value\r\n                        }\r\n                        subCategory(_id: $subCategory) {\r\n                           _id\r\n                           name\r\n                           category\r\n                                {_id name}\r\n                          }\r\n                    }`,\r\n            })\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const getBrands = async({organization,  search,  sort,  filter})=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        let res = await client\r\n            .query({\r\n                variables: {organization: organization, search: search, sort: sort, filter: filter},\r\n                query: gql`\r\n                    query ($organization: ID!,$search: String!, $sort: String!) {\r\n                        brands(organization: $organization, search: $search, sort: $sort) {\r\n                            _id\r\n                            subCategory\r\n                                {_id name}\r\n                            name\r\n                            status\r\n                            createdAt                  \r\n                            stock\r\n                            image\r\n                            info\r\n                            price\r\n                            reiting\r\n                            organization\r\n                                {_id name info image}\r\n                            hit\r\n                            latest\r\n                            favorite\r\n                            basket\r\n                        }\r\n                        sortItem {\r\n                            name\r\n                            field\r\n                        }\r\n                    }`,\r\n            })\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const favorites = async({ search})=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        let res = await client\r\n            .query({\r\n                variables: { search: search },\r\n                query: gql`\r\n                    query ($search: String!) {\r\n                        favorites(search: $search) {\r\n                            _id\r\n                            subCategory\r\n                                {_id name}\r\n                            name\r\n                            status\r\n                            createdAt                  \r\n                            stock\r\n                            image\r\n                            info\r\n                            price\r\n                            reiting\r\n                            organization\r\n                                {_id name}\r\n                            hit\r\n                            latest\r\n                            favorite\r\n                            basket\r\n                        }\r\n                    }`,\r\n            })\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const getItem = async({_id})=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        let res = await client\r\n            .query({\r\n                variables: {_id: _id},\r\n                query: gql`\r\n                    query ($_id: ID!) {\r\n                        item(_id: $_id) {\r\n                            _id\r\n                            subCategory\r\n                                {\r\n                                    _id \r\n                                    name \r\n                                    category\r\n                                        {_id name}\r\n                                }\r\n                            name\r\n                            status\r\n                            createdAt                  \r\n                            stock\r\n                            image\r\n                            info\r\n                            price\r\n                            reiting\r\n                            organization\r\n                                {_id name minimumOrder}\r\n                            hit\r\n                            latest\r\n                            favorite\r\n                            basket\r\n                            deliveryDays\r\n                        }\r\n                    }`,\r\n            })\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const deleteItem = async(ids, subCategory)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {_id: ids},\r\n            mutation : gql`\r\n                    mutation ($_id: [ID]!) {\r\n                        deleteItem(_id: $_id) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        return await getItems({subCategory: subCategory, ...(new SingletonStore().getStore().getState().app)})\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const onoffItem = async(ids)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {_id: ids},\r\n            mutation : gql`\r\n                    mutation ($_id: [ID]!) {\r\n                        onoffItem(_id: $_id) {\r\n                             data\r\n                        }\r\n                    }`})\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const favoriteItem = async(ids)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {_id: ids},\r\n            mutation : gql`\r\n                    mutation ($_id: [ID]!) {\r\n                        favoriteItem(_id: $_id) {\r\n                             data\r\n                        }\r\n                    }`})\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const addFavoriteItem = async(ids)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {_id: ids},\r\n            mutation : gql`\r\n                    mutation ($_id: [ID]!) {\r\n                        addFavoriteItem(_id: $_id) {\r\n                             data\r\n                        }\r\n                    }`})\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const addItem = async(element, subCategory)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {...element, subCategory: subCategory},\r\n            mutation : gql`\r\n                    mutation ($stock: Int!, $deliveryDays: [String], $name: String!, $image: Upload, $info: String!, $price: Int!, $subCategory: ID!, $organization: ID!, $hit: Boolean!, $latest: Boolean!) {\r\n                        addItem(stock: $stock, deliveryDays: $deliveryDays, name: $name, image: $image, info: $info, price: $price, subCategory: $subCategory, organization: $organization, hit: $hit, latest: $latest) {\r\n                             data\r\n                        }\r\n                    }`})\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const setItem = async(element)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {...element},\r\n            mutation : gql`\r\n                    mutation ($_id: ID!, $stock: Int, $deliveryDays: [String], $name: String, $image: Upload, $info: String, $price: Int, $subCategory: ID, $organization: ID, $hit: Boolean, $latest: Boolean) {\r\n                        setItem(_id: $_id, stock: $stock, deliveryDays: $deliveryDays, name: $name, image: $image, info: $info, price: $price, subCategory: $subCategory, organization: $organization, hit: $hit, latest: $latest) {\r\n                             data\r\n                        }\r\n                    }`})\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}","import { gql } from 'apollo-boost';\r\nimport { SingletonApolloClient } from '../singleton/client';\r\nimport { SingletonStore } from '../singleton/store';\r\n\r\nexport const getOrders = async({search, sort, filter, date})=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient();\r\n        let res = await client\r\n            .query({\r\n                variables: {search: search, sort: sort, filter: filter, date: date},\r\n                query: gql`\r\n                    query ($search: String!, $sort: String!, $filter: String!, $date: String!) {\r\n                        invoices(search: $search, sort: $sort, filter: $filter, date: $date) {\r\n                            _id\r\n                            agent \r\n                                {_id name}\r\n                            createdAt\r\n                            orders \r\n                                { \r\n                                    _id\r\n                                    createdAt\r\n                                    item\r\n                                        {\r\n                                            image\r\n                                            _id\r\n                                            name    \r\n                                            stock \r\n                                            price\r\n                                            organization\r\n                                                {_id name}\r\n                                        }\r\n                                    count\r\n                                    allPrice\r\n                                    status\r\n                                 }\r\n                            client \r\n                                { \r\n                                    _id\r\n                                    name\r\n                                    email\r\n                                    phone \r\n                                    user \r\n                                        {_id }\r\n                                }\r\n                            allPrice\r\n                            info\r\n                            address\r\n                            paymentMethod\r\n                            number\r\n                            confirmationForwarder\r\n                            confirmationClient\r\n                            cancelClient\r\n                            cancelForwarder\r\n                            taken\r\n                            dateDelivery\r\n                            usedBonus\r\n                        }\r\n                        sortInvoice {\r\n                            name\r\n                            field\r\n                        }\r\n                        filterInvoice {\r\n                           name\r\n                           value\r\n                        }\r\n                    }`,\r\n            })\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const getOrdersForRouting = async()=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient();\r\n        let res = await client\r\n            .query({\r\n                query: gql`\r\n                    query{\r\n                        invoicesForRouting{\r\n                            _id\r\n                            agent \r\n                                {_id name}\r\n                            createdAt\r\n                            orders \r\n                                { \r\n                                    _id\r\n                                    createdAt\r\n                                    item\r\n                                        {\r\n                                            image\r\n                                            _id\r\n                                            name    \r\n                                            stock \r\n                                            price\r\n                                            organization\r\n                                                {_id name}\r\n                                        }\r\n                                    count\r\n                                    allPrice\r\n                                    status\r\n                                 }\r\n                            client \r\n                                { \r\n                                    _id\r\n                                    name\r\n                                    email\r\n                                    phone \r\n                                    user \r\n                                        { _id }\r\n                                }\r\n                            allPrice\r\n                            info\r\n                            address\r\n                            paymentMethod\r\n                            number\r\n                            confirmationForwarder\r\n                            confirmationClient\r\n                            cancelClient\r\n                            cancelForwarder\r\n                            taken\r\n                            dateDelivery\r\n                            usedBonus\r\n                        }\r\n                    }`,\r\n            })\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const getOrder = async({_id})=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        let res = await client\r\n            .query({\r\n                variables: {_id: _id},\r\n                query: gql`\r\n                    query ($_id: ID!) {\r\n                        invoice(_id: $_id) {\r\n                            _id\r\n                            createdAt\r\n                            agent: \r\n                                {_id name}\r\n                            orders \r\n                                { \r\n                                    _id\r\n                                    createdAt\r\n                                    item\r\n                                        {\r\n                                            image\r\n                                            _id\r\n                                            name    \r\n                                            stock \r\n                                            price\r\n                                            organization\r\n                                                {_id name}\r\n                                        }\r\n                                    count\r\n                                    allPrice\r\n                                    status\r\n                                 }\r\n                            client \r\n                                { \r\n                                    _id\r\n                                    name\r\n                                    email\r\n                                    phone\r\n                                    user \r\n                                        {_id }\r\n                                }\r\n                            allPrice\r\n                            info\r\n                            address\r\n                            paymentMethod\r\n                            number\r\n                            confirmationForwarder\r\n                            cancelClient\r\n                            cancelForwarder\r\n                            confirmationClient\r\n                            taken\r\n                            dateDelivery\r\n                            usedBonus\r\n                        }\r\n                    }`,\r\n            })\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const addOrders = async(element)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: element,\r\n            mutation : gql`\r\n                    mutation ($info: String, $usedBonus: Boolean, $paymentMethod: String, $address: [[String]], $organization: ID!, $client: ID!) {\r\n                        addOrders(usedBonus: $usedBonus, info: $info, paymentMethod: $paymentMethod, address: $address, organization: $organization, client: $client) {\r\n                             data\r\n                        }\r\n                    }`})\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const cancelOrders = async(element)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: element,\r\n            mutation : gql`\r\n                    mutation ($_id: [ID]!, $invoice: ID) {\r\n                        cancelOrders(_id: $_id, invoice: $invoice) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        return await getOrders(new SingletonStore().getStore().getState().app)\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const approveOrders = async(element)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: element,\r\n            mutation : gql`\r\n                    mutation ($invoices: [ID]!, $route: ID) {\r\n                        approveOrders(invoices: $invoices, route: $route) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        return await getOrders(new SingletonStore().getStore().getState().app)\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const setInvoice = async(element)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: element,\r\n            mutation : gql`\r\n                    mutation ($taken: Boolean, $invoice: ID!, $confirmationClient: Boolean, $confirmationForwarder: Boolean, $cancelClient: Boolean, $cancelForwarder: Boolean) {\r\n                        setInvoice(taken: $taken, invoice: $invoice, confirmationClient: $confirmationClient, confirmationForwarder: $confirmationForwarder, cancelClient: $cancelClient, cancelForwarder: $cancelForwarder) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        //return await getOrders(new SingletonStore().getStore().getState().app)\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const setOrder = async(element)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: element,\r\n            mutation : gql`\r\n                    mutation ($orders: [OrderInput], $invoice: ID) {\r\n                        setOrder(orders: $orders, invoice: $invoice) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        return await getOrders(new SingletonStore().getStore().getState().app)\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n","const regexpUA = /(Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile|iOS|Mobile)/\r\nexport const checkMobile = (ua)=>{\r\n    return regexpUA.exec(ua)!==null\r\n}\r\nconst regexpAuth = /(\\s)?jwt=(\\S)+(;)?/\r\nexport const checkAuth = (auth)=>{\r\n    return regexpAuth.exec(auth)!==null\r\n}\r\nexport const getJWT = (auth)=>{\r\n    let res = regexpAuth.exec(auth)\r\n    return res!==null?res[0].trim().replace('jwt=', ''):undefined\r\n}\r\nexport const checkInt = (int) => {\r\n    return isNaN(parseInt(int))?0:parseInt(int)\r\n}\r\nexport const pdDDMMYYYY = (date) =>\r\n{\r\n    date.setHours(date.getHours() - (date.getTimezoneOffset()/60));\r\n    date = JSON.stringify(date).split('-')\r\n    date = date[2].split('T')[0]+'.'+date[1]+'.'+date[0].replace('\"', '')\r\n    return date\r\n}\r\nexport const pdDDMMYY = (date) =>\r\n{\r\n    date.setHours(date.getHours() - (date.getTimezoneOffset()/60));\r\n    date = JSON.stringify(date).split('-')\r\n    date = date[2].split('T')[0]+'.'+date[1]+'.'+(date[0].replace('\"', '')).substring(2,4)\r\n    return date\r\n}\r\nexport const pdDatePicker = (date) =>\r\n{\r\n    date.setHours(date.getHours() - (date.getTimezoneOffset()/60));\r\n    date = JSON.stringify(date).split('-')\r\n    date = date[0].replace('\"', '')+'-'+date[1]+'-'+date[2].split('T')[0]\r\n    return date\r\n}\r\nexport const pdDDMMYYHHMM = (date) =>\r\n{\r\n    date.setHours(date.getHours() - (date.getTimezoneOffset()/60));\r\n    date = JSON.stringify(date).split('-')\r\n    date = date[2].split('T')[0]+'.'+date[1]+'.'+(date[0].replace('\"', '')).substring(2,4)+' '+date[2].split('T')[1].split(':')[0]+':'+date[2].split('T')[1].split(':')[1]\r\n    return date\r\n}\r\nexport const pdDDMMYYHHMMCancel = (date) =>\r\n{\r\n    date.setHours(date.getHours() - (date.getTimezoneOffset()/60));\r\n    date.setMinutes(date.getMinutes() + 10);\r\n    date = JSON.stringify(date).split('-')\r\n    date = date[2].split('T')[0]+'.'+date[1]+'.'+(date[0].replace('\"', '')).substring(2,4)+' '+date[2].split('T')[1].split(':')[0]+':'+date[2].split('T')[1].split(':')[1]\r\n    return date\r\n}","/* eslint-disable no-extra-boolean-cast */\r\nimport { urlGQL, urlGQLws } from '../../redux/constants/other';\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport fetch from 'node-fetch';\r\nimport { getJWT } from '../lib'\r\nimport { setContext } from 'apollo-link-context';\r\nimport { onError } from 'apollo-link-error';\r\nimport { ApolloLink, split  } from 'apollo-link';\r\nimport { createUploadLink } from 'apollo-upload-client'\r\n//import { WebSocketLink } from 'apollo-link-ws';\r\n//import { getMainDefinition } from 'apollo-utilities';\r\n//import * as ws from 'ws';\r\nimport { SingletonStore } from '../singleton/store';\r\nimport {\r\n    showSnackBar\r\n} from '../../redux/actions/snackbar'\r\nexport class SingletonApolloClient {\r\n    constructor(req) {\r\n        if (!!SingletonApolloClient.instance) {\r\n            return SingletonApolloClient.instance;\r\n        }\r\n        SingletonApolloClient.instance = this;\r\n        const uploadLink = createUploadLink({\r\n            uri: urlGQL,\r\n            fetch: fetch,\r\n            credentials: 'include'\r\n        });\r\n        const authLink = setContext((_, { headers }) => {\r\n            return {\r\n                headers: {\r\n                    ...headers,\r\n                    authorization: this.jwt ? `Bearer ${this.jwt}` : '',\r\n                }\r\n            }\r\n        });\r\n        const linkError = onError((ctx) => {\r\n            if (ctx.graphQLErrors)\r\n                ctx.graphQLErrors.map(({ message, locations, path }) =>{\r\n                    new SingletonStore().getStore().dispatch(showSnackBar('Ошибка'))\r\n                    console.log(\r\n                        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\r\n                    )\r\n                });\r\n            if (ctx.networkError) console.log(`[Network error]: ${ctx.networkError}`);\r\n        });\r\n        /*const wsLink = new WebSocketLink({\r\n            uri: urlGQLws,\r\n            options: {\r\n                reconnect: true\r\n            },\r\n            webSocketImpl: process.browser?WebSocket:ws\r\n        });*/\r\n        const mainLink = /*split(\r\n            ({ query }) => {\r\n                const definition = getMainDefinition(query);\r\n                return (\r\n                    definition.kind === 'OperationDefinition' &&\r\n                    definition.operation === 'subscription'\r\n                );\r\n            },\r\n            wsLink,*/\r\n            uploadLink/*,\r\n        );*/\r\n        const link = ApolloLink.from([\r\n            linkError,\r\n            authLink,\r\n            mainLink\r\n        ]);\r\n        this.client = new ApolloClient({\r\n            link: link,\r\n            cache: new InMemoryCache(),\r\n            defaultOptions: {\r\n                watchQuery: {\r\n                    fetchPolicy: 'cache-and-network',\r\n                    errorPolicy: 'ignore',\r\n                },\r\n                query: {\r\n                    fetchPolicy: 'network-only',\r\n                    errorPolicy: 'all',\r\n                },\r\n                mutate: {\r\n                    errorPolicy: 'all',\r\n                },\r\n            },\r\n\r\n        });\r\n        this.jwt = getJWT(req?req.headers.cookie:document.cookie)\r\n\r\n        return this;\r\n    }\r\n\r\n    getClient() {\r\n        return this.client;\r\n    }\r\n}","/* eslint-disable no-extra-boolean-cast */\r\nexport class SingletonStore {\r\n    constructor(store) {\r\n        if (!!SingletonStore.instance) {\r\n            return SingletonStore.instance;\r\n        }\r\n        SingletonStore.instance = this;\r\n        this.store = store\r\n        return this;\r\n    }\r\n\r\n    getStore() {\r\n        return this.store;\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nexport default makeStyles({\r\n    appBar: {\r\n        zIndex: 1201,\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    searchD: {\r\n        position: 'fixed',\r\n        top: 6,\r\n        right: 6\r\n    },\r\n    searchM: {\r\n        position: 'fixed',\r\n        top: 0,\r\n        right: 0,\r\n        height: '56px',\r\n        width: '100vw'\r\n    },\r\n    textField: {\r\n        width: 'calc(100% - 20px)',\r\n        margin: 10,\r\n    },\r\n    searchField: {\r\n        width: 'calc(100% - 20px)',\r\n        margin: 10,\r\n    },\r\n})","export default theme => ({\r\n    main:{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n    mainLine:{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'row'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: 'indigo',\r\n        fontWeight: 'bold',\r\n        cursor: 'pointer',\r\n        overflowWrap: 'break-word',\r\n        fontSize: '1rem'\r\n    },\r\n    itogo: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        textAlign: 'left',\r\n        fontSize: '1rem',\r\n        fontWeight: 500\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    nameField: {\r\n        marginBottom: 10,\r\n        fontWeight: 'bold',\r\n        fontSize: '0.875rem',\r\n        fontFamily: 'Roboto',\r\n        color: '#A0A0A0'\r\n    },\r\n    value: {\r\n        marginBottom: 10,\r\n        fontWeight: '500',\r\n        fontSize: '0.875rem',\r\n        fontFamily: 'Roboto'\r\n    },\r\n    row: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'baseline'\r\n    },\r\n    fabGeo: {\r\n        position: 'fixed',\r\n        bottom: 70,\r\n        right: 35\r\n    },\r\n    geo: {\r\n        width: 170,\r\n        textAlign: 'center',\r\n        marginTop: -5,\r\n        marginBottom: 10,\r\n        fontSize: '0.875rem',\r\n        fontFamily: 'Roboto',\r\n        whiteSpace: 'pre-wrap',\r\n        cursor: 'pointer',\r\n        borderBottom: '1px dashed #ffb300'\r\n    },\r\n    counterbtn: {\r\n        marginRight: 10,\r\n        marginLeft: 10,\r\n        userSelect: 'none',\r\n        cursor: 'pointer',\r\n        width: 16,\r\n        height: 16,\r\n        fontSize: '0.875rem',\r\n        fontWeight: 700,\r\n        background: '#e6e6e6',\r\n        color: '#212121',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5),\r\n        cursor: 'pointer',\r\n    },\r\n});","export default theme => ({\r\n    drawer: {\r\n        width: 300,\r\n        flexShrink: 0,\r\n        overflow: 'hidden'\r\n    },\r\n    drawerPaper: {\r\n        width: 300,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n});","import { makeStyles } from '@material-ui/core/styles';\r\nexport default makeStyles({\r\n    card: {\r\n        width: 400,\r\n        margin: 10,\r\n        position: 'relative'\r\n    },\r\n    column: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    row: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'baseline'\r\n    },\r\n    number: {\r\n        marginBottom: 10,\r\n        fontWeight: 'bold',\r\n        fontSize: '1rem',\r\n        fontFamily: 'Roboto',\r\n    },\r\n    date: {\r\n        marginBottom: 10,\r\n        fontSize: '0.875rem',\r\n        fontFamily: 'Roboto',\r\n        color: '#A0A0A0'\r\n    },\r\n    status: {\r\n        position: 'absolute',\r\n        top: 10,\r\n        right: 10,\r\n        padding: 4,\r\n        borderRadius: 10,\r\n        fontSize: '0.815rem',\r\n        fontWeight: 'bold',\r\n        color: 'white',\r\n        fontFamily: 'Roboto',\r\n\r\n    },\r\n    nameField: {\r\n        marginBottom: 10,\r\n        fontWeight: 'bold',\r\n        fontSize: '0.875rem',\r\n        fontFamily: 'Roboto',\r\n        color: '#A0A0A0'\r\n    },\r\n    value: {\r\n        marginBottom: 10,\r\n        fontWeight: '500',\r\n        fontSize: '0.875rem',\r\n        fontFamily: 'Roboto'\r\n    },\r\n})","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n    page: {\r\n        paddingTop: 20,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap'\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: '20px',\r\n        right: '20px'\r\n    }\r\n})","module.exports = require(\"@material-ui/core/AppBar\");","module.exports = require(\"@material-ui/core/Badge\");","module.exports = require(\"@material-ui/core/Button\");","module.exports = require(\"@material-ui/core/Card\");","module.exports = require(\"@material-ui/core/CardActionArea\");","module.exports = require(\"@material-ui/core/CardContent\");","module.exports = require(\"@material-ui/core/Checkbox\");","module.exports = require(\"@material-ui/core/CircularProgress\");","module.exports = require(\"@material-ui/core/Dialog\");","module.exports = require(\"@material-ui/core/DialogContent\");","module.exports = require(\"@material-ui/core/DialogTitle\");","module.exports = require(\"@material-ui/core/Divider\");","module.exports = require(\"@material-ui/core/Fab\");","module.exports = require(\"@material-ui/core/FormControl\");","module.exports = require(\"@material-ui/core/FormControlLabel\");","module.exports = require(\"@material-ui/core/IconButton\");","module.exports = require(\"@material-ui/core/Input\");","module.exports = require(\"@material-ui/core/InputAdornment\");","module.exports = require(\"@material-ui/core/InputLabel\");","module.exports = require(\"@material-ui/core/List\");","module.exports = require(\"@material-ui/core/ListItem\");","module.exports = require(\"@material-ui/core/ListItemIcon\");","module.exports = require(\"@material-ui/core/ListItemText\");","module.exports = require(\"@material-ui/core/Menu\");","module.exports = require(\"@material-ui/core/MenuItem\");","module.exports = require(\"@material-ui/core/Paper\");","module.exports = require(\"@material-ui/core/Snackbar\");","module.exports = require(\"@material-ui/core/SwipeableDrawer\");","module.exports = require(\"@material-ui/core/TextField\");","module.exports = require(\"@material-ui/core/Toolbar\");","module.exports = require(\"@material-ui/core/Tooltip\");","module.exports = require(\"@material-ui/core/Typography\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"@material-ui/icons/ArrowDownward\");","module.exports = require(\"@material-ui/icons/ArrowUpward\");","module.exports = require(\"@material-ui/icons/ArtTrack\");","module.exports = require(\"@material-ui/icons/AssignmentInd\");","module.exports = require(\"@material-ui/icons/Cancel\");","module.exports = require(\"@material-ui/icons/Clear\");","module.exports = require(\"@material-ui/icons/DateRange\");","module.exports = require(\"@material-ui/icons/Done\");","module.exports = require(\"@material-ui/icons/ExitToApp\");","module.exports = require(\"@material-ui/icons/FilterListRounded\");","module.exports = require(\"@material-ui/icons/FormatListNumbered\");","module.exports = require(\"@material-ui/icons/GpsFixed\");","module.exports = require(\"@material-ui/icons/Group\");","module.exports = require(\"@material-ui/icons/Info\");","module.exports = require(\"@material-ui/icons/LocalGroceryStore\");","module.exports = require(\"@material-ui/icons/LocationCity\");","module.exports = require(\"@material-ui/icons/Loyalty\");","module.exports = require(\"@material-ui/icons/Menu\");","module.exports = require(\"@material-ui/icons/Money\");","module.exports = require(\"@material-ui/icons/PermIdentity\");","module.exports = require(\"@material-ui/icons/Receipt\");","module.exports = require(\"@material-ui/icons/SearchRounded\");","module.exports = require(\"@material-ui/icons/SortRounded\");","module.exports = require(\"@material-ui/icons/Star\");","module.exports = require(\"@material-ui/icons/UnfoldLess\");","module.exports = require(\"@material-ui/icons/UnfoldMore\");","module.exports = require(\"@material-ui/icons/ViewList\");","module.exports = require(\"@material-ui/icons/Visibility\");","module.exports = require(\"@material-ui/icons/VisibilityOff\");","module.exports = require(\"@material-ui/icons/Whatshot\");","module.exports = require(\"@material-ui/lab/Skeleton\");","module.exports = require(\"apollo-boost\");","module.exports = require(\"apollo-cache-inmemory\");","module.exports = require(\"apollo-client\");","module.exports = require(\"apollo-link\");","module.exports = require(\"apollo-link-context\");","module.exports = require(\"apollo-link-error\");","module.exports = require(\"apollo-upload-client\");","module.exports = require(\"classnames\");","module.exports = require(\"core-js/library/fn/json/stringify\");","module.exports = require(\"core-js/library/fn/map\");","module.exports = require(\"core-js/library/fn/object/assign\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/parse-int\");","module.exports = require(\"js-cookie\");","module.exports = require(\"next-server/dist/lib/router-context\");","module.exports = require(\"next-server/dist/lib/router/rewrite-url-for-export\");","module.exports = require(\"next-server/dist/lib/router/router\");","module.exports = require(\"next-server/dist/lib/utils\");","module.exports = require(\"next/head\");","module.exports = require(\"next/router\");","module.exports = require(\"node-fetch\");","module.exports = require(\"prop-types\");","module.exports = require(\"prop-types-exact\");","module.exports = require(\"react\");","module.exports = require(\"react-bottom-scroll-listener\");","module.exports = require(\"react-lazyload\");","module.exports = require(\"react-redux\");","module.exports = require(\"react-yandex-maps\");","module.exports = require(\"redux\");","module.exports = require(\"url\");"],"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;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC7GA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbxGA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7BA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;AACA;AADA;AAAA;AACA;AAfA;AACA;AAaA;AACA;AADA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;;ACjrBA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;;;;;;;ACvEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA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CA;AACA;AACA;AACA;;;;;;AAFA;AAQA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;AAFA;AAQA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;AAFA;AAQA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;AAFA;AASA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;AAFA;AAQA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AACA;AACA;AAEA;AAFA;AADA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;;;;;;;;AAOA;AAAA;;;;;;;;;AASA;AAAA;;;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AATA;AAHA;AAkBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AA9EA;;;;;;;;;;;;ACjBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AA1BA;;;;;;;;;;;;ACDA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AAFA;AAlGA;;;;;;;;;;;;ACAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AATA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AA9CA;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AAHA;AATA;;;;;;;;;;;;;;;;;;;;;;;ACFA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}