{"version":3,"file":"0.js","sources":["webpack:///./components/dialog/Confirmation.js","webpack:///./src/styleMUI/dialogContent.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as appActions from '../../redux/actions/app'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport Done from '@material-ui/icons/Done';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport dialogContentStyle from '../../src/styleMUI/dialogContent'\r\n\r\nconst Confirmation =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { showSnackBar } = props.snackbarActions;\r\n        const { showLoad } = props.appActions;\r\n        const { classes, action } = props;\r\n        return (\r\n            <div className={classes.line}>\r\n                <IconButton onClick={async()=>{\r\n                    try {\r\n                        await showMiniDialog(false)\r\n                        await showLoad(true)\r\n                        await action()\r\n                        await showLoad(false)\r\n                    }  catch (err) {\r\n                        showSnackBar('Ошибка')\r\n                    }\r\n                }} aria-label='Delete'>\r\n                    <Done className={classes.button} />\r\n                </IconButton>\r\n                <IconButton onClick={async()=>{\r\n                    showMiniDialog(false)\r\n                }} aria-label='Cancel'>\r\n                    <Clear className={classes.button}/>\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nConfirmation.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(Confirmation));","export default theme => ({\r\n    main:{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column'\r\n    },\r\n    mainLine:{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'row'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: 'indigo',\r\n        fontWeight: 'bold',\r\n        cursor: 'pointer',\r\n        overflowWrap: 'break-word',\r\n        fontSize: '1rem'\r\n    },\r\n    itogo: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        textAlign: 'left',\r\n        fontSize: '1rem',\r\n        fontWeight: 500\r\n    },\r\n    error_message: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        color: 'red',\r\n        fontWeight: 'bold'\r\n    },\r\n    nameField: {\r\n        marginBottom: 10,\r\n        fontWeight: 'bold',\r\n        fontSize: '0.875rem',\r\n        fontFamily: 'Roboto',\r\n        color: '#A0A0A0'\r\n    },\r\n    value: {\r\n        marginBottom: 10,\r\n        fontWeight: '500',\r\n        fontSize: '0.875rem',\r\n        fontFamily: 'Roboto'\r\n    },\r\n    row: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'baseline'\r\n    },\r\n});"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AADA;AAIA;;;;;;;;;;;;AC7DA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AA9DA;;;;A","sourceRoot":""}