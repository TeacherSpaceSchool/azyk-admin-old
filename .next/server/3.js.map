{"version":3,"file":"3.js","sources":["webpack:///./components/dialog/Confirmation.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as appActions from '../../redux/actions/app'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport Done from '@material-ui/icons/Done';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport dialogContentStyle from '../../src/styleMUI/dialogContent'\r\n\r\nconst Confirmation =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { showSnackBar } = props.snackbarActions;\r\n        const { showLoad } = props.appActions;\r\n        const { classes, action } = props;\r\n        return (\r\n            <div className={classes.line}>\r\n                <IconButton onClick={async()=>{\r\n                    try {\r\n                        await showMiniDialog(false)\r\n                        await showLoad(true)\r\n                        await action()\r\n                        await showLoad(false)\r\n                    }  catch (err) {\r\n                        showSnackBar('Ошибка')\r\n                    }\r\n                }} aria-label='Delete'>\r\n                    <Done className={classes.button} />\r\n                </IconButton>\r\n                <IconButton onClick={async()=>{\r\n                    showMiniDialog(false)\r\n                }} aria-label='Cancel'>\r\n                    <Clear className={classes.button}/>\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nConfirmation.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(Confirmation));"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AADA;AAIA;;;;A","sourceRoot":""}