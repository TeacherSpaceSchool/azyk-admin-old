{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n                    mutation ($_id: ID!, $phone: String, $image: Upload, $name: String, $email: String, $address: [String], $info: String, $newPass: String) {\\n                        setClient(_id: $_id, phone: $phone, image: $image, name: $name, email: $email, address: $address, info: $info, newPass: $newPass) {\\n                             data\\n                        }\\n                    }\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n                    mutation ($_id: [ID]!) {\\n                        onoffClient(_id: $_id) {\\n                             data\\n                        }\\n                    }\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n                    query ($_id: ID!) {\\n                        client(_id: $_id) {\\n                            _id\\n                            image\\n                            updatedAt\\n                            name\\n                            email\\n                            address\\n                            info\\n                            reiting\\n                            user \\n                                {_id role status phone}\\n                        }\\n                    }\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n                    query ($search: String!, $sort: String!, $filter: String!) {\\n                        clients(search: $search, sort: $sort, filter: $filter) {\\n                            _id\\n                            image\\n                            updatedAt\\n                            name\\n                            email\\n                            address\\n                            info\\n                            reiting\\n                            user \\n                                {_id role status phone}\\n                          }\\n                          sortClient {\\n                           name\\n                            field\\n                          }\\n                          filterClient {\\n                           name\\n                           value\\n                          }\\n                    }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from 'apollo-boost';\nimport { SingletonApolloClient } from '../singleton/client';\nimport { SingletonStore } from '../singleton/store';\nexport var getClients =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var search, sort, filter, client, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            search = _ref.search, sort = _ref.sort, filter = _ref.filter;\n            _context.prev = 1;\n            client = new SingletonApolloClient().getClient();\n            _context.next = 5;\n            return client.query({\n              variables: {\n                search: search,\n                sort: sort,\n                filter: filter\n              },\n              query: gql(_templateObject())\n            });\n\n          case 5:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res.data);\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            console.error(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 9]]);\n  }));\n\n  return function getClients(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getClient =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(_ref3) {\n    var _id, client, res;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _id = _ref3._id;\n            _context2.prev = 1;\n            client = new SingletonApolloClient().getClient();\n            _context2.next = 5;\n            return client.query({\n              variables: {\n                _id: _id\n              },\n              query: gql(_templateObject2())\n            });\n\n          case 5:\n            res = _context2.sent;\n            return _context2.abrupt(\"return\", res.data);\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.error(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 9]]);\n  }));\n\n  return function getClient(_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var onoffClient =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(ids) {\n    var client;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            client = new SingletonApolloClient().getClient();\n            _context3.next = 4;\n            return client.mutate({\n              variables: {\n                _id: ids\n              },\n              mutation: gql(_templateObject3())\n            });\n\n          case 4:\n            _context3.next = 6;\n            return getClients(new SingletonStore().getStore().getState().app);\n\n          case 6:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error(_context3.t0);\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 9]]);\n  }));\n\n  return function onoffClient(_x3) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var setClient =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(element) {\n    var client, list;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            client = new SingletonApolloClient().getClient();\n            _context4.next = 4;\n            return client.mutate({\n              variables: element,\n              mutation: gql(_templateObject4())\n            });\n\n          case 4:\n            _context4.next = 6;\n            return getClients(new SingletonStore().getStore().getState().app);\n\n          case 6:\n            list = _context4.sent;\n            return _context4.abrupt(\"return\", list);\n\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.error(_context4.t0);\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 10]]);\n  }));\n\n  return function setClient(_x4) {\n    return _ref6.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}