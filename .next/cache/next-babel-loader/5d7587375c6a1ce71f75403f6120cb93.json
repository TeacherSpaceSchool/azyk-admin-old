{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState } from 'react';\nimport App from '../layouts/App';\nimport { connect } from 'react-redux';\nimport { getContact, setContact } from '../src/gql/contact';\nimport contactStyle from '../src/styleMUI/contact';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../redux/actions/mini_dialog';\nimport Add from '@material-ui/icons/Add';\nimport Remove from '@material-ui/icons/Remove';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Confirmation from '../components/dialog/Confirmation';\nimport AddSocial from '../components/dialog/AddSocial';\nimport { urlMain } from '../redux/constants/other';\nvar Contact = React.memo(function (props) {\n  var classes = contactStyle();\n  var data = props.data;\n  var isMobileApp = props.app.isMobileApp;\n\n  var _useState = useState(data.contact.name),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(data.contact.address),\n      address = _useState2[0],\n      setAddress = _useState2[1];\n\n  var _useState3 = useState(''),\n      newAddress = _useState3[0],\n      setNewAddress = _useState3[1];\n\n  var addAddress = function addAddress() {\n    address = [].concat(_toConsumableArray(address), [newAddress]);\n    setAddress(address);\n    setNewAddress('');\n  };\n\n  var editAddress = function editAddress(event, idx) {\n    address[idx] = event.target.value;\n    setAddress(_toConsumableArray(address));\n  };\n\n  var deleteAddress = function deleteAddress(idx) {\n    address.splice(idx, 1);\n    setAddress(_toConsumableArray(address));\n  };\n\n  var _useState4 = useState(data.contact.email),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      newEmail = _useState5[0],\n      setNewEmail = _useState5[1];\n\n  var addEmail = function addEmail() {\n    email = [].concat(_toConsumableArray(email), [newEmail]);\n    setEmail(email);\n    setNewEmail('');\n  };\n\n  var editEmail = function editEmail(event, idx) {\n    email[idx] = event.target.value;\n    setEmail(_toConsumableArray(email));\n  };\n\n  var deleteEmail = function deleteEmail(idx) {\n    email.splice(idx, 1);\n    setEmail(_toConsumableArray(email));\n  };\n\n  var _useState6 = useState(data.contact.phone),\n      phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  var _useState7 = useState(''),\n      newPhone = _useState7[0],\n      setNewPhone = _useState7[1];\n\n  var addPhone = function addPhone() {\n    phone = [].concat(_toConsumableArray(phone), [newPhone]);\n    setPhone(phone);\n    setNewPhone('');\n  };\n\n  var editPhone = function editPhone(event, idx) {\n    phone[idx] = event.target.value;\n    setPhone(_toConsumableArray(phone));\n  };\n\n  var deletePhone = function deletePhone(idx) {\n    phone.splice(idx, 1);\n    setPhone(_toConsumableArray(phone));\n  };\n\n  var _useState8 = useState(data.contact.social),\n      social = _useState8[0],\n      setSocial = _useState8[1];\n\n  var addSocial = function addSocial(value, idx) {\n    social[idx] = value;\n    setSocial(_toConsumableArray(social));\n  };\n\n  var _useState9 = useState(data.contact.info),\n      info = _useState9[0],\n      setInfo = _useState9[1];\n\n  var _useState10 = useState(data.contact.image === '' ? '/static/add.png' : data.contact.image),\n      preview = _useState10[0],\n      setPreview = _useState10[1];\n\n  var _useState11 = useState(undefined),\n      image = _useState11[0],\n      setImage = _useState11[1];\n\n  var handleChangeImage = function handleChangeImage(event) {\n    setImage(event.target.files[0]);\n    setPreview(URL.createObjectURL(event.target.files[0]));\n  };\n\n  var profile = props.user.profile;\n  var _props$mini_dialogAct = props.mini_dialogActions,\n      setMiniDialog = _props$mini_dialogAct.setMiniDialog,\n      showMiniDialog = _props$mini_dialogAct.showMiniDialog;\n  return __jsx(App, {\n    filters: data.filterSubCategory,\n    sorts: data.sortSubCategory,\n    pageName: \"\\u041A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u044B\"\n  }, __jsx(Head, null, __jsx(\"title\", null, name), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"\\u0410\\u0437\\u044B\\u043A \\u2013 \\u044D\\u0442\\u043E \\u043E\\u043D\\u043B\\u0430\\u0439\\u043D \\u043F\\u043B\\u0430\\u0442\\u0444\\u043E\\u0440\\u043C\\u0430 \\u0434\\u043B\\u044F \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432 \\u043E\\u043F\\u0442\\u043E\\u043C, \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u043D\\u043D\\u0430\\u044F \\u0441\\u043F\\u0435\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E \\u0434\\u043B\\u044F \\u043C\\u0430\\u043B\\u043E\\u0433\\u043E \\u0438 \\u0441\\u0440\\u0435\\u0434\\u043D\\u0435\\u0433\\u043E \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\\u0430.  \\u041E\\u043D\\u0430 \\u043E\\u0431\\u044A\\u0435\\u0434\\u0438\\u043D\\u044F\\u0435\\u0442 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u0435\\u0439 \\u0438 \\u0442\\u043E\\u0440\\u0433\\u043E\\u0432\\u044B\\u0435 \\u0442\\u043E\\u0447\\u043A\\u0438 \\u043D\\u0430\\u043F\\u0440\\u044F\\u043C\\u0443\\u044E, \\u0441\\u043E\\u043A\\u0440\\u0430\\u0449\\u0430\\u044F \\u0440\\u0430\\u0441\\u0445\\u043E\\u0434\\u044B \\u0438 \\u043F\\u043E\\u0432\\u044B\\u0448\\u0430\\u044F \\u043F\\u0440\\u043E\\u0434\\u0430\\u0436\\u0438. \\u0410\\u0437\\u044B\\u043A \\u043F\\u0440\\u0435\\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043B\\u044F\\u0435\\u0442 \\u0441\\u0432\\u043E\\u0438\\u043C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\\u043C \\u043C\\u043E\\u0449\\u043D\\u044B\\u0435 \\u0442\\u0435\\u0445\\u043D\\u043E\\u043B\\u043E\\u0433\\u0438\\u0438 \\u0434\\u043B\\u044F \\u043C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\u0438 \\u0440\\u0430\\u0437\\u0432\\u0438\\u0442\\u0438\\u044F \\u0441\\u0432\\u043E\\u0435\\u0433\\u043E \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\\u0430.\"\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: \"\\u0410\\u0437\\u044B\\u043A - \\u044D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u044B\\u0439 \\u0441\\u043A\\u043B\\u0430\\u0434 \\u0441\\u0432\\u044F\\u0437\\u044B\\u0432\\u0430\\u044E\\u0449\\u0438\\u0439 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u044F \\u0441 \\u0442\\u043E\\u0440\\u0433\\u043E\\u0432\\u043E\\u0439 \\u0442\\u043E\\u0447\\u043A\\u043E\\u0439\"\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: \"\\u0410\\u0437\\u044B\\u043A \\u2013 \\u044D\\u0442\\u043E \\u043E\\u043D\\u043B\\u0430\\u0439\\u043D \\u043F\\u043B\\u0430\\u0442\\u0444\\u043E\\u0440\\u043C\\u0430 \\u0434\\u043B\\u044F \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432 \\u043E\\u043F\\u0442\\u043E\\u043C, \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u043D\\u043D\\u0430\\u044F \\u0441\\u043F\\u0435\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E \\u0434\\u043B\\u044F \\u043C\\u0430\\u043B\\u043E\\u0433\\u043E \\u0438 \\u0441\\u0440\\u0435\\u0434\\u043D\\u0435\\u0433\\u043E \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\\u0430.  \\u041E\\u043D\\u0430 \\u043E\\u0431\\u044A\\u0435\\u0434\\u0438\\u043D\\u044F\\u0435\\u0442 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u0435\\u0439 \\u0438 \\u0442\\u043E\\u0440\\u0433\\u043E\\u0432\\u044B\\u0435 \\u0442\\u043E\\u0447\\u043A\\u0438 \\u043D\\u0430\\u043F\\u0440\\u044F\\u043C\\u0443\\u044E, \\u0441\\u043E\\u043A\\u0440\\u0430\\u0449\\u0430\\u044F \\u0440\\u0430\\u0441\\u0445\\u043E\\u0434\\u044B \\u0438 \\u043F\\u043E\\u0432\\u044B\\u0448\\u0430\\u044F \\u043F\\u0440\\u043E\\u0434\\u0430\\u0436\\u0438. \\u0410\\u0437\\u044B\\u043A \\u043F\\u0440\\u0435\\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043B\\u044F\\u0435\\u0442 \\u0441\\u0432\\u043E\\u0438\\u043C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\\u043C \\u043C\\u043E\\u0449\\u043D\\u044B\\u0435 \\u0442\\u0435\\u0445\\u043D\\u043E\\u043B\\u043E\\u0433\\u0438\\u0438 \\u0434\\u043B\\u044F \\u043C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\u0438 \\u0440\\u0430\\u0437\\u0432\\u0438\\u0442\\u0438\\u044F \\u0441\\u0432\\u043E\\u0435\\u0433\\u043E \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\\u0430.\"\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: \"website\"\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: \"\".concat(urlMain, \"/static/512x512.png\")\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: \"\".concat(urlMain, \"/contact\")\n  }), __jsx(\"link\", {\n    rel: \"canonical\",\n    href: \"\".concat(urlMain, \"/contact\")\n  })), __jsx(Card, {\n    className: classes.page\n  }, __jsx(CardContent, {\n    className: isMobileApp ? classes.column : classes.row\n  }, profile.role === 'admin' ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.column\n  }, __jsx(\"label\", {\n    htmlFor: \"contained-button-file\"\n  }, __jsx(\"img\", {\n    className: classes.media,\n    src: preview,\n    alt: 'Добавить'\n  })), \"\\u041D\\u0430\\u0448\\u0438 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B\", __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"img\", {\n    src: \"/static/instagram.svg\",\n    onClick: function onClick() {\n      setMiniDialog('Instagram', __jsx(AddSocial, {\n        action: addSocial,\n        idx: 0\n      }));\n      showMiniDialog(true);\n    },\n    className: classes.mediaSocial\n  }), __jsx(\"img\", {\n    src: \"/static/facebook.svg\",\n    onClick: function onClick() {\n      setMiniDialog('Facebook', __jsx(AddSocial, {\n        action: addSocial,\n        idx: 0\n      }));\n      showMiniDialog(true);\n    },\n    className: classes.mediaSocial\n  }), __jsx(\"img\", {\n    src: \"/static/twitter.svg\",\n    onClick: function onClick() {\n      setMiniDialog('Twitter', __jsx(AddSocial, {\n        action: addSocial,\n        idx: 0\n      }));\n      showMiniDialog(true);\n    },\n    className: classes.mediaSocial\n  }), __jsx(\"img\", {\n    src: \"/static/telegram.svg\",\n    onClick: function onClick() {\n      setMiniDialog('Telegram', __jsx(AddSocial, {\n        action: addSocial,\n        idx: 0\n      }));\n      showMiniDialog(true);\n    },\n    className: classes.mediaSocial\n  }))), __jsx(\"div\", null, __jsx(TextField, {\n    label: \"\\u0418\\u043C\\u044F\",\n    value: name,\n    className: classes.input,\n    onChange: function onChange(event) {\n      setName(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    }\n  }), __jsx(FormControl, {\n    className: classes.input\n  }, __jsx(InputLabel, null, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0430\\u0434\\u0440\\u0435\\u0441\"), __jsx(Input, {\n    value: newAddress,\n    onChange: function onChange(event) {\n      setNewAddress(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      onClick: function onClick() {\n        addAddress();\n      },\n      \"aria-label\": \"toggle password visibility\"\n    }, __jsx(Add, null)))\n  })), address.map(function (element, idx) {\n    return __jsx(FormControl, {\n      key: idx,\n      className: classes.input\n    }, __jsx(InputLabel, null, \"\\u0410\\u0434\\u0440\\u0435\\u0441\"), __jsx(Input, {\n      placeholder: \"\\u0410\\u0434\\u0440\\u0435\\u0441\",\n      value: element,\n      onChange: function onChange(event) {\n        editAddress(event, idx);\n      },\n      inputProps: {\n        'aria-label': 'description'\n      },\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\"\n      }, __jsx(IconButton, {\n        onClick: function onClick() {\n          deleteAddress(idx);\n        },\n        \"aria-label\": \"toggle password visibility\"\n      }, __jsx(Remove, null)))\n    }));\n  }), __jsx(FormControl, {\n    className: classes.input\n  }, __jsx(InputLabel, null, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C email\"), __jsx(Input, {\n    value: newEmail,\n    onChange: function onChange(event) {\n      setNewEmail(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      onClick: function onClick() {\n        addEmail();\n      },\n      \"aria-label\": \"toggle password visibility\"\n    }, __jsx(Add, null)))\n  })), email.map(function (element, idx) {\n    return __jsx(FormControl, {\n      key: idx,\n      className: classes.input\n    }, __jsx(InputLabel, null, \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"), __jsx(Input, {\n      value: element,\n      onChange: function onChange(event) {\n        editEmail(event, idx);\n      },\n      inputProps: {\n        'aria-label': 'description'\n      },\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\"\n      }, __jsx(IconButton, {\n        onClick: function onClick() {\n          deleteEmail(idx);\n        },\n        \"aria-label\": \"toggle password visibility\"\n      }, __jsx(Remove, null)))\n    }));\n  }), __jsx(FormControl, {\n    className: classes.input\n  }, __jsx(InputLabel, null, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D. \\u0424\\u043E\\u0440\\u043C\\u0430\\u0442: +996555780861\"), __jsx(Input, {\n    value: newPhone,\n    onChange: function onChange(event) {\n      setNewPhone(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      onClick: function onClick() {\n        addPhone();\n      },\n      \"aria-label\": \"toggle password visibility\"\n    }, __jsx(Add, null)))\n  })), phone.map(function (element, idx) {\n    return __jsx(FormControl, {\n      key: idx,\n      className: classes.input\n    }, __jsx(InputLabel, null, \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"), __jsx(Input, {\n      value: element,\n      onChange: function onChange(event) {\n        editPhone(event, idx);\n      },\n      inputProps: {\n        'aria-label': 'description'\n      },\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\"\n      }, __jsx(IconButton, {\n        onClick: function onClick() {\n          deletePhone(idx);\n        },\n        \"aria-label\": \"toggle password visibility\"\n      }, __jsx(Remove, null)))\n    }));\n  }), __jsx(TextField, {\n    multiline: true,\n    label: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\",\n    value: info,\n    className: classes.input,\n    onChange: function onChange(event) {\n      setInfo(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    }\n  }), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var editElement, action;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              editElement = {\n                name: name,\n                address: address,\n                email: email,\n                phone: phone,\n                social: social,\n                info: info\n              };\n              if (image !== undefined) editElement.image = image;\n\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return setContact(editElement);\n\n                        case 2:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function action() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action\n              }));\n              showMiniDialog(true);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })),\n    size: \"small\",\n    color: \"primary\"\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\")))) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.column\n  }, __jsx(\"img\", {\n    className: classes.media,\n    src: preview,\n    alt: name\n  }), social[0].length > 0 || social[1].length > 0 || social[2].length > 0 || social[3].length > 0 ? __jsx(React.Fragment, null, \"\\u041D\\u0430\\u0448\\u0438 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B\", __jsx(\"div\", {\n    className: classes.row\n  }, social[0].length > 0 ? __jsx(\"a\", {\n    href: social[0]\n  }, __jsx(\"img\", {\n    src: \"/static/instagram.svg\",\n    className: classes.mediaSocial\n  })) : null, social[1].length > 0 ? __jsx(\"a\", {\n    href: social[1]\n  }, __jsx(\"img\", {\n    src: \"/static/facebook.svg\",\n    className: classes.mediaSocial\n  })) : null, social[2].length > 0 ? __jsx(\"a\", {\n    href: social[2]\n  }, __jsx(\"img\", {\n    src: \"/static/twitter.svg\",\n    className: classes.mediaSocial\n  })) : null, social[3].length > 0 ? __jsx(\"a\", {\n    href: social[3]\n  }, __jsx(\"img\", {\n    src: \"/static/telegram.svg\",\n    className: classes.mediaSocial\n  })) : null)) : null), __jsx(\"div\", null, __jsx(\"div\", {\n    className: classes.name\n  }, name), __jsx(\"br\", null), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"\\u0410\\u0434\\u0440\\u0435\\u0441:\\xA0\"), __jsx(\"div\", {\n    className: classes.column\n  }, address.map(function (element, idx) {\n    return __jsx(\"div\", {\n      key: idx,\n      className: classes.value\n    }, element);\n  }))), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D:\\xA0\"), __jsx(\"div\", {\n    className: classes.column\n  }, phone.map(function (element, idx) {\n    return __jsx(\"a\", {\n      href: \"tel:\".concat(element),\n      key: idx,\n      className: classes.value\n    }, element);\n  }))), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"E-mail:\\xA0\"), __jsx(\"div\", {\n    className: classes.column\n  }, email.map(function (element, idx) {\n    return __jsx(\"a\", {\n      href: \"mailto:\".concat(element),\n      key: idx,\n      className: classes.value\n    }, element);\n  }))), __jsx(\"br\", null), __jsx(\"div\", {\n    className: classes.info\n  }, info))))), __jsx(\"input\", {\n    accept: \"image/*\",\n    style: {\n      display: 'none'\n    },\n    id: \"contained-button-file\",\n    type: \"file\",\n    onChange: handleChangeImage\n  }));\n});\nContact.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee3() {\n  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.t0 = _objectSpread;\n          _context3.t1 = {};\n          _context3.next = 4;\n          return getContact();\n\n        case 4:\n          _context3.t2 = _context3.sent;\n          _context3.t3 = (0, _context3.t0)(_context3.t1, _context3.t2);\n          return _context3.abrupt(\"return\", {\n            data: _context3.t3\n          });\n\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _callee3);\n}));\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\pages\\contact.js"],"names":["Head","React","useState","App","connect","getContact","setContact","contactStyle","Card","CardContent","Input","Button","bindActionCreators","mini_dialogActions","Add","Remove","IconButton","InputAdornment","FormControl","InputLabel","TextField","Confirmation","AddSocial","urlMain","Contact","memo","props","classes","data","isMobileApp","app","contact","name","setName","address","setAddress","newAddress","setNewAddress","addAddress","editAddress","event","idx","target","value","deleteAddress","splice","email","setEmail","newEmail","setNewEmail","addEmail","editEmail","deleteEmail","phone","setPhone","newPhone","setNewPhone","addPhone","editPhone","deletePhone","social","setSocial","addSocial","info","setInfo","image","preview","setPreview","undefined","setImage","handleChangeImage","files","URL","createObjectURL","profile","user","setMiniDialog","showMiniDialog","filterSubCategory","sortSubCategory","page","column","row","role","media","mediaSocial","input","map","element","editElement","action","length","nameField","display","getInitialProps","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import Head from 'next/head';\r\nimport React, { useState } from 'react';\r\nimport App from '../layouts/App';\r\nimport { connect } from 'react-redux'\r\nimport { getContact, setContact } from '../src/gql/contact'\r\nimport contactStyle from '../src/styleMUI/contact'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Input from '@material-ui/core/Input';\r\nimport Button from '@material-ui/core/Button';\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../redux/actions/mini_dialog'\r\nimport Add from '@material-ui/icons/Add';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Confirmation from '../components/dialog/Confirmation'\r\nimport AddSocial from '../components/dialog/AddSocial'\r\nimport { urlMain } from '../redux/constants/other'\r\n\r\nconst Contact = React.memo((props) => {\r\n    const classes = contactStyle();\r\n    const { data } = props;\r\n    const { isMobileApp } = props.app;\r\n    let [name, setName] = useState(data.contact.name);\r\n    let [address, setAddress] = useState(data.contact.address);\r\n    let [newAddress, setNewAddress] = useState('');\r\n    let addAddress = ()=>{\r\n        address = [...address, newAddress]\r\n        setAddress(address)\r\n        setNewAddress('')\r\n    };\r\n    let editAddress = (event, idx)=>{\r\n        address[idx] = event.target.value\r\n        setAddress([...address])\r\n    };\r\n    let deleteAddress = (idx)=>{\r\n        address.splice(idx, 1);\r\n        setAddress([...address])\r\n    };\r\n    let [email, setEmail] = useState(data.contact.email);\r\n    let [newEmail, setNewEmail] = useState('');\r\n    let addEmail = ()=>{\r\n        email = [...email, newEmail]\r\n        setEmail(email)\r\n        setNewEmail('')\r\n    };\r\n    let editEmail = (event, idx)=>{\r\n        email[idx] = event.target.value\r\n        setEmail([...email])\r\n    };\r\n    let deleteEmail = (idx)=>{\r\n        email.splice(idx, 1);\r\n        setEmail([...email])\r\n    };\r\n    let [phone, setPhone] = useState(data.contact.phone);\r\n    let [newPhone, setNewPhone] = useState('');\r\n    let addPhone = ()=>{\r\n        phone = [...phone, newPhone]\r\n        setPhone(phone)\r\n        setNewPhone('')\r\n    };\r\n    let editPhone = (event, idx)=>{\r\n        phone[idx] = event.target.value\r\n        setPhone([...phone])\r\n    };\r\n    let deletePhone = (idx)=>{\r\n        phone.splice(idx, 1);\r\n        setPhone([...phone])\r\n    };\r\n    let [social, setSocial] = useState(data.contact.social);\r\n    let addSocial = (value, idx)=>{\r\n        social[idx] = value\r\n        setSocial([...social])\r\n    };\r\n    let [info, setInfo] = useState(data.contact.info);\r\n    let [preview, setPreview] = useState(data.contact.image===''?'/static/add.png':data.contact.image);\r\n    let [image, setImage] = useState(undefined);\r\n    let handleChangeImage = ((event) => {\r\n        setImage(event.target.files[0])\r\n        setPreview(URL.createObjectURL(event.target.files[0]))\r\n    })\r\n    const { profile } = props.user;\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    return (\r\n        <App filters={data.filterSubCategory} sorts={data.sortSubCategory} pageName='Контакты'>\r\n            <Head>\r\n                <title>{name}</title>\r\n                <meta name='description' content='Азык – это онлайн платформа для заказа товаров оптом, разработанная специально для малого и среднего бизнеса.  Она объединяет производителей и торговые точки напрямую, сокращая расходы и повышая продажи. Азык предоставляет своим пользователям мощные технологии для масштабирования и развития своего бизнеса.' />\r\n                <meta property='og:title' content='Азык - электронный склад связывающий производителя с торговой точкой' />\r\n                <meta property='og:description' content='Азык – это онлайн платформа для заказа товаров оптом, разработанная специально для малого и среднего бизнеса.  Она объединяет производителей и торговые точки напрямую, сокращая расходы и повышая продажи. Азык предоставляет своим пользователям мощные технологии для масштабирования и развития своего бизнеса.' />\r\n                <meta property='og:type' content='website' />\r\n                <meta property='og:image' content={`${urlMain}/static/512x512.png`} />\r\n                <meta property=\"og:url\" content={`${urlMain}/contact`} />\r\n                <link rel='canonical' href={`${urlMain}/contact`}/>\r\n            </Head>\r\n            <Card className={classes.page}>\r\n                    <CardContent className={isMobileApp?classes.column:classes.row}>\r\n                        {\r\n                            profile.role==='admin'?\r\n                                <>\r\n                                    <div className={classes.column}>\r\n                                        <label htmlFor='contained-button-file'>\r\n                                            <img\r\n                                                className={classes.media}\r\n                                                src={preview}\r\n                                                alt={'Добавить'}\r\n                                            />\r\n                                        </label>\r\n                                        Наши страницы\r\n                                        <div className={classes.row}>\r\n                                            <img src='/static/instagram.svg' onClick={()=>{\r\n                                                setMiniDialog('Instagram', <AddSocial action={addSocial} idx={0}/>)\r\n                                                showMiniDialog(true)\r\n                                            }} className={classes.mediaSocial}/>\r\n                                            <img src='/static/facebook.svg' onClick={()=>{\r\n                                                setMiniDialog('Facebook', <AddSocial action={addSocial} idx={0}/>)\r\n                                                showMiniDialog(true)\r\n                                            }} className={classes.mediaSocial}/>\r\n                                            <img src='/static/twitter.svg' onClick={()=>{\r\n                                                setMiniDialog('Twitter', <AddSocial action={addSocial} idx={0}/>)\r\n                                                showMiniDialog(true)\r\n                                            }} className={classes.mediaSocial}/>\r\n                                            <img src='/static/telegram.svg' onClick={()=>{\r\n                                                setMiniDialog('Telegram', <AddSocial action={addSocial} idx={0}/>)\r\n                                                showMiniDialog(true)\r\n                                            }} className={classes.mediaSocial}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <TextField\r\n                                                label='Имя'\r\n                                                value={name}\r\n                                                className={classes.input}\r\n                                                onChange={(event)=>{setName(event.target.value)}}\r\n                                                inputProps={{\r\n                                                    'aria-label': 'description',\r\n                                                }}\r\n                                            />\r\n                                        <FormControl className={classes.input}>\r\n                                            <InputLabel>Добавить адрес</InputLabel>\r\n                                            <Input\r\n                                                value={newAddress}\r\n                                                onChange={(event)=>{setNewAddress(event.target.value)}}\r\n                                                inputProps={{\r\n                                                    'aria-label': 'description',\r\n                                                }}\r\n                                                endAdornment={\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                            onClick={()=>{\r\n                                                                addAddress()\r\n                                                            }}\r\n                                                            aria-label='toggle password visibility'\r\n                                                        >\r\n                                                            <Add/>\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                }\r\n                                            />\r\n                                        </FormControl>\r\n                                        {address.map((element, idx)=>\r\n                                            <FormControl  key={idx} className={classes.input}>\r\n                                                <InputLabel>Адрес</InputLabel>\r\n                                                <Input\r\n                                                    placeholder='Адрес'\r\n                                                    value={element}\r\n                                                    onChange={(event)=>{editAddress(event, idx)}}\r\n                                                    inputProps={{\r\n                                                        'aria-label': 'description',\r\n                                                    }}\r\n                                                    endAdornment={\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            <IconButton\r\n                                                                onClick={()=>{\r\n                                                                    deleteAddress(idx)\r\n                                                                }}\r\n                                                                aria-label='toggle password visibility'\r\n                                                            >\r\n                                                                <Remove/>\r\n                                                            </IconButton>\r\n                                                        </InputAdornment>\r\n                                                    }\r\n                                                />\r\n                                            </FormControl>\r\n                                        )}\r\n                                        <FormControl className={classes.input}>\r\n                                            <InputLabel>Добавить email</InputLabel>\r\n                                            <Input\r\n                                                value={newEmail}\r\n                                                onChange={(event)=>{setNewEmail(event.target.value)}}\r\n                                                inputProps={{\r\n                                                    'aria-label': 'description',\r\n                                                }}\r\n                                                endAdornment={\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                            onClick={()=>{\r\n                                                                addEmail()\r\n                                                            }}\r\n                                                            aria-label='toggle password visibility'\r\n                                                        >\r\n                                                            <Add/>\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                }\r\n                                            />\r\n                                        </FormControl>\r\n                                        {email.map((element, idx)=>\r\n                                            <FormControl  key={idx} className={classes.input}>\r\n                                                <InputLabel>Организация</InputLabel>\r\n                                                <Input\r\n                                                    value={element}\r\n                                                    onChange={(event)=>{editEmail(event, idx)}}\r\n                                                    inputProps={{\r\n                                                        'aria-label': 'description',\r\n                                                    }}\r\n                                                    endAdornment={\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            <IconButton\r\n                                                                onClick={()=>{\r\n                                                                    deleteEmail(idx)\r\n                                                                }}\r\n                                                                aria-label='toggle password visibility'\r\n                                                            >\r\n                                                                <Remove/>\r\n                                                            </IconButton>\r\n                                                        </InputAdornment>\r\n                                                    }\r\n                                                />\r\n                                            </FormControl>\r\n                                        )}\r\n                                        <FormControl className={classes.input}>\r\n                                            <InputLabel>Добавить телефон. Формат: +996555780861</InputLabel>\r\n                                            <Input\r\n                                                value={newPhone}\r\n                                                onChange={(event)=>{setNewPhone(event.target.value)}}\r\n                                                inputProps={{\r\n                                                    'aria-label': 'description',\r\n                                                }}\r\n                                                endAdornment={\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                            onClick={()=>{\r\n                                                                addPhone()\r\n                                                            }}\r\n                                                            aria-label='toggle password visibility'\r\n                                                        >\r\n                                                            <Add/>\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                }\r\n                                            />\r\n                                        </FormControl>\r\n                                        {phone.map((element, idx)=>\r\n                                            <FormControl key={idx} className={classes.input}>\r\n                                                <InputLabel>Организация</InputLabel>\r\n                                                <Input\r\n                                                    value={element}\r\n                                                    onChange={(event)=>{editPhone(event, idx)}}\r\n                                                    inputProps={{\r\n                                                        'aria-label': 'description',\r\n                                                    }}\r\n                                                    endAdornment={\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            <IconButton\r\n                                                                onClick={()=>{\r\n                                                                    deletePhone(idx)\r\n                                                                }}\r\n                                                                aria-label='toggle password visibility'\r\n                                                            >\r\n                                                                <Remove/>\r\n                                                            </IconButton>\r\n                                                        </InputAdornment>\r\n                                                    }\r\n                                                />\r\n                                            </FormControl>\r\n                                        )}\r\n                                        <TextField\r\n                                            multiline={true}\r\n                                            label='Информация'\r\n                                            value={info}\r\n                                            className={classes.input}\r\n                                            onChange={(event)=>{setInfo(event.target.value)}}\r\n                                            inputProps={{\r\n                                                'aria-label': 'description',\r\n                                            }}\r\n                                        />\r\n                                        <div className={classes.row}>\r\n                                            <Button onClick={async()=>{\r\n                                                let editElement = {\r\n                                                    name: name,\r\n                                                    address: address,\r\n                                                    email: email,\r\n                                                    phone: phone,\r\n                                                    social: social,\r\n                                                    info: info\r\n                                                }\r\n                                                if(image!==undefined)editElement.image = image\r\n                                                const action = async() => {\r\n                                                    await setContact(editElement)\r\n                                                }\r\n                                                setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                showMiniDialog(true)\r\n                                            }} size='small' color='primary'>\r\n                                                Сохранить\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                    </>\r\n                                :\r\n                                <>\r\n                                <div className={classes.column}>\r\n                                    <img\r\n                                        className={classes.media}\r\n                                        src={preview}\r\n                                        alt={name}\r\n                                    />\r\n                                    {\r\n                                        social[0].length>0||social[1].length>0||social[2].length>0||social[3].length>0?\r\n                                            <>\r\n                                        Наши страницы\r\n                                        <div className={classes.row}>\r\n                                            {\r\n                                                social[0].length>0?\r\n                                                    <a href={social[0]}>\r\n                                                        <img src='/static/instagram.svg' className={classes.mediaSocial}/>\r\n                                                    </a>\r\n                                                    :\r\n                                                    null\r\n                                            }\r\n                                            {\r\n                                                social[1].length>0?\r\n                                                    <a href={social[1]}>\r\n                                                        <img src='/static/facebook.svg' className={classes.mediaSocial}/>\r\n                                                    </a>\r\n                                                    :\r\n                                                    null\r\n                                            }\r\n                                            {\r\n                                                social[2].length>0?\r\n                                                    <a href={social[2]}>\r\n                                                        <img src='/static/twitter.svg' className={classes.mediaSocial}/>\r\n                                                    </a>\r\n                                                    :\r\n                                                    null\r\n                                            }\r\n                                            {\r\n                                                social[3].length>0?\r\n                                                    <a href={social[3]}>\r\n                                                        <img src='/static/telegram.svg' className={classes.mediaSocial}/>\r\n                                                    </a>\r\n                                                    :\r\n                                                    null\r\n\r\n                                            }\r\n                                        </div>\r\n                                        </>\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                </div>\r\n                                            <div>\r\n                                                <div className={classes.name}>\r\n                                                    {name}\r\n                                                </div>\r\n                                                <br/>\r\n                                                <div className={classes.row}>\r\n                                                    <div className={classes.nameField}>\r\n                                                        Адрес:&nbsp;\r\n                                                    </div>\r\n                                                    <div className={classes.column}>\r\n                                                        {address.map((element, idx)=>\r\n                                                            <div key={idx} className={classes.value}>\r\n                                                                {element}\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className={classes.row}>\r\n                                                    <div className={classes.nameField}>\r\n                                                        Телефон:&nbsp;\r\n                                                    </div>\r\n                                                    <div className={classes.column}>\r\n                                                        {phone.map((element, idx)=>\r\n                                                            <a href={`tel:${element}`} key={idx} className={classes.value}>\r\n                                                                {element}\r\n                                                            </a>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className={classes.row}>\r\n                                                    <div className={classes.nameField}>\r\n                                                        E-mail:&nbsp;\r\n                                                    </div>\r\n                                                    <div className={classes.column}>\r\n                                                        {email.map((element, idx)=>\r\n                                                            <a href={`mailto:${element}`} key={idx} className={classes.value}>\r\n                                                                {element}\r\n                                                            </a>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <br/>\r\n                                                <div className={classes.info}>\r\n                                                    {info}\r\n                                                </div>\r\n                                            </div>\r\n                                            </>\r\n                        }\r\n                        </CardContent>\r\n                </Card>\r\n            <input\r\n                accept='image/*'\r\n                style={{ display: 'none' }}\r\n                id='contained-button-file'\r\n                type='file'\r\n                onChange={handleChangeImage}\r\n            />\r\n        </App>\r\n    )\r\n})\r\n\r\nContact.getInitialProps = async function() {\r\n    return {\r\n        data: {\r\n            ...await getContact()\r\n        }\r\n\r\n    };\r\n};\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);"]},"metadata":{},"sourceType":"module"}