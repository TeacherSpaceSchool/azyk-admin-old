{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\components\\\\category\\\\CardCategory.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport cardCategoryStyle from '../../src/styleMUI/category/cardCategory';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport CardActions from '@material-ui/core/CardActions';\nimport { onoffCategory, addCategory, setCategory, deleteCategory } from '../../src/gql/category';\nimport TextField from '@material-ui/core/TextField';\nimport Link from 'next/link';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport dynamic from 'next/dynamic';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nvar Confirmation = dynamic(function () {\n  return import('../dialog/Confirmation');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../dialog/Confirmation')];\n    },\n    modules: ['../dialog/Confirmation']\n  }\n});\nvar CardCategory = React.memo(function (props) {\n  var classes = cardCategoryStyle();\n  var element = props.element,\n      setList = props.setList;\n  var profile = props.user.profile;\n  var isMobileApp = props.app.isMobileApp; //addCard\n\n  var _useState = useState(element ? element.image : '/static/add.png'),\n      preview = _useState[0],\n      setPreview = _useState[1];\n\n  var _useState2 = useState(undefined),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var handleChangeImage = function handleChangeImage(event) {\n    setImage(event.target.files[0]);\n    setPreview(URL.createObjectURL(event.target.files[0]));\n  };\n\n  var _useState3 = useState(element ? element.name : ''),\n      name = _useState3[0],\n      setName = _useState3[1];\n\n  var handleName = function handleName(event) {\n    setName(event.target.value);\n  };\n\n  var _props$mini_dialogAct = props.mini_dialogActions,\n      setMiniDialog = _props$mini_dialogAct.setMiniDialog,\n      showMiniDialog = _props$mini_dialogAct.showMiniDialog;\n  var showSnackBar = props.snackbarActions.showSnackBar;\n  return __jsx(Card, {\n    className: isMobileApp ? classes.cardM : classes.cardD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, name !== 'Не задано' && setList !== 'all' && profile.role === 'admin' ? __jsx(React.Fragment, null, __jsx(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.line,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: element ? element._id : 'add',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(LazyLoadImage, {\n    effect: \"blur\",\n    className: classes.media,\n    src: preview,\n    alt: 'Изменить',\n    placeholderSrc: \"/static/add.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), __jsx(TextField, {\n    label: \"\\u0418\\u043C\\u044F\",\n    value: name,\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    onChange: handleName,\n    inputProps: {\n      'aria-label': 'description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })))), __jsx(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, element !== undefined ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var editElement, action;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              editElement = {\n                _id: element._id\n              };\n              if (name.length > 0 && name !== element.name) editElement.name = name;\n              if (image !== undefined) editElement.image = image;\n\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.t0 = setList;\n                          _context.next = 3;\n                          return setCategory(editElement);\n\n                        case 3:\n                          _context.t1 = _context.sent.categorys;\n                          (0, _context.t0)(_context.t1);\n\n                        case 5:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function action() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 80\n                },\n                __self: this\n              }));\n              showMiniDialog(true);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    })),\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref4 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee3() {\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.t0 = setList;\n                          _context3.next = 3;\n                          return onoffCategory([element._id]);\n\n                        case 3:\n                          _context3.t1 = _context3.sent.categorys;\n                          (0, _context3.t0)(_context3.t1);\n\n                        case 5:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function action() {\n                  return _ref4.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 89\n                },\n                __self: this\n              }));\n              showMiniDialog(true);\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    })),\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, element.status === 'active' ? 'Отключить' : 'Включить'), __jsx(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: function onClick() {\n      var action =\n      /*#__PURE__*/\n      function () {\n        var _ref5 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee5() {\n          return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.t0 = setList;\n                  _context5.next = 3;\n                  return deleteCategory([element._id]);\n\n                case 3:\n                  _context5.t1 = _context5.sent.categorys;\n                  (0, _context5.t0)(_context5.t1);\n\n                case 5:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function action() {\n          return _ref5.apply(this, arguments);\n        };\n      }();\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"), __jsx(Link, {\n    href: \"/subcategory/[id]\",\n    as: \"/subcategory/\".concat(element._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"))) : __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee7() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (image !== undefined && name.length > 0) {\n                setImage(undefined);\n                setPreview('/static/add.png');\n                setName('');\n\n                action =\n                /*#__PURE__*/\n                function () {\n                  var _ref7 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee6() {\n                    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                      while (1) {\n                        switch (_context6.prev = _context6.next) {\n                          case 0:\n                            _context6.t0 = setList;\n                            _context6.next = 3;\n                            return addCategory({\n                              image: image,\n                              name: name\n                            });\n\n                          case 3:\n                            _context6.t1 = _context6.sent.categorys;\n                            (0, _context6.t0)(_context6.t1);\n\n                          case 5:\n                          case \"end\":\n                            return _context6.stop();\n                        }\n                      }\n                    }, _callee6);\n                  }));\n\n                  return function action() {\n                    return _ref7.apply(this, arguments);\n                  };\n                }();\n\n                setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                  action: action,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 117\n                  },\n                  __self: this\n                }));\n                showMiniDialog(true);\n              } else showSnackBar('Заполните все поля');\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, this);\n    })),\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\")), __jsx(\"input\", {\n    accept: \"image/*\",\n    style: {\n      display: 'none'\n    },\n    id: element ? element._id : 'add',\n    type: \"file\",\n    onChange: handleChangeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })) : name !== 'Не задано' ? __jsx(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/subcategory/[id]\",\n    as: \"/subcategory/\".concat(element._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.line,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"contained-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(LazyLoadImage, {\n    effect: \"blur\",\n    className: classes.media,\n    src: element.image,\n    alt: element.name,\n    placeholderSrc: \"/static/add.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), __jsx(\"h3\", {\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, element.name)))) : name === 'Не задано' && profile.role === 'admin' ? __jsx(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/subcategory/[id]\",\n    as: \"/subcategory/\".concat(element._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.line,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"contained-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, __jsx(LazyLoadImage, {\n    effect: \"blur\",\n    className: classes.media,\n    src: element.image,\n    alt: element.name,\n    placeholderSrc: \"/static/add.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  })), __jsx(\"h3\", {\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, element.name)))) : null);\n});\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardCategory);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\category\\CardCategory.js"],"names":["React","useState","Card","CardActionArea","CardContent","cardCategoryStyle","connect","Button","CardActions","onoffCategory","addCategory","setCategory","deleteCategory","TextField","Link","bindActionCreators","mini_dialogActions","dynamic","snackbarActions","LazyLoadImage","Confirmation","CardCategory","memo","props","classes","element","setList","profile","user","isMobileApp","app","image","preview","setPreview","undefined","setImage","handleChangeImage","event","target","files","URL","createObjectURL","name","setName","handleName","value","setMiniDialog","showMiniDialog","showSnackBar","cardM","cardD","role","line","_id","media","inputM","inputD","editElement","length","action","categorys","status","display","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport cardCategoryStyle from '../../src/styleMUI/category/cardCategory'\r\nimport { connect } from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { onoffCategory, addCategory, setCategory, deleteCategory } from '../../src/gql/category'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from 'next/link';\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport dynamic from 'next/dynamic'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\nconst Confirmation = dynamic(\r\n    () => import('../dialog/Confirmation')\r\n)\r\n\r\nconst CardCategory = React.memo((props) => {\r\n    const classes = cardCategoryStyle();\r\n    const { element, setList } = props;\r\n    const { profile } = props.user;\r\n    const { isMobileApp } = props.app;\r\n    //addCard\r\n    let [preview, setPreview] = useState(element?element.image:'/static/add.png');\r\n    let [image, setImage] = useState(undefined);\r\n    let handleChangeImage = ((event) => {\r\n        setImage(event.target.files[0])\r\n        setPreview(URL.createObjectURL(event.target.files[0]))\r\n    })\r\n    let [name, setName] = useState(element?element.name:'');\r\n    let handleName =  (event) => {\r\n        setName(event.target.value)\r\n    };\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    const { showSnackBar } = props.snackbarActions;\r\n    return (\r\n        <Card className={isMobileApp?classes.cardM:classes.cardD}>\r\n            {\r\n                name!=='Не задано'&&setList!=='all'&&profile.role === 'admin' ?\r\n                    <>\r\n                    <CardActionArea>\r\n                        <CardContent>\r\n                            <div className={classes.line}>\r\n                                <label htmlFor={element?element._id:'add'}>\r\n                                    <LazyLoadImage\r\n                                        effect='blur'\r\n                                        className={classes.media}\r\n                                        src={preview}\r\n                                        alt={'Изменить'}\r\n                                        placeholderSrc='/static/add.png'\r\n                                    />\r\n                                </label>\r\n                               <TextField\r\n                                   label='Имя'\r\n                                   value={name}\r\n                                   className={isMobileApp?classes.inputM:classes.inputD}\r\n                                   onChange={handleName}\r\n                                   inputProps={{\r\n                                       'aria-label': 'description',\r\n                                   }}\r\n                               />\r\n                            </div>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                        {\r\n                            element!==undefined?\r\n                            <>\r\n                            <Button onClick={async()=>{\r\n                                    let editElement = {_id: element._id}\r\n                                    if(name.length>0&&name!==element.name)editElement.name = name\r\n                                    if(image!==undefined)editElement.image = image\r\n                                    const action = async() => {\r\n                                        setList((await setCategory(editElement)).categorys)\r\n                                    }\r\n                                    setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                    showMiniDialog(true)\r\n                                }} size='small' color='primary'>\r\n                                    Сохранить\r\n                                </Button>\r\n                                <Button onClick={async()=>{\r\n                                    const action = async() => {\r\n                                        setList((await onoffCategory([element._id])).categorys)\r\n                                    }\r\n                                    setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                    showMiniDialog(true)\r\n                                }} size='small' color='primary'>\r\n                                    {element.status==='active'?'Отключить':'Включить'}\r\n                                </Button>\r\n                                <Button size='small' color='primary' onClick={()=>{\r\n                                    const action = async() => {\r\n                                        setList((await deleteCategory([element._id])).categorys)\r\n                                    }\r\n                                    setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                    showMiniDialog(true)\r\n                                }}>\r\n                                    Удалить\r\n                                </Button>\r\n                        <Link href='/subcategory/[id]' as={`/subcategory/${element._id}`}>\r\n                            <Button size='small' color='primary'>\r\n                                Перейти\r\n                            </Button>\r\n                        </Link>\r\n                    </>:\r\n                    <Button onClick={async()=> {\r\n                        if (image !== undefined && name.length > 0) {\r\n                            setImage(undefined)\r\n                            setPreview('/static/add.png')\r\n                            setName('')\r\n                            const action = async() => {\r\n                                setList((await addCategory({image: image, name: name})).categorys)\r\n                            }\r\n                            setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                            showMiniDialog(true)\r\n                        } else\r\n                            showSnackBar('Заполните все поля')\r\n\r\n                    }\r\n                    } size='small' color='primary'>\r\n                        Добавить\r\n                    </Button>}\r\n                    </CardActions>\r\n                    <input\r\n                        accept='image/*'\r\n                        style={{ display: 'none' }}\r\n                        id={element?element._id:'add'}\r\n                        type='file'\r\n                        onChange={handleChangeImage}\r\n                    />\r\n                    </>\r\n\r\n                    :\r\n                    name!=='Не задано'?\r\n                        <CardActionArea>\r\n                            <Link href='/subcategory/[id]' as={`/subcategory/${element._id}`}>\r\n                                <div className={classes.line}>\r\n                                    <label htmlFor='contained-button-file'>\r\n                                        <LazyLoadImage\r\n                                            effect='blur'\r\n                                            className={classes.media}\r\n                                            src={element.image}\r\n                                            alt={element.name}\r\n                                            placeholderSrc='/static/add.png'\r\n                                        />\r\n                                    </label>\r\n                                    <h3 className={isMobileApp?classes.inputM:classes.inputD}>\r\n                                        {element.name}\r\n                                    </h3>\r\n                                </div>\r\n                            </Link>\r\n                        </CardActionArea>\r\n                        :\r\n                        name==='Не задано'&&profile.role === 'admin'?\r\n                            <CardActionArea>\r\n                                <Link href='/subcategory/[id]' as={`/subcategory/${element._id}`}>\r\n                                    <div className={classes.line}>\r\n                                        <label htmlFor='contained-button-file'>\r\n                                            <LazyLoadImage\r\n                                                effect='blur'\r\n                                                className={classes.media}\r\n                                                src={element.image}\r\n                                                alt={element.name}\r\n                                                placeholderSrc='/static/add.png'\r\n                                            />\r\n                                        </label>\r\n                                        <h3 className={isMobileApp?classes.inputM:classes.inputD}>\r\n                                            {element.name}\r\n                                        </h3>\r\n                                    </div>\r\n                                </Link>\r\n                            </CardActionArea>\r\n                            :null\r\n            }\r\n            </Card>\r\n    );\r\n})\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardCategory)"]},"metadata":{},"sourceType":"module"}