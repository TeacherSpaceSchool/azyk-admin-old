{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState, useEffect } from 'react';\nimport App from '../../layouts/App';\nimport { connect } from 'react-redux';\nimport { getOrganizations } from '../../src/gql/organization';\nimport { getOrders } from '../../src/gql/order';\nimport { getRoute, setRoute, deleteRoute, addRoute } from '../../src/gql/route';\nimport { getEcspeditors } from '../../src/gql/employment';\nimport routeStyle from '../../src/styleMUI/route/route';\nimport { useRouter } from 'next/router';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CardOrder from '../../components/order/CardOrder';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport dynamic from 'next/dynamic';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Router from 'next/router';\nimport moment from 'moment';\nvar Confirmation = dynamic(function () {\n  return import('../../components/dialog/Confirmation');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../../components/dialog/Confirmation')];\n    },\n    modules: ['../../components/dialog/Confirmation']\n  }\n});\nvar Route = React.memo(function (props) {\n  var _props$user = props.user,\n      profile = _props$user.profile,\n      authenticated = _props$user.authenticated;\n  if (!['организация', 'менеджер', 'admin', 'экспедитор'].includes(profile.role)) Router.push('/');\n  var classes = routeStyle();\n  var data = props.data;\n  var router = useRouter();\n  var isMobileApp = props.app.isMobileApp;\n\n  var _useState = useState(data.route !== null ? moment(new Date(data.route.dateStart)).format('YYYY-MM-DD') : null),\n      dateStart = _useState[0],\n      setDateStart = _useState[1];\n\n  var _useState2 = useState(data.route !== null ? data.route.dateEnd : null),\n      dateEnd = _useState2[0],\n      setDateEnd = _useState2[1];\n\n  var _useState3 = useState(data.route ? data.route.employment : {}),\n      employment = _useState3[0],\n      setEmployment = _useState3[1];\n\n  var handleEmployment = function handleEmployment(event) {\n    setEmployment({\n      _id: event.target.value,\n      name: event.target.name\n    });\n  };\n\n  var _useState4 = useState(router.query.id === 'new' ? {} : data.route.employment.organization),\n      organization = _useState4[0],\n      setOrganization = _useState4[1];\n\n  var handleOrganization = function handleOrganization(event) {\n    setOrganization({\n      _id: event.target.value,\n      name: event.target.name\n    });\n  };\n\n  var _useState5 = useState(data.route !== null ? data.route.invoices : []),\n      invoices = _useState5[0],\n      setInvoices = _useState5[1];\n\n  var _useState6 = useState([]),\n      cancelInvoices = _useState6[0],\n      setCancelInvoices = _useState6[1];\n\n  var _useState7 = useState([]),\n      allInvoices = _useState7[0],\n      setAllInvoices = _useState7[1];\n\n  var _useState8 = useState([]),\n      unselectedInvoices = _useState8[0],\n      setUnselectedInvoices = _useState8[1];\n\n  var _useState9 = useState('Все'),\n      selectType = _useState9[0],\n      setSelectType = _useState9[1];\n\n  var _useState10 = useState([]),\n      employments = _useState10[0],\n      setEmployments = _useState10[1];\n\n  var _props$mini_dialogAct = props.mini_dialogActions,\n      setMiniDialog = _props$mini_dialogAct.setMiniDialog,\n      showMiniDialog = _props$mini_dialogAct.showMiniDialog;\n  var showSnackBar = props.snackbarActions.showSnackBar;\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _organization;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (['организация', 'менеджер'].includes(profile.role) && router.query.id === 'new') {\n                _organization = data.organizations.filter(function (element) {\n                  return element._id === profile.organization;\n                });\n                setOrganization(_organization[0]);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, [profile]);\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.t0 = setUnselectedInvoices;\n              _context2.next = 3;\n              return getOrders({\n                search: '',\n                sort: '-updatedAt',\n                filter: 'обработка'\n              });\n\n            case 3:\n              _context2.t1 = _context2.sent.invoices;\n              (0, _context2.t0)(_context2.t1);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }, []);\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (router.query.id === 'new') setEmployment({});\n              _context3.t0 = setEmployments;\n              _context3.next = 4;\n              return getEcspeditors({\n                _id: organization._id\n              });\n\n            case 4:\n              _context3.t1 = _context3.sent.ecspeditors;\n              (0, _context3.t0)(_context3.t1);\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  }, [organization]);\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (selectType == 'Все') setAllInvoices([].concat(_toConsumableArray(invoices), _toConsumableArray(unselectedInvoices)));else if (selectType == 'Свободные') setAllInvoices(_toConsumableArray(unselectedInvoices));else if (selectType == 'Выбраные') setAllInvoices(_toConsumableArray(invoices));\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  }, [selectType, unselectedInvoices, invoices]);\n  var statusColor = {\n    'создан': 'orange',\n    'выполняется': 'blue',\n    'выполнен': 'green'\n  };\n\n  var getInvoices =\n  /*#__PURE__*/\n  function () {\n    var _ref5 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.t0 = setUnselectedInvoices;\n              _context5.next = 3;\n              return getOrders({\n                search: '',\n                sort: '-updatedAt',\n                filter: 'обработка'\n              });\n\n            case 3:\n              _context5.t1 = _context5.sent.invoices;\n              (0, _context5.t0)(_context5.t1);\n              setCancelInvoices([]);\n              _context5.t2 = setInvoices;\n              _context5.next = 9;\n              return getRoute({\n                _id: data.route._id\n              });\n\n            case 9:\n              _context5.t3 = _context5.sent.route.invoices;\n              (0, _context5.t2)(_context5.t3);\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function getInvoices() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(App, {\n    pageName: data.route ? router.query.id === 'new' ? 'Добавить' : data.route.number : 'Ничего не найдено'\n  }, __jsx(Head, null, __jsx(\"title\", null, data.route ? router.query.id === 'new' ? 'Добавить' : data.route.number : 'Ничего не найдено')), __jsx(Card, {\n    className: isMobileApp ? classes.pageM : classes.pageD\n  }, router.query.id === 'new' ? null : __jsx(\"div\", {\n    className: classes.status,\n    style: {\n      background: statusColor[data.route.status]\n    }\n  }, data.route.status), __jsx(CardContent, {\n    className: classes.column\n  }, data.route ? __jsx(React.Fragment, null, router.query.id === 'new' ? null : __jsx(\"div\", {\n    className: classes.number\n  }, data.route.number), (router.query.id === 'new' || data.route.status === 'создан') && profile.role === 'admin' ? __jsx(FormControl, {\n    className: isMobileApp ? classes.inputM : classes.inputDF\n  }, __jsx(InputLabel, null, \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"), __jsx(Select, {\n    value: organization._id,\n    onChange: handleOrganization\n  }, data.organizations.map(function (element) {\n    return __jsx(MenuItem, {\n      key: element._id,\n      value: element._id,\n      ola: element.name\n    }, element.name);\n  }))) : __jsx(TextField, {\n    label: \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\",\n    value: organization.name,\n    className: isMobileApp ? classes.inputM : classes.inputDF,\n    inputProps: {\n      'aria-label': 'description',\n      readOnly: true\n    }\n  }), __jsx(\"br\", null), router.query.id === 'new' || data.route.status === 'создан' ? __jsx(FormControl, {\n    className: isMobileApp ? classes.inputM : classes.inputDF\n  }, __jsx(InputLabel, null, \"\\u042D\\u043A\\u0441\\u043F\\u0435\\u0434\\u0438\\u0442\\u043E\\u0440\"), __jsx(Select, {\n    value: employment._id,\n    onChange: handleEmployment\n  }, employments.map(function (element) {\n    return __jsx(MenuItem, {\n      key: element._id,\n      value: element._id,\n      ola: element.name\n    }, element.name);\n  }))) : __jsx(TextField, {\n    label: \"\\u042D\\u043A\\u0441\\u043F\\u0435\\u0434\\u0438\\u0442\\u043E\\u0440\",\n    value: employment.name,\n    className: isMobileApp ? classes.inputM : classes.inputDF,\n    inputProps: {\n      'aria-label': 'description',\n      readOnly: true\n    }\n  }), __jsx(\"br\", null), __jsx(TextField, {\n    className: isMobileApp ? classes.inputM : classes.inputDF,\n    label: \"\\u0414\\u0430\\u0442\\u0430\",\n    type: \"date\",\n    InputLabelProps: {\n      shrink: true\n    },\n    value: dateStart,\n    inputProps: {\n      'aria-label': 'description',\n      readOnly: !(router.query.id === 'new' || data.route.status === 'создан')\n    },\n    onChange: function onChange(event) {\n      return setDateStart(event.target.value);\n    }\n  }), __jsx(\"br\", null), __jsx(\"div\", {\n    style: {\n      justifyContent: 'center'\n    },\n    className: classes.row\n  }, __jsx(\"div\", {\n    style: {\n      background: selectType === 'Все' ? '#ffb300' : '#ffffff'\n    },\n    onClick: function onClick() {\n      setSelectType('Все');\n    },\n    className: classes.selectType\n  }, \"\\u0412\\u0441\\u0435\"), __jsx(\"div\", {\n    style: {\n      background: selectType === 'Свободные' ? '#ffb300' : '#ffffff'\n    },\n    onClick: function onClick() {\n      setSelectType('Свободные');\n    },\n    className: classes.selectType\n  }, \"\\u0421\\u0432\\u043E\\u0431\\u043E\\u0434\\u043D\\u044B\\u0435\"), __jsx(\"div\", {\n    style: {\n      background: selectType === 'Выбраные' ? '#ffb300' : '#ffffff'\n    },\n    onClick: function onClick() {\n      setSelectType('Выбраные');\n    },\n    className: classes.selectType\n  }, \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u043D\\u044B\\u0435\")), __jsx(\"br\", null), __jsx(\"div\", {\n    className: classes.listInvoices,\n    style: {\n      zoom: isMobileApp ? 0.83 : 1\n    }\n  }, allInvoices ? allInvoices.map(function (element, idx) {\n    return __jsx(\"div\", {\n      key: idx,\n      className: classes.row\n    }, ['обработка', 'принят'].includes(element.orders[0].status) ? __jsx(Checkbox, {\n      checked: invoices.includes(element),\n      onChange: function onChange() {\n        if (!invoices.includes(element)) {\n          invoices.push(element);\n          unselectedInvoices.splice(unselectedInvoices.indexOf(element), 1);\n          cancelInvoices.splice(cancelInvoices.indexOf(element), 1);\n        } else {\n          invoices.splice(invoices.indexOf(element), 1);\n          unselectedInvoices.push(element);\n          cancelInvoices.push(element);\n        }\n\n        setInvoices(_toConsumableArray(invoices));\n      }\n    }) : null, __jsx(CardOrder, {\n      getInvoices: getInvoices,\n      route: data.route._id,\n      element: element\n    }));\n  }) : null), __jsx(\"div\", {\n    className: isMobileApp ? classes.bottomRouteM : classes.bottomRouteD\n  }, router.query.id === 'new' ? __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee7() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (dateStart && employment._id && organization._id) {\n                action =\n                /*#__PURE__*/\n                function () {\n                  var _ref7 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee6() {\n                    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                      while (1) {\n                        switch (_context6.prev = _context6.next) {\n                          case 0:\n                            if (!(employment._id !== undefined && dateStart)) {\n                              _context6.next = 5;\n                              break;\n                            }\n\n                            invoices = invoices.map(function (element) {\n                              return element._id;\n                            });\n                            _context6.next = 4;\n                            return addRoute({\n                              invoices: invoices,\n                              employment: employment._id,\n                              dateStart: new Date(dateStart)\n                            });\n\n                          case 4:\n                            Router.push('/routes');\n\n                          case 5:\n                          case \"end\":\n                            return _context6.stop();\n                        }\n                      }\n                    }, _callee6);\n                  }));\n\n                  return function action() {\n                    return _ref7.apply(this, arguments);\n                  };\n                }();\n\n                setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                  action: action\n                }));\n                showMiniDialog(true);\n              } else {\n                showSnackBar('Заполните все поля');\n              }\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    })),\n    size: \"small\",\n    color: \"primary\"\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\") : __jsx(React.Fragment, null, __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee9() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref9 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee8() {\n                  var editElement;\n                  return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                    while (1) {\n                      switch (_context8.prev = _context8.next) {\n                        case 0:\n                          editElement = {\n                            _id: data.route._id\n                          };\n                          if (employment._id !== data.route.employment._id && data.route.status === 'создан') editElement.employment = employment._id;\n                          if (dateStart && data.route.status === 'создан') editElement.dateStart = new Date(dateStart);\n                          editElement.invoices = invoices.map(function (element) {\n                            return element._id;\n                          });\n                          if (cancelInvoices.length > 0) editElement.cancelInvoices = cancelInvoices.map(function (element) {\n                            return element._id;\n                          });\n                          _context8.next = 7;\n                          return setRoute(editElement);\n\n                        case 7:\n                          getInvoices();\n\n                        case 8:\n                        case \"end\":\n                          return _context8.stop();\n                      }\n                    }\n                  }, _callee8);\n                }));\n\n                return function action() {\n                  return _ref9.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action\n              }));\n              showMiniDialog(true);\n\n            case 3:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    })),\n    size: \"small\",\n    color: \"primary\"\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), data.route.status === 'создан' ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee11() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref11 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee10() {\n                  return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n                    while (1) {\n                      switch (_context10.prev = _context10.next) {\n                        case 0:\n                          _context10.next = 2;\n                          return deleteRoute([data.route._id]);\n\n                        case 2:\n                          Router.push('/routes');\n\n                        case 3:\n                        case \"end\":\n                          return _context10.stop();\n                      }\n                    }\n                  }, _callee10);\n                }));\n\n                return function action() {\n                  return _ref11.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action\n              }));\n              showMiniDialog(true);\n\n            case 3:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    })),\n    size: \"small\",\n    color: \"primary\"\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")) : null))) : 'Ничего не найдено', __jsx(\"br\", null))));\n});\n\nRoute.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref12 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee12(ctx) {\n    return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.t0 = _objectSpread;\n            _context12.t1 = {};\n\n            if (!(ctx.query.id !== 'new')) {\n              _context12.next = 8;\n              break;\n            }\n\n            _context12.next = 5;\n            return getRoute({\n              _id: ctx.query.id\n            });\n\n          case 5:\n            _context12.t2 = _context12.sent;\n            _context12.next = 9;\n            break;\n\n          case 8:\n            _context12.t2 = {\n              route: {\n                invoices: [],\n                employment: {},\n                status: '',\n                dateStart: null,\n                dateEnd: null,\n                number: ''\n              }\n            };\n\n          case 9:\n            _context12.t3 = _context12.t2;\n            _context12.next = 12;\n            return getOrganizations({\n              search: '',\n              sort: 'name',\n              filter: ''\n            });\n\n          case 12:\n            _context12.t4 = _context12.sent;\n            _context12.t5 = (0, _context12.t0)(_context12.t1, _context12.t3, _context12.t4);\n            return _context12.abrupt(\"return\", {\n              data: _context12.t5\n            });\n\n          case 15:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n\n  return function (_x) {\n    return _ref12.apply(this, arguments);\n  };\n}();\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Route);","map":null,"metadata":{},"sourceType":"module"}