{"ast":null,"code":"var __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState, useEffect } from 'react';\nimport App from '../../layouts/App';\nimport { connect } from 'react-redux';\nimport { getSubCategorys } from '../../src/gql/subcategory';\nimport { getCategorys } from '../../src/gql/category';\nimport pageListStyle from '../../src/styleMUI/subcategory/subcategoryList';\nimport SubCardCategory from '../../components/subcategory/SubCardCategory';\nimport { useRouter } from 'next/router';\nconst Subcategory = React.memo(props => {\n  const classes = pageListStyle();\n  const {\n    data\n  } = props;\n  const router = useRouter();\n  let {\n    0: list,\n    1: setList\n  } = useState(data.subCategorys);\n  let {\n    0: categorys,\n    1: setCategorys\n  } = useState([]);\n  const {\n    search,\n    filter,\n    sort\n  } = props.app;\n  const {\n    profile\n  } = props.user;\n  useEffect(() => {\n    (async () => {\n      if (profile.role === 'admin') setCategorys((await getCategorys({\n        search: '',\n        sort: 'name',\n        filter: ''\n      })).categorys);\n    })();\n  }, [profile]);\n  useEffect(() => {\n    (async () => {\n      setList((await getSubCategorys({\n        category: router.query.id,\n        search: search,\n        sort: sort,\n        filter: filter\n      })).subCategorys);\n    })();\n  }, [filter, sort, search]);\n  return __jsx(App, {\n    filters: data.filterSubCategory,\n    sorts: data.sortSubCategory,\n    pageName: router.query.id === 'all' ? 'Все' : data.category !== null ? data.category.name : 'Ничего не найдено'\n  }, __jsx(Head, null, __jsx(\"title\", null, router.query.id === 'all' ? 'Все' : data.category !== null ? data.category.name : 'Ничего не найдено')), __jsx(\"div\", {\n    className: classes.page\n  }, profile.role === 'admin' && router.query.id !== 'all' && data.category !== null ? __jsx(SubCardCategory, {\n    categorys: categorys,\n    category: router.query.id,\n    setList: setList\n  }) : null, data.subCategorys.length > 0 || router.query.id === 'all' ? __jsx(React.Fragment, null, __jsx(SubCardCategory, {\n    element: {\n      _id: 'all',\n      name: 'Все товары'\n    }\n  }), __jsx(\"br\", null), __jsx(\"br\", null), list ? list.map(element => __jsx(SubCardCategory, {\n    category: router.query.id,\n    categorys: categorys,\n    key: element._id,\n    setList: setList,\n    element: element\n  })) : null) : null));\n});\n\nSubcategory.getInitialProps = async function (ctx) {\n  return {\n    data: await getSubCategorys({\n      category: ctx.query.id,\n      search: '',\n      sort: '-updatedAt',\n      filter: ''\n    })\n  };\n};\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(Subcategory);","map":null,"metadata":{},"sourceType":"module"}