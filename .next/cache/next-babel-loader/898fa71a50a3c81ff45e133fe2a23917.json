{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\pages\\\\route\\\\[id].js\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState, useEffect } from 'react';\nimport App from '../../layouts/App';\nimport { connect } from 'react-redux';\nimport { getOrganizations } from '../../src/gql/organization';\nimport { getOrders } from '../../src/gql/order';\nimport { getRoute, setRoute, deleteRoute, addRoute } from '../../src/gql/route';\nimport { getEcspeditors } from '../../src/gql/employment';\nimport routeStyle from '../../src/styleMUI/route/route';\nimport { useRouter } from 'next/router';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CardOrder from '../../components/order/CardOrder';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport dynamic from 'next/dynamic';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Router from 'next/router';\nimport { pdDDMMYYYY } from '../../src/lib';\nvar Confirmation = dynamic(function () {\n  return import('../../components/dialog/Confirmation');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../../components/dialog/Confirmation')];\n    },\n    modules: ['../../components/dialog/Confirmation']\n  }\n});\nvar Route = React.memo(function (props) {\n  var _props$user = props.user,\n      profile = _props$user.profile,\n      authenticated = _props$user.authenticated;\n  if (!['организация', 'менеджер', 'admin', 'экспедитор'].includes(profile.role)) Router.push('/');\n  var classes = routeStyle();\n  var data = props.data;\n  var router = useRouter();\n  var isMobileApp = props.app.isMobileApp;\n\n  var _useState = useState(data.route !== null ? pdDDMMYYYY(new Date(data.route.dateStart)) : null),\n      dateStart = _useState[0],\n      setDateStart = _useState[1];\n\n  var _useState2 = useState(data.route !== null ? data.route.dateEnd : null),\n      dateEnd = _useState2[0],\n      setDateEnd = _useState2[1];\n\n  var _useState3 = useState(data.route ? data.route.employment : {}),\n      employment = _useState3[0],\n      setEmployment = _useState3[1];\n\n  var handleEmployment = function handleEmployment(event) {\n    setEmployment({\n      _id: event.target.value,\n      name: event.target.name\n    });\n  };\n\n  var _useState4 = useState(router.query.id === 'new' ? {} : data.route.employment.organization),\n      organization = _useState4[0],\n      setOrganization = _useState4[1];\n\n  var handleOrganization = function handleOrganization(event) {\n    setOrganization({\n      _id: event.target.value,\n      name: event.target.name\n    });\n  };\n\n  var _useState5 = useState(data.route !== null ? data.route.invoices : []),\n      invoices = _useState5[0],\n      setInvoices = _useState5[1];\n\n  var _useState6 = useState([]),\n      cancelInvoices = _useState6[0],\n      setCancelInvoices = _useState6[1];\n\n  var _useState7 = useState([]),\n      allInvoices = _useState7[0],\n      setAllInvoices = _useState7[1];\n\n  var _useState8 = useState([]),\n      unselectedInvoices = _useState8[0],\n      setUnselectedInvoices = _useState8[1];\n\n  var _useState9 = useState('Все'),\n      selectType = _useState9[0],\n      setSelectType = _useState9[1];\n\n  var _useState10 = useState([]),\n      employments = _useState10[0],\n      setEmployments = _useState10[1];\n\n  var _props$mini_dialogAct = props.mini_dialogActions,\n      setMiniDialog = _props$mini_dialogAct.setMiniDialog,\n      showMiniDialog = _props$mini_dialogAct.showMiniDialog;\n  var showSnackBar = props.snackbarActions.showSnackBar;\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _organization;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (['организация', 'менеджер'].includes(profile.role) && router.query.id === 'new') {\n                _organization = data.organizations.filter(function (element) {\n                  return element._id === profile.organization;\n                });\n                setOrganization(_organization[0]);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, [profile]);\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.t0 = setUnselectedInvoices;\n              _context2.next = 3;\n              return getOrders({\n                search: '',\n                sort: '-updatedAt',\n                filter: 'обработка'\n              });\n\n            case 3:\n              _context2.t1 = _context2.sent.invoices;\n              (0, _context2.t0)(_context2.t1);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }, []);\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (router.query.id === 'new') setEmployment({});\n              _context3.t0 = setEmployments;\n              _context3.next = 4;\n              return getEcspeditors({\n                _id: organization._id\n              });\n\n            case 4:\n              _context3.t1 = _context3.sent.ecspeditors;\n              (0, _context3.t0)(_context3.t1);\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  }, [organization]);\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (selectType == 'Все') setAllInvoices([].concat(_toConsumableArray(invoices), _toConsumableArray(unselectedInvoices)));else if (selectType == 'Свободные') setAllInvoices(_toConsumableArray(unselectedInvoices));else if (selectType == 'Выбраные') setAllInvoices(_toConsumableArray(invoices));\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  }, [selectType, unselectedInvoices, invoices]);\n  var statusColor = {\n    'создан': 'orange',\n    'выполняется': 'blue',\n    'выполнен': 'green'\n  };\n\n  var getInvoices =\n  /*#__PURE__*/\n  function () {\n    var _ref5 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.t0 = setUnselectedInvoices;\n              _context5.next = 3;\n              return getOrders({\n                search: '',\n                sort: '-updatedAt',\n                filter: 'обработка'\n              });\n\n            case 3:\n              _context5.t1 = _context5.sent.invoices;\n              (0, _context5.t0)(_context5.t1);\n              setCancelInvoices([]);\n              _context5.t2 = setInvoices;\n              _context5.next = 9;\n              return getRoute({\n                _id: data.route._id\n              });\n\n            case 9:\n              _context5.t3 = _context5.sent.route.invoices;\n              (0, _context5.t2)(_context5.t3);\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function getInvoices() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(App, {\n    pageName: data.route ? router.query.id === 'new' ? 'Добавить' : data.route.number : 'Ничего не найдено',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, data.route ? router.query.id === 'new' ? 'Добавить' : data.route.number : 'Ничего не найдено')), __jsx(Card, {\n    className: isMobileApp ? classes.pageM : classes.pageD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, router.query.id === 'new' ? null : __jsx(\"div\", {\n    className: classes.status,\n    style: {\n      background: statusColor[data.route.status]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, data.route.status), __jsx(CardContent, {\n    className: classes.column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, data.route ? __jsx(React.Fragment, null, router.query.id === 'new' ? null : __jsx(\"div\", {\n    className: classes.number,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, data.route.number), (router.query.id === 'new' || data.route.status === 'создан') && profile.role === 'admin' ? __jsx(FormControl, {\n    className: isMobileApp ? classes.inputM : classes.inputDF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"), __jsx(Select, {\n    value: organization._id,\n    onChange: handleOrganization,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, data.organizations.map(function (element) {\n    return __jsx(MenuItem, {\n      key: element._id,\n      value: element._id,\n      ola: element.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, element.name);\n  }))) : __jsx(TextField, {\n    label: \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\",\n    value: organization.name,\n    className: isMobileApp ? classes.inputM : classes.inputDF,\n    inputProps: {\n      'aria-label': 'description',\n      readOnly: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), router.query.id === 'new' || data.route.status === 'создан' ? __jsx(FormControl, {\n    className: isMobileApp ? classes.inputM : classes.inputDF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"\\u042D\\u043A\\u0441\\u043F\\u0435\\u0434\\u0438\\u0442\\u043E\\u0440\"), __jsx(Select, {\n    value: employment._id,\n    onChange: handleEmployment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, employments.map(function (element) {\n    return __jsx(MenuItem, {\n      key: element._id,\n      value: element._id,\n      ola: element.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, element.name);\n  }))) : __jsx(TextField, {\n    label: \"\\u042D\\u043A\\u0441\\u043F\\u0435\\u0434\\u0438\\u0442\\u043E\\u0440\",\n    value: employment.name,\n    className: isMobileApp ? classes.inputM : classes.inputDF,\n    inputProps: {\n      'aria-label': 'description',\n      readOnly: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), __jsx(TextField, {\n    className: isMobileApp ? classes.inputM : classes.inputDF,\n    label: \"\\u0414\\u0430\\u0442\\u0430\",\n    type: \"date\",\n    InputLabelProps: {\n      shrink: true\n    },\n    value: dateStart,\n    inputProps: {\n      'aria-label': 'description',\n      readOnly: !(router.query.id === 'new' || data.route.status === 'создан')\n    },\n    onChange: function onChange(event) {\n      return setDateStart(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    style: {\n      justifyContent: 'center'\n    },\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      background: selectType === 'Все' ? '#ffb300' : '#ffffff'\n    },\n    onClick: function onClick() {\n      setSelectType('Все');\n    },\n    className: classes.selectType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"\\u0412\\u0441\\u0435\"), __jsx(\"div\", {\n    style: {\n      background: selectType === 'Свободные' ? '#ffb300' : '#ffffff'\n    },\n    onClick: function onClick() {\n      setSelectType('Свободные');\n    },\n    className: classes.selectType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"\\u0421\\u0432\\u043E\\u0431\\u043E\\u0434\\u043D\\u044B\\u0435\"), __jsx(\"div\", {\n    style: {\n      background: selectType === 'Выбраные' ? '#ffb300' : '#ffffff'\n    },\n    onClick: function onClick() {\n      setSelectType('Выбраные');\n    },\n    className: classes.selectType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u043D\\u044B\\u0435\")), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.listInvoices,\n    style: {\n      zoom: isMobileApp ? 0.83 : 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, allInvoices ? allInvoices.map(function (element, idx) {\n    return __jsx(\"div\", {\n      key: idx,\n      className: classes.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, ['обработка', 'принят'].includes(element.orders[0].status) ? __jsx(Checkbox, {\n      checked: invoices.includes(element),\n      onChange: function onChange() {\n        if (!invoices.includes(element)) {\n          invoices.push(element);\n          unselectedInvoices.splice(unselectedInvoices.indexOf(element), 1);\n          cancelInvoices.splice(cancelInvoices.indexOf(element), 1);\n        } else {\n          invoices.splice(invoices.indexOf(element), 1);\n          unselectedInvoices.push(element);\n          cancelInvoices.push(element);\n        }\n\n        setInvoices(_toConsumableArray(invoices));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }) : null, __jsx(CardOrder, {\n      getInvoices: getInvoices,\n      route: data.route._id,\n      element: element,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }));\n  }) : null), __jsx(\"div\", {\n    className: isMobileApp ? classes.bottomRouteM : classes.bottomRouteD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, router.query.id === 'new' ? __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee7() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (dateStart && employment._id && organization._id) {\n                action =\n                /*#__PURE__*/\n                function () {\n                  var _ref7 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee6() {\n                    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                      while (1) {\n                        switch (_context6.prev = _context6.next) {\n                          case 0:\n                            if (!(employment._id !== undefined && dateStart)) {\n                              _context6.next = 5;\n                              break;\n                            }\n\n                            invoices = invoices.map(function (element) {\n                              return element._id;\n                            });\n                            _context6.next = 4;\n                            return addRoute({\n                              invoices: invoices,\n                              employment: employment._id,\n                              dateStart: new Date(dateStart)\n                            });\n\n                          case 4:\n                            Router.push('/routes');\n\n                          case 5:\n                          case \"end\":\n                            return _context6.stop();\n                        }\n                      }\n                    }, _callee6);\n                  }));\n\n                  return function action() {\n                    return _ref7.apply(this, arguments);\n                  };\n                }();\n\n                setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                  action: action,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 218\n                  },\n                  __self: this\n                }));\n                showMiniDialog(true);\n              } else {\n                showSnackBar('Заполните все поля');\n              }\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, this);\n    })),\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\") : __jsx(React.Fragment, null, __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee9() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref9 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee8() {\n                  var editElement;\n                  return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                    while (1) {\n                      switch (_context8.prev = _context8.next) {\n                        case 0:\n                          editElement = {\n                            _id: data.route._id\n                          };\n                          if (employment._id !== data.route.employment._id && data.route.status === 'создан') editElement.employment = employment._id;\n                          if (dateStart && data.route.status === 'создан') editElement.dateStart = new Date(dateStart);\n                          editElement.invoices = invoices.map(function (element) {\n                            return element._id;\n                          });\n                          if (cancelInvoices.length > 0) editElement.cancelInvoices = cancelInvoices.map(function (element) {\n                            return element._id;\n                          });\n                          _context8.next = 7;\n                          return setRoute(editElement);\n\n                        case 7:\n                          getInvoices();\n\n                        case 8:\n                        case \"end\":\n                          return _context8.stop();\n                      }\n                    }\n                  }, _callee8);\n                }));\n\n                return function action() {\n                  return _ref9.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 238\n                },\n                __self: this\n              }));\n              showMiniDialog(true);\n\n            case 3:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, this);\n    })),\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), data.route.status === 'создан' ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee11() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref11 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee10() {\n                  return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n                    while (1) {\n                      switch (_context10.prev = _context10.next) {\n                        case 0:\n                          _context10.next = 2;\n                          return deleteRoute([data.route._id]);\n\n                        case 2:\n                          Router.push('/routes');\n\n                        case 3:\n                        case \"end\":\n                          return _context10.stop();\n                      }\n                    }\n                  }, _callee10);\n                }));\n\n                return function action() {\n                  return _ref11.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 250\n                },\n                __self: this\n              }));\n              showMiniDialog(true);\n\n            case 3:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, this);\n    })),\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")) : null))) : 'Ничего не найдено', __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }))));\n});\n\nRoute.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref12 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee12(ctx) {\n    return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.t0 = _objectSpread;\n            _context12.t1 = {};\n\n            if (!(ctx.query.id !== 'new')) {\n              _context12.next = 8;\n              break;\n            }\n\n            _context12.next = 5;\n            return getRoute({\n              _id: ctx.query.id\n            });\n\n          case 5:\n            _context12.t2 = _context12.sent;\n            _context12.next = 9;\n            break;\n\n          case 8:\n            _context12.t2 = {\n              route: {\n                invoices: [],\n                employment: {},\n                status: '',\n                dateStart: null,\n                dateEnd: null,\n                number: ''\n              }\n            };\n\n          case 9:\n            _context12.t3 = _context12.t2;\n            _context12.next = 12;\n            return getOrganizations({\n              search: '',\n              sort: 'name',\n              filter: ''\n            });\n\n          case 12:\n            _context12.t4 = _context12.sent;\n            _context12.t5 = (0, _context12.t0)(_context12.t1, _context12.t3, _context12.t4);\n            return _context12.abrupt(\"return\", {\n              data: _context12.t5\n            });\n\n          case 15:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n\n  return function (_x) {\n    return _ref12.apply(this, arguments);\n  };\n}();\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Route);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\pages\\route\\[id].js"],"names":["Head","React","useState","useEffect","App","connect","getOrganizations","getOrders","getRoute","setRoute","deleteRoute","addRoute","getEcspeditors","routeStyle","useRouter","Card","CardContent","Checkbox","CardOrder","InputLabel","MenuItem","FormControl","Select","dynamic","bindActionCreators","mini_dialogActions","snackbarActions","TextField","Button","Router","pdDDMMYYYY","Confirmation","Route","memo","props","user","profile","authenticated","includes","role","push","classes","data","router","isMobileApp","app","route","Date","dateStart","setDateStart","dateEnd","setDateEnd","employment","setEmployment","handleEmployment","event","_id","target","value","name","query","id","organization","setOrganization","handleOrganization","invoices","setInvoices","cancelInvoices","setCancelInvoices","allInvoices","setAllInvoices","unselectedInvoices","setUnselectedInvoices","selectType","setSelectType","employments","setEmployments","setMiniDialog","showMiniDialog","showSnackBar","organizations","filter","element","search","sort","ecspeditors","statusColor","getInvoices","number","pageM","pageD","status","background","column","inputM","inputDF","map","readOnly","shrink","justifyContent","row","listInvoices","zoom","idx","orders","splice","indexOf","bottomRouteM","bottomRouteD","action","undefined","editElement","length","getInitialProps","ctx","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import Head from 'next/head';\r\nimport React, { useState, useEffect } from 'react';\r\nimport App from '../../layouts/App';\r\nimport { connect } from 'react-redux'\r\nimport { getOrganizations } from '../../src/gql/organization'\r\nimport { getOrders } from '../../src/gql/order'\r\nimport { getRoute, setRoute, deleteRoute, addRoute } from '../../src/gql/route'\r\nimport { getEcspeditors } from '../../src/gql/employment'\r\nimport routeStyle from '../../src/styleMUI/route/route'\r\nimport { useRouter } from 'next/router'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CardOrder from '../../components/order/CardOrder';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport dynamic from 'next/dynamic'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Router from 'next/router'\r\nimport { pdDDMMYYYY } from '../../src/lib'\r\n\r\nconst Confirmation = dynamic(\r\n    () => import('../../components/dialog/Confirmation')\r\n)\r\n\r\nconst Route = React.memo((props) => {\r\n    const { profile, authenticated } = props.user;\r\n    if(!['организация', 'менеджер', 'admin', 'экспедитор'].includes(profile.role))\r\n        Router.push('/')\r\n    const classes = routeStyle();\r\n    const { data } = props;\r\n    const router = useRouter()\r\n    const { isMobileApp } = props.app;\r\n    let [dateStart, setDateStart] = useState(data.route!==null?pdDDMMYYYY(new Date(data.route.dateStart)):null);\r\n    let [dateEnd, setDateEnd] = useState(data.route!==null?data.route.dateEnd:null);\r\n    let [employment, setEmployment] = useState(data.route?data.route.employment:{});\r\n    let handleEmployment =  (event) => {\r\n        setEmployment({_id: event.target.value, name: event.target.name})\r\n    };\r\n    let [organization, setOrganization] = useState(router.query.id==='new'?{}:data.route.employment.organization);\r\n    let handleOrganization =  (event) => {\r\n        setOrganization({_id: event.target.value, name: event.target.name})\r\n    };\r\n    let [invoices, setInvoices] = useState(data.route!==null?data.route.invoices:[]);\r\n    let [cancelInvoices, setCancelInvoices] = useState([]);\r\n    let [allInvoices, setAllInvoices] = useState([]);\r\n    let [unselectedInvoices, setUnselectedInvoices] = useState([]);\r\n    let [selectType, setSelectType] = useState('Все');\r\n    let [employments, setEmployments] = useState([]);\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    const { showSnackBar } = props.snackbarActions;\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            if(['организация', 'менеджер'].includes(profile.role)&&router.query.id==='new'){\r\n                let organization = data.organizations.filter(element=>element._id===profile.organization)\r\n                setOrganization(organization[0])\r\n            }\r\n        })()\r\n    },[profile])\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            setUnselectedInvoices((await getOrders({search: '', sort: '-updatedAt', filter: 'обработка'})).invoices)\r\n        })()\r\n    },[])\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            if(router.query.id==='new')\r\n                setEmployment({})\r\n            setEmployments((await getEcspeditors({_id: organization._id})).ecspeditors)\r\n        })()\r\n    },[organization])\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            if(selectType=='Все')\r\n                setAllInvoices([...invoices, ...unselectedInvoices])\r\n            else if(selectType=='Свободные')\r\n                setAllInvoices([...unselectedInvoices])\r\n            else if(selectType=='Выбраные')\r\n                setAllInvoices([...invoices])\r\n        })()\r\n    },[selectType, unselectedInvoices, invoices])\r\n    const statusColor = {\r\n        'создан': 'orange',\r\n        'выполняется': 'blue',\r\n        'выполнен': 'green',\r\n    }\r\n    let getInvoices = async ()=>{\r\n        setUnselectedInvoices((await getOrders({search: '', sort: '-updatedAt', filter: 'обработка'})).invoices)\r\n        setCancelInvoices([])\r\n        setInvoices((await getRoute({_id: data.route._id})).route.invoices)\r\n    }\r\n    return (\r\n        <App pageName={data.route?router.query.id==='new'?'Добавить':data.route.number:'Ничего не найдено'}>\r\n            <Head>\r\n                <title>{data.route?router.query.id==='new'?'Добавить':data.route.number:'Ничего не найдено'}</title>\r\n            </Head>\r\n            <Card className={isMobileApp?classes.pageM:classes.pageD}>\r\n                {router.query.id==='new'?null:<div className={classes.status} style={{background: statusColor[data.route.status]}}>{data.route.status}</div>}\r\n                <CardContent className={classes.column}>\r\n                    {data.route?\r\n                       <>\r\n                       {router.query.id==='new'?null:<div className={classes.number}>{data.route.number}</div>}\r\n                       {(router.query.id==='new'||data.route.status==='создан')&&profile.role==='admin'?\r\n                           <FormControl className={isMobileApp?classes.inputM:classes.inputDF}>\r\n                                <InputLabel>Организация</InputLabel>\r\n                                <Select value={organization._id}onChange={handleOrganization}>\r\n                                    {data.organizations.map((element)=>\r\n                                        <MenuItem key={element._id} value={element._id} ola={element.name}>{element.name}</MenuItem>\r\n                                    )}\r\n                                </Select>\r\n                            </FormControl>\r\n                           :\r\n                           <TextField\r\n                               label='Организация'\r\n                               value={organization.name}\r\n                               className={isMobileApp?classes.inputM:classes.inputDF}\r\n                               inputProps={{\r\n                                   'aria-label': 'description',\r\n                                   readOnly: true,\r\n                               }}\r\n                           />\r\n                       }\r\n                        <br/>\r\n                       {\r\n                           router.query.id==='new'||data.route.status==='создан'?\r\n                               <FormControl className={isMobileApp?classes.inputM:classes.inputDF}>\r\n                                    <InputLabel>Экспедитор</InputLabel>\r\n                                    <Select value={employment._id} onChange={handleEmployment}>\r\n                                        {employments.map((element)=>\r\n                                            <MenuItem key={element._id} value={element._id} ola={element.name}>{element.name}</MenuItem>\r\n                                        )}\r\n                                    </Select>\r\n                                </FormControl>\r\n                               :\r\n                               <TextField\r\n                                   label='Экспедитор'\r\n                                   value={employment.name}\r\n                                   className={isMobileApp?classes.inputM:classes.inputDF}\r\n                                   inputProps={{\r\n                                       'aria-label': 'description',\r\n                                       readOnly: true,\r\n                                   }}\r\n                               />\r\n                       }\r\n                        <br/>\r\n                        <TextField\r\n                            className={isMobileApp?classes.inputM:classes.inputDF}\r\n                            label='Дата'\r\n                            type='date'\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            value={dateStart}\r\n                            inputProps={{\r\n                                'aria-label': 'description',\r\n                                readOnly: !(router.query.id==='new'||data.route.status==='создан'),\r\n                            }}\r\n                            onChange={ event => setDateStart(event.target.value) }\r\n                        />\r\n                       <br/>\r\n                       <div style={{ justifyContent: 'center' }} className={classes.row}>\r\n                           <div style={{background: selectType==='Все'?'#ffb300':'#ffffff'}} onClick={()=>{setSelectType('Все')}} className={classes.selectType}>\r\n                               Все\r\n                           </div>\r\n                           <div style={{background: selectType==='Свободные'?'#ffb300':'#ffffff'}} onClick={()=>{setSelectType('Свободные')}} className={classes.selectType}>\r\n                               Свободные\r\n                           </div>\r\n                           <div style={{background: selectType==='Выбраные'?'#ffb300':'#ffffff'}} onClick={()=>{setSelectType('Выбраные')}} className={classes.selectType}>\r\n                               Выбраные\r\n                           </div>\r\n                       </div>\r\n                       <br/>\r\n                       <div className={classes.listInvoices} style={{zoom: isMobileApp?0.83:1}}>\r\n                           {allInvoices?allInvoices.map((element, idx)=> {\r\n                               return (\r\n                                   <div key={idx} className={classes.row}>\r\n                                       {['обработка', 'принят'].includes(element.orders[0].status)?\r\n                                           <Checkbox checked={invoices.includes(element)} onChange={() => {\r\n                                               if (!invoices.includes(element)) {\r\n                                                   invoices.push(element)\r\n                                                   unselectedInvoices.splice(unselectedInvoices.indexOf(element), 1)\r\n                                                   cancelInvoices.splice(cancelInvoices.indexOf(element), 1)\r\n                                               } else {\r\n                                                   invoices.splice(invoices.indexOf(element), 1)\r\n                                                   unselectedInvoices.push(element)\r\n                                                   cancelInvoices.push(element)\r\n                                               }\r\n                                               setInvoices([...invoices])\r\n                                           }}\r\n                                           />:null}\r\n                                       <CardOrder getInvoices={getInvoices} route={data.route._id} element={element}/>\r\n                                   </div>\r\n                               )\r\n                           }):null}\r\n                       </div>\r\n                       <div className={isMobileApp?classes.bottomRouteM:classes.bottomRouteD}>\r\n                           {\r\n                               router.query.id==='new'?\r\n                                   <Button onClick={async()=>{\r\n                                       if (dateStart&&employment._id&&organization._id) {\r\n                                           const action = async() => {\r\n                                               if (employment._id!==undefined&&dateStart) {\r\n                                                   invoices = invoices.map(element=>element._id)\r\n                                                   await addRoute({\r\n                                                       invoices: invoices,\r\n                                                       employment: employment._id,\r\n                                                       dateStart: new Date(dateStart)\r\n                                                   })\r\n                                                   Router.push('/routes')\r\n                                               }\r\n                                           }\r\n                                           setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                           showMiniDialog(true)\r\n                                       } else {\r\n                                           showSnackBar('Заполните все поля')\r\n                                       }\r\n                                   }} size='small' color='primary'>\r\n                                       Добавить\r\n                                   </Button>\r\n                                   :\r\n                                   <>\r\n                                   <Button onClick={async()=>{\r\n                                       const action = async() => {\r\n                                           let editElement = {_id: data.route._id}\r\n                                           if(employment._id!==data.route.employment._id&&data.route.status==='создан')editElement.employment = employment._id;\r\n                                           if(dateStart&&data.route.status==='создан')editElement.dateStart = new Date(dateStart);\r\n                                           editElement.invoices = invoices.map(element=>element._id);\r\n                                           if(cancelInvoices.length>0)editElement.cancelInvoices = cancelInvoices.map(element=>element._id);\r\n                                           await setRoute(editElement)\r\n                                           getInvoices()\r\n                                       }\r\n                                       setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                       showMiniDialog(true)\r\n                                   }} size='small' color='primary'>\r\n                                       Сохранить\r\n                                   </Button>\r\n                                   {data.route.status==='создан'?\r\n                                       <>\r\n                                       <Button onClick={async()=>{\r\n                                           const action = async() => {\r\n                                                await deleteRoute([data.route._id])\r\n                                               Router.push('/routes')\r\n                                           }\r\n                                           setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                           showMiniDialog(true)\r\n                                       }} size='small' color='primary'>\r\n                                           Удалить\r\n                                       </Button>\r\n                                       </>\r\n                                       :\r\n                                       null\r\n                                   }\r\n                                   </>\r\n                           }\r\n                       </div>\r\n                    </>\r\n                    :'Ничего не найдено'}\r\n                    <br/>\r\n                </CardContent>\r\n            </Card>\r\n        </App>\r\n    )\r\n})\r\n\r\nRoute.getInitialProps = async function(ctx) {\r\n    return {\r\n        data: {\r\n            ...ctx.query.id!=='new'?await getRoute({_id: ctx.query.id}):{route: {invoices: [], employment: {}, status: '', dateStart: null, dateEnd: null, number: ''}},\r\n            ...await getOrganizations({search: '', sort: 'name', filter: ''}),\r\n        }\r\n    };\r\n};\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Route);"]},"metadata":{},"sourceType":"module"}