{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\components\\\\blog\\\\CardBlog.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport cardPageListStyle from '../../src/styleMUI/blog/cardBlog';\nimport { connect } from 'react-redux';\nimport { pdDDMMYYYY } from '../../src/lib';\nimport Button from '@material-ui/core/Button';\nimport CardActions from '@material-ui/core/CardActions';\nimport { deleteBlog, addBlog, setBlog } from '../../src/gql/blog';\nimport TextField from '@material-ui/core/TextField';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport Confirmation from '../dialog/Confirmation';\nvar CardBlog = React.memo(function (props) {\n  var classes = cardPageListStyle();\n  var element = props.element,\n      setList = props.setList;\n  var profile = props.user.profile;\n  var isMobileApp = props.app.isMobileApp; //addCard\n\n  var _useState = useState(element ? element.image : '/static/add.png'),\n      preview = _useState[0],\n      setPreview = _useState[1];\n\n  var _useState2 = useState(undefined),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var handleChangeImage = function handleChangeImage(event) {\n    setImage(event.target.files[0]);\n    setPreview(URL.createObjectURL(event.target.files[0]));\n  };\n\n  var _useState3 = useState(element ? element.title : ''),\n      title = _useState3[0],\n      setTitle = _useState3[1];\n\n  var handleTitle = function handleTitle(event) {\n    setTitle(event.target.value);\n  };\n\n  var _useState4 = useState(element ? element.text : ''),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var handleText = function handleText(event) {\n    setText(event.target.value);\n  };\n\n  var date = pdDDMMYYYY(element ? new Date(element.updatedAt) : new Date());\n  var _props$mini_dialogAct = props.mini_dialogActions,\n      setMiniDialog = _props$mini_dialogAct.setMiniDialog,\n      showMiniDialog = _props$mini_dialogAct.showMiniDialog;\n  var showSnackBar = props.snackbarActions.showSnackBar;\n\n  var _useState5 = useState(false),\n      all = _useState5[0],\n      setAll = _useState5[1];\n\n  return __jsx(Card, {\n    className: isMobileApp ? classes.cardM : classes.cardD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, profile.role === 'admin' ? __jsx(React.Fragment, null, __jsx(CardHeader, {\n    subheader: date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), __jsx(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: element ? element._id : 'add',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: isMobileApp ? classes.mediaM : classes.mediaD,\n    src: preview,\n    alt: 'Изменить',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), __jsx(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(TextField, {\n    label: \"\\u0418\\u043C\\u044F\",\n    value: title,\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    onChange: handleTitle,\n    inputProps: {\n      'aria-label': 'description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), __jsx(TextField, {\n    label: \"\\u0422\\u0435\\u043A\\u0441\\u0442\",\n    value: text,\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    onChange: handleText,\n    inputProps: {\n      'aria-label': 'description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }))), __jsx(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, element !== undefined ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var editElement, action;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              editElement = {\n                _id: element._id\n              };\n              if (title.length > 0 && title !== element.title) editElement.title = title;\n              if (text.length > 0 && text !== element.text) editElement.text = text;\n              if (image !== undefined) editElement.image = image;\n\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.t0 = setList;\n                          _context.next = 3;\n                          return setBlog(editElement);\n\n                        case 3:\n                          _context.t1 = _context.sent.blogs;\n                          (0, _context.t0)(_context.t1);\n\n                        case 5:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function action() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 93\n                },\n                __self: this\n              }));\n              showMiniDialog(true);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    })),\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref4 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee3() {\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.t0 = setList;\n                          _context3.next = 3;\n                          return deleteBlog([element._id]);\n\n                        case 3:\n                          _context3.t1 = _context3.sent.blogs;\n                          (0, _context3.t0)(_context3.t1);\n\n                        case 5:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function action() {\n                  return _ref4.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 102\n                },\n                __self: this\n              }));\n              showMiniDialog(true);\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    })),\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")) : __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (image !== undefined && text.length > 0 && title.length > 0) {\n                setImage(undefined);\n                setPreview('/static/add.png');\n                setTitle('');\n                setText('');\n\n                action =\n                /*#__PURE__*/\n                function () {\n                  var _ref6 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee5() {\n                    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            _context5.t0 = setList;\n                            _context5.next = 3;\n                            return addBlog({\n                              image: image,\n                              text: text,\n                              title: title\n                            });\n\n                          case 3:\n                            _context5.t1 = _context5.sent.blogs;\n                            (0, _context5.t0)(_context5.t1);\n\n                          case 5:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n\n                  return function action() {\n                    return _ref6.apply(this, arguments);\n                  };\n                }();\n\n                setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                  action: action,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 118\n                  },\n                  __self: this\n                }));\n                showMiniDialog(true);\n              } else {\n                showSnackBar('Заполните все поля');\n              }\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, this);\n    })),\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\")), __jsx(\"input\", {\n    accept: \"image/*\",\n    style: {\n      display: 'none'\n    },\n    id: element ? element._id : 'add',\n    type: \"file\",\n    onChange: handleChangeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })) : element !== undefined ? __jsx(React.Fragment, null, __jsx(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: isMobileApp ? classes.mediaM : classes.mediaD,\n    src: element.image,\n    alt: element.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.shapka,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, element.title), __jsx(\"div\", {\n    className: classes.date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, date)), all ? __jsx(\"div\", {\n    style: {\n      fontSize: '1rem',\n      margin: 20,\n      whiteSpace: 'pre-wrap'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, element.text) : null, __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee7() {\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              setAll(!all);\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    })),\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, all ? 'Свернуть' : 'Посмотреть полностью'))) : null);\n});\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardBlog);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\blog\\CardBlog.js"],"names":["React","useState","Card","CardActionArea","CardContent","CardHeader","cardPageListStyle","connect","pdDDMMYYYY","Button","CardActions","deleteBlog","addBlog","setBlog","TextField","bindActionCreators","mini_dialogActions","snackbarActions","Confirmation","CardBlog","memo","props","classes","element","setList","profile","user","isMobileApp","app","image","preview","setPreview","undefined","setImage","handleChangeImage","event","target","files","URL","createObjectURL","title","setTitle","handleTitle","value","text","setText","handleText","date","Date","updatedAt","setMiniDialog","showMiniDialog","showSnackBar","all","setAll","cardM","cardD","role","_id","mediaM","mediaD","inputM","inputD","editElement","length","action","blogs","display","shapka","fontSize","margin","whiteSpace","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport cardPageListStyle from '../../src/styleMUI/blog/cardBlog'\r\nimport { connect } from 'react-redux'\r\nimport { pdDDMMYYYY } from '../../src/lib'\r\nimport Button from '@material-ui/core/Button';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { deleteBlog, addBlog, setBlog } from '../../src/gql/blog'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport Confirmation from '../dialog/Confirmation'\r\n\r\nconst CardBlog = React.memo((props) => {\r\n    const classes = cardPageListStyle();\r\n    const { element, setList } = props;\r\n    const { profile } = props.user;\r\n    const { isMobileApp } = props.app;\r\n    //addCard\r\n    let [preview, setPreview] = useState(element?element.image:'/static/add.png');\r\n    let [image, setImage] = useState(undefined);\r\n    let handleChangeImage = ((event) => {\r\n        setImage(event.target.files[0])\r\n        setPreview(URL.createObjectURL(event.target.files[0]))\r\n    })\r\n    let [title, setTitle] = useState(element?element.title:'');\r\n    let handleTitle =  (event) => {\r\n        setTitle(event.target.value)\r\n    };\r\n    let [text, setText] = useState(element?element.text:'');\r\n    let handleText =  (event) => {\r\n        setText(event.target.value)\r\n    };\r\n    let date = pdDDMMYYYY(element?new Date(element.updatedAt):new Date())\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    const { showSnackBar } = props.snackbarActions;\r\n    let [all, setAll] = useState(false);\r\n    return (\r\n        <Card className={isMobileApp?classes.cardM:classes.cardD}>\r\n            {\r\n                profile.role === 'admin' ?\r\n                    <>\r\n                    <CardHeader\r\n                        subheader={date}\r\n                    />\r\n                    <CardActionArea>\r\n                        <label htmlFor={element?element._id:'add'}>\r\n                            <img\r\n                                className={isMobileApp?classes.mediaM:classes.mediaD}\r\n                                src={preview}\r\n                                alt={'Изменить'}\r\n                            />\r\n                        </label>\r\n                        <CardContent>\r\n                            <TextField\r\n                                label='Имя'\r\n                                value={title}\r\n                                className={isMobileApp?classes.inputM:classes.inputD}\r\n                                onChange={handleTitle}\r\n                                inputProps={{\r\n                                    'aria-label': 'description',\r\n                                }}\r\n                            />\r\n                            <br/>\r\n                            <br/>\r\n                            <TextField\r\n                                label='Текст'\r\n                                value={text}\r\n                                className={isMobileApp?classes.inputM:classes.inputD}\r\n                                onChange={handleText}\r\n                                inputProps={{\r\n                                    'aria-label': 'description',\r\n                                }}\r\n                            />\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                        {\r\n                            element!==undefined?\r\n                                <>\r\n                                <Button onClick={async()=>{\r\n                            let editElement = {_id: element._id}\r\n                            if(title.length>0&&title!==element.title)editElement.title = title\r\n                            if(text.length>0&&text!==element.text)editElement.text = text\r\n                            if(image!==undefined)editElement.image = image\r\n                            const action = async() => {\r\n                                setList((await setBlog(editElement)).blogs)\r\n                            }\r\n                            setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                            showMiniDialog(true)\r\n                        }} size='small' color='primary'>\r\n                            Сохранить\r\n                            </Button>\r\n                                <Button onClick={async()=>{\r\n                                const action = async() => {\r\n                                    setList((await deleteBlog([element._id])).blogs)\r\n                                }\r\n                                setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                showMiniDialog(true)\r\n                            }} size='small' color='primary'>\r\n                                Удалить\r\n                            </Button>\r\n                                </>\r\n                                :\r\n                                <Button onClick={async()=> {\r\n                                    if (image !== undefined && text.length > 0 && title.length > 0) {\r\n                                        setImage(undefined)\r\n                                        setPreview('/static/add.png')\r\n                                        setTitle('')\r\n                                        setText('')\r\n                                        const action = async() => {\r\n                                            setList((await addBlog({image: image, text: text, title: title})).blogs)\r\n                                        }\r\n                                        setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                        showMiniDialog(true)\r\n                                    } else {\r\n                                        showSnackBar('Заполните все поля')\r\n                                    }\r\n                                }\r\n                                } size='small' color='primary'>\r\n                                    Добавить\r\n                                </Button>\r\n                        }\r\n                    </CardActions>\r\n                    <input\r\n                        accept='image/*'\r\n                        style={{ display: 'none' }}\r\n                        id={element?element._id:'add'}\r\n                        type='file'\r\n                        onChange={handleChangeImage}\r\n                    />\r\n                    </>\r\n                    :\r\n                    element!==undefined?\r\n                        <>\r\n                        <CardActionArea>\r\n                            <img\r\n                                className={isMobileApp?classes.mediaM:classes.mediaD}\r\n                                src={element.image}\r\n                                alt={element.title}\r\n                            />\r\n                            <div className={classes.shapka}>\r\n                                <div className={classes.title}>{element.title}</div>\r\n                                <div className={classes.date}>{date}</div>\r\n                            </div>\r\n                            {all?\r\n                                <div style={{fontSize: '1rem', margin: 20, whiteSpace: 'pre-wrap'}}>\r\n                                    {element.text}\r\n                                </div>:null}\r\n                            <Button onClick={async()=> {\r\n                                setAll(!all)\r\n                            }} size='small' color='primary'>\r\n                                {all?'Свернуть':'Посмотреть полностью'}\r\n                            </Button>\r\n                        </CardActionArea>\r\n                        </>\r\n                        :null\r\n            }\r\n            </Card>\r\n    );\r\n})\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardBlog)"]},"metadata":{},"sourceType":"module"}