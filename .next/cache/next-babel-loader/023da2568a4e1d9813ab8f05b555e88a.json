{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\pages\\\\organization\\\\[id].js\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState } from 'react';\nimport App from '../../layouts/App';\nimport { connect } from 'react-redux';\nimport { getOrganization } from '../../src/gql/organization';\nimport organizationStyle from '../../src/styleMUI/organization/organization';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { useRouter } from 'next/router';\nimport Router from 'next/router';\nimport Input from '@material-ui/core/Input';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport { onoffOrganization, addOrganization, setOrganization, deleteOrganization } from '../../src/gql/organization';\nimport { getEmployment } from '../../src/gql/employment';\nimport Add from '@material-ui/icons/Done';\nimport Remove from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport Confirmation from '../../components/dialog/Confirmation';\nimport { urlMain } from '../../redux/constants/other';\nimport { checkInt } from '../../src/lib';\nconst Organization = React.memo(props => {\n  const classes = organizationStyle();\n  const {\n    data\n  } = props;\n  const {\n    isMobileApp\n  } = props.app;\n  const router = useRouter();\n  const {\n    showSnackBar\n  } = props.snackbarActions;\n  let {\n    0: statusO,\n    1: setStatusO\n  } = useState(data.organization !== null ? data.organization.status : '');\n  let {\n    0: name,\n    1: setName\n  } = useState(data.organization !== null ? data.organization.name : '');\n  let {\n    0: minimumOrder,\n    1: setMinimumOrder\n  } = useState(data.organization !== null ? data.organization.minimumOrder : 0);\n  let {\n    0: address,\n    1: setAddress\n  } = useState(data.organization !== null ? data.organization.address : []);\n  let {\n    0: newAddress,\n    1: setNewAddress\n  } = useState('');\n\n  let addAddress = () => {\n    address = [...address, newAddress];\n    setAddress(address);\n    setNewAddress('');\n  };\n\n  let editAddress = (event, idx) => {\n    address[idx] = event.target.value;\n    setAddress([...address]);\n  };\n\n  let deleteAddress = idx => {\n    address.splice(idx, 1);\n    setAddress([...address]);\n  };\n\n  let {\n    0: email,\n    1: setEmail\n  } = useState(data.organization !== null ? data.organization.email : []);\n  let {\n    0: newEmail,\n    1: setNewEmail\n  } = useState('');\n\n  let addEmail = () => {\n    email = [...email, newEmail];\n    setEmail(email);\n    setNewEmail('');\n  };\n\n  let editEmail = (event, idx) => {\n    email[idx] = event.target.value;\n    setEmail([...email]);\n  };\n\n  let deleteEmail = idx => {\n    email.splice(idx, 1);\n    setEmail([...email]);\n  };\n\n  let {\n    0: phone,\n    1: setPhone\n  } = useState(data.organization !== null ? data.organization.phone : []);\n  let {\n    0: newPhone,\n    1: setNewPhone\n  } = useState('');\n\n  let addPhone = () => {\n    phone = [...phone, newPhone];\n    setPhone(phone);\n    setNewPhone('');\n  };\n\n  let editPhone = (event, idx) => {\n    phone[idx] = event.target.value;\n    setPhone([...phone]);\n  };\n\n  let deletePhone = idx => {\n    phone.splice(idx, 1);\n    setPhone([...phone]);\n  };\n\n  let {\n    0: info,\n    1: setInfo\n  } = useState(data.organization !== null ? data.organization.info : '');\n  let {\n    0: preview,\n    1: setPreview\n  } = useState(data.organization !== null ? data.organization.image : '');\n  let {\n    0: image,\n    1: setImage\n  } = useState(undefined);\n\n  let handleChangeImage = event => {\n    if (event.target.files[0].size / 1024 / 1024 < 20) {\n      setImage(event.target.files[0]);\n      setPreview(URL.createObjectURL(event.target.files[0]));\n    } else {\n      showSnackBar('Файл слишком большой');\n    }\n  };\n\n  const {\n    profile\n  } = props.user;\n  const {\n    setMiniDialog,\n    showMiniDialog\n  } = props.mini_dialogActions;\n  return __jsx(App, {\n    filters: data.filterSubCategory,\n    sorts: data.sortSubCategory,\n    pageName: data.organization !== null ? router.query.id === 'new' ? 'Добавить' : data.organization.name : 'Ничего не найдено',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, data.organization !== null ? router.query.id === 'new' ? 'Добавить' : data.organization.name : 'Ничего не найдено'), __jsx(\"meta\", {\n    name: \"description\",\n    content: info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: data.organization !== null ? router.query.id === 'new' ? 'Добавить' : data.organization.name : 'Ничего не найдено',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: \"website\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: preview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `${urlMain}/organization/${router.query.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    rel: \"canonical\",\n    href: `${urlMain}/organization/${router.query.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), __jsx(Card, {\n    className: classes.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(CardActions, {\n    className: isMobileApp ? classes.column : classes.row,\n    style: isMobileApp ? {} : {\n      justifyContent: 'start',\n      alignItems: 'flex-start'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, data.organization !== null ? profile.role === 'admin' || profile.role === 'организация' && data.employment.organization._id === data.organization._id ? __jsx(React.Fragment, null, __jsx(\"label\", {\n    htmlFor: \"contained-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: classes.media1,\n    src: preview,\n    alt: 'Добавить',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, __jsx(TextField, {\n    label: \"\\u0418\\u043C\\u044F\",\n    value: name,\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    onChange: event => {\n      setName(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), __jsx(FormControl, {\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"\\u041C\\u0438\\u043D\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0437\\u0430\\u043A\\u0430\\u0437\"), __jsx(Input, {\n    value: minimumOrder,\n    onChange: event => {\n      setMinimumOrder(checkInt(event.target.value));\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), address.map((element, idx) => __jsx(FormControl, {\n    key: idx,\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"\\u0410\\u0434\\u0440\\u0435\\u0441\", idx + 1), __jsx(Input, {\n    placeholder: \"\\u0410\\u0434\\u0440\\u0435\\u0441\",\n    value: element,\n    onChange: event => {\n      editAddress(event, idx);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, __jsx(IconButton, {\n      onClick: () => {\n        deleteAddress(idx);\n      },\n      \"aria-label\": \"toggle password visibility\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, __jsx(Remove, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }))), __jsx(Button, {\n    onClick: async () => {\n      addAddress();\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0430\\u0434\\u0440\\u0435\\u0441\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), email.map((element, idx) => __jsx(FormControl, {\n    key: idx,\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Email\", idx + 1), __jsx(Input, {\n    value: element,\n    onChange: event => {\n      editEmail(event, idx);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, __jsx(IconButton, {\n      onClick: () => {\n        deleteEmail(idx);\n      },\n      \"aria-label\": \"toggle password visibility\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, __jsx(Remove, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }))), __jsx(Button, {\n    onClick: async () => {\n      addEmail();\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C email\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }), phone.map((element, idx) => __jsx(FormControl, {\n    key: idx,\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\", idx + 1), __jsx(Input, {\n    value: element,\n    onChange: event => {\n      editPhone(event, idx);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, __jsx(IconButton, {\n      onClick: () => {\n        deletePhone(idx);\n      },\n      \"aria-label\": \"toggle password visibility\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, __jsx(Remove, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }))), __jsx(Button, {\n    onClick: async () => {\n      addPhone();\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D. \\u0424\\u043E\\u0440\\u043C\\u0430\\u0442: +996555780861\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }), __jsx(TextField, {\n    multiline: true,\n    label: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\",\n    value: info,\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    onChange: event => {\n      setInfo(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, router.query.id === 'new' ? __jsx(Button, {\n    onClick: async () => {\n      if (image !== undefined && name.length > 0 && email.length > 0 && address.length > 0 && phone.length > 0 && info.length > 0) {\n        const action = async () => {\n          await addOrganization({\n            image: image,\n            name: name,\n            address: address,\n            email: email,\n            phone: phone,\n            info: info,\n            minimumOrder: minimumOrder\n          });\n          Router.push('/organizations');\n        };\n\n        setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n          action: action,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }));\n        showMiniDialog(true);\n      } else {\n        showSnackBar('Заполните все поля');\n      }\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\") : __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: async () => {\n      console.log(minimumOrder);\n      let editElement = {\n        _id: data.organization._id\n      };\n      if (image !== undefined) editElement.image = image;\n      if (name.length > 0 && name !== data.organization.name) editElement.name = name;\n      if (address.length > 0 && address !== data.organization.address) editElement.address = address;\n      if (email.length > 0 && email !== data.organization.email) editElement.email = email;\n      if (phone.length > 0 && phone !== data.organization.phone) editElement.phone = phone;\n      if (info.length > 0 && info !== data.organization.info) editElement.info = info;\n      if (minimumOrder !== data.organization.minimumOrder) editElement.minimumOrder = minimumOrder;\n\n      const action = async () => {\n        await setOrganization(editElement);\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), profile.role === 'admin' ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: async () => {\n      const action = async () => {\n        await onoffOrganization([data.organization._id]);\n        setStatusO(statusO === 'active' ? 'deactive' : 'active');\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, statusO === 'active' ? 'Отключить' : 'Включить'), __jsx(Button, {\n    onClick: async () => {\n      const action = async () => {\n        await deleteOrganization([data.organization._id]);\n        Router.push('/organizations');\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")) : null)))) : router.query.id === 'new' ? 'Ничего не найдено' : __jsx(React.Fragment, null, __jsx(\"img\", {\n    className: classes.media1,\n    src: preview,\n    alt: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    style: {\n      width: isMobileApp ? '100%' : 'calc(100% - 300px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  }, name), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    },\n    __self: this\n  }, \"\\u0410\\u0434\\u0440\\u0435\\u0441:\\xA0\"), __jsx(\"div\", {\n    className: classes.column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }, address.map((element, idx) => __jsx(\"div\", {\n    key: idx,\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, element)))), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }, \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D:\\xA0\"), __jsx(\"div\", {\n    className: classes.column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }, phone.map((element, idx) => __jsx(\"a\", {\n    href: `tel:${element}`,\n    key: idx,\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347\n    },\n    __self: this\n  }, element)))), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  }, \"E-mail:\\xA0\"), __jsx(\"div\", {\n    className: classes.column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357\n    },\n    __self: this\n  }, email.map((element, idx) => __jsx(\"a\", {\n    href: `mailto:${element}`,\n    key: idx,\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359\n    },\n    __self: this\n  }, element)))), minimumOrder > 0 ? __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }, \"\\u041C\\u0438\\u043D\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0437\\u0430\\u043A\\u0430\\u0437:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371\n    },\n    __self: this\n  }, minimumOrder, \"\\xA0\\u0441\\u043E\\u043C\")) : null, __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  }, info))) : 'Ничего не найдено')), __jsx(\"input\", {\n    accept: \"image/*\",\n    style: {\n      display: 'none'\n    },\n    id: \"contained-button-file\",\n    type: \"file\",\n    onChange: handleChangeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389\n    },\n    __self: this\n  }));\n});\n\nOrganization.getInitialProps = async function (ctx) {\n  return {\n    data: _objectSpread({}, ctx.store.getState().user.authenticated && ['организация', 'менеджер'].includes(ctx.store.getState().user.profile.role) ? await getEmployment({\n      _id: ctx.store.getState().user.profile._id\n    }) : {}, ctx.query.id !== 'new' ? await getOrganization({\n      _id: ctx.query.id\n    }) : {\n      organization: {\n        name: '',\n        image: '/static/add.png',\n        address: [],\n        email: [],\n        phone: [],\n        info: '',\n        minimumOrder: 0\n      }\n    })\n  };\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Organization);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\pages\\organization\\[id].js"],"names":["Head","React","useState","App","connect","getOrganization","organizationStyle","Card","CardActions","FormControl","InputLabel","useRouter","Router","Input","TextField","Button","bindActionCreators","mini_dialogActions","onoffOrganization","addOrganization","setOrganization","deleteOrganization","getEmployment","Add","Remove","IconButton","InputAdornment","snackbarActions","Confirmation","urlMain","checkInt","Organization","memo","props","classes","data","isMobileApp","app","router","showSnackBar","statusO","setStatusO","organization","status","name","setName","minimumOrder","setMinimumOrder","address","setAddress","newAddress","setNewAddress","addAddress","editAddress","event","idx","target","value","deleteAddress","splice","email","setEmail","newEmail","setNewEmail","addEmail","editEmail","deleteEmail","phone","setPhone","newPhone","setNewPhone","addPhone","editPhone","deletePhone","info","setInfo","preview","setPreview","image","setImage","undefined","handleChangeImage","files","size","URL","createObjectURL","profile","user","setMiniDialog","showMiniDialog","filterSubCategory","sortSubCategory","query","id","page","column","row","justifyContent","alignItems","role","employment","_id","media1","inputM","inputD","map","element","length","action","push","console","log","editElement","width","nameField","display","getInitialProps","ctx","store","getState","authenticated","includes","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import Head from 'next/head';\r\nimport React, { useState } from 'react';\r\nimport App from '../../layouts/App';\r\nimport { connect } from 'react-redux'\r\nimport { getOrganization } from '../../src/gql/organization'\r\nimport organizationStyle from '../../src/styleMUI/organization/organization'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { useRouter } from 'next/router'\r\nimport Router from 'next/router'\r\nimport Input from '@material-ui/core/Input';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport { onoffOrganization, addOrganization, setOrganization, deleteOrganization } from '../../src/gql/organization'\r\nimport { getEmployment } from '../../src/gql/employment'\r\nimport Add from '@material-ui/icons/Done';\r\nimport Remove from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport Confirmation from '../../components/dialog/Confirmation'\r\nimport { urlMain } from '../../redux/constants/other'\r\nimport { checkInt } from '../../src/lib'\r\n\r\n\r\nconst Organization = React.memo((props) => {\r\n    const classes = organizationStyle();\r\n    const { data } = props;\r\n    const { isMobileApp } = props.app;\r\n    const router = useRouter()\r\n    const { showSnackBar } = props.snackbarActions;\r\n    let [statusO, setStatusO] = useState(data.organization!==null?data.organization.status:'');\r\n    let [name, setName] = useState(data.organization!==null?data.organization.name:'');\r\n    let [minimumOrder, setMinimumOrder] = useState(data.organization!==null?data.organization.minimumOrder:0);\r\n    let [address, setAddress] = useState(data.organization!==null?data.organization.address:[]);\r\n    let [newAddress, setNewAddress] = useState('');\r\n    let addAddress = ()=>{\r\n        address = [...address, newAddress]\r\n        setAddress(address)\r\n        setNewAddress('')\r\n    };\r\n    let editAddress = (event, idx)=>{\r\n        address[idx] = event.target.value\r\n        setAddress([...address])\r\n    };\r\n    let deleteAddress = (idx)=>{\r\n        address.splice(idx, 1);\r\n        setAddress([...address])\r\n    };\r\n    let [email, setEmail] = useState(data.organization!==null?data.organization.email:[]);\r\n    let [newEmail, setNewEmail] = useState('');\r\n    let addEmail = ()=>{\r\n        email = [...email, newEmail]\r\n        setEmail(email)\r\n        setNewEmail('')\r\n    };\r\n    let editEmail = (event, idx)=>{\r\n        email[idx] = event.target.value\r\n        setEmail([...email])\r\n    };\r\n    let deleteEmail = (idx)=>{\r\n        email.splice(idx, 1);\r\n        setEmail([...email])\r\n    };\r\n    let [phone, setPhone] = useState(data.organization!==null?data.organization.phone:[]);\r\n    let [newPhone, setNewPhone] = useState('');\r\n    let addPhone = ()=>{\r\n        phone = [...phone, newPhone]\r\n        setPhone(phone)\r\n        setNewPhone('')\r\n    };\r\n    let editPhone = (event, idx)=>{\r\n        phone[idx] = event.target.value\r\n        setPhone([...phone])\r\n    };\r\n    let deletePhone = (idx)=>{\r\n        phone.splice(idx, 1);\r\n        setPhone([...phone])\r\n    };\r\n    let [info, setInfo] = useState(data.organization!==null?data.organization.info:'');\r\n    let [preview, setPreview] = useState(data.organization!==null?data.organization.image:'');\r\n    let [image, setImage] = useState(undefined);\r\n    let handleChangeImage = ((event) => {\r\n        if(event.target.files[0].size/1024/1024<20){\r\n            setImage(event.target.files[0])\r\n            setPreview(URL.createObjectURL(event.target.files[0]))\r\n        } else {\r\n            showSnackBar('Файл слишком большой')\r\n        }\r\n    })\r\n    const { profile } = props.user;\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    return (\r\n        <App filters={data.filterSubCategory} sorts={data.sortSubCategory} pageName={data.organization!==null?router.query.id==='new'?'Добавить':data.organization.name:'Ничего не найдено'}>\r\n            <Head>\r\n                <title>{data.organization!==null?router.query.id==='new'?'Добавить':data.organization.name:'Ничего не найдено'}</title>\r\n                <meta name='description' content={info} />\r\n                <meta property='og:title' content={data.organization!==null?router.query.id==='new'?'Добавить':data.organization.name:'Ничего не найдено'} />\r\n                <meta property='og:description' content={info} />\r\n                <meta property='og:type' content='website' />\r\n                <meta property='og:image' content={preview} />\r\n                <meta property=\"og:url\" content={`${urlMain}/organization/${router.query.id}`} />\r\n                <link rel='canonical' href={`${urlMain}/organization/${router.query.id}`}/>\r\n            </Head>\r\n            <Card className={classes.page}>\r\n                <CardActions className={isMobileApp?classes.column:classes.row} style={isMobileApp?{}:{justifyContent: 'start', alignItems: 'flex-start'}}>\r\n                    {\r\n                        data.organization!==null?\r\n                            profile.role==='admin'||(profile.role==='организация'&&data.employment.organization._id===data.organization._id)?\r\n                                <>\r\n                                <label htmlFor='contained-button-file'>\r\n                                    <img\r\n                                        className={classes.media1}\r\n                                        src={preview}\r\n                                        alt={'Добавить'}\r\n                                    />\r\n                                </label>\r\n                                <div>\r\n                                    <TextField\r\n                                        label='Имя'\r\n                                        value={name}\r\n                                        className={isMobileApp?classes.inputM:classes.inputD}\r\n                                        onChange={(event)=>{setName(event.target.value)}}\r\n                                        inputProps={{\r\n                                            'aria-label': 'description',\r\n                                        }}\r\n                                    />\r\n                                    <FormControl className={isMobileApp?classes.inputM:classes.inputD}>\r\n                                        <InputLabel>Минимальный заказ</InputLabel>\r\n                                        <Input\r\n                                            value={minimumOrder}\r\n                                            onChange={(event)=>{setMinimumOrder(checkInt(event.target.value))}}\r\n                                            inputProps={{\r\n                                                'aria-label': 'description',\r\n                                            }}\r\n                                        />\r\n                                    </FormControl>\r\n                                    {address.map((element, idx)=>\r\n                                        <FormControl  key={idx} className={isMobileApp?classes.inputM:classes.inputD}>\r\n                                            <InputLabel>Адрес{idx+1}</InputLabel>\r\n                                            <Input\r\n                                                placeholder='Адрес'\r\n                                                value={element}\r\n                                                onChange={(event)=>{editAddress(event, idx)}}\r\n                                                inputProps={{\r\n                                                    'aria-label': 'description',\r\n                                                }}\r\n                                                endAdornment={\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                            onClick={()=>{\r\n                                                                deleteAddress(idx)\r\n                                                            }}\r\n                                                            aria-label='toggle password visibility'\r\n                                                        >\r\n                                                            <Remove/>\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                }\r\n                                            />\r\n                                        </FormControl>\r\n                                    )}\r\n                                    <Button onClick={async()=>{\r\n                                        addAddress()\r\n                                    }} size='small' color='primary'>\r\n                                        Добавить адрес\r\n                                    </Button>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    {email.map((element, idx)=>\r\n                                        <FormControl  key={idx} className={isMobileApp?classes.inputM:classes.inputD}>\r\n                                            <InputLabel>Email{idx+1}</InputLabel>\r\n                                            <Input\r\n                                                value={element}\r\n                                                onChange={(event)=>{editEmail(event, idx)}}\r\n                                                inputProps={{\r\n                                                    'aria-label': 'description',\r\n                                                }}\r\n                                                endAdornment={\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                            onClick={()=>{\r\n                                                                deleteEmail(idx)\r\n                                                            }}\r\n                                                            aria-label='toggle password visibility'\r\n                                                        >\r\n                                                            <Remove/>\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                }\r\n                                            />\r\n                                        </FormControl>\r\n                                    )}\r\n                                    <Button onClick={async()=>{\r\n                                        addEmail()\r\n                                    }} size='small' color='primary'>\r\n                                        Добавить email\r\n                                    </Button>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    {phone.map((element, idx)=>\r\n                                        <FormControl  key={idx} className={isMobileApp?classes.inputM:classes.inputD}>\r\n                                            <InputLabel>Телефон{idx+1}</InputLabel>\r\n                                            <Input\r\n                                                value={element}\r\n                                                onChange={(event)=>{editPhone(event, idx)}}\r\n                                                inputProps={{\r\n                                                    'aria-label': 'description',\r\n                                                }}\r\n                                                endAdornment={\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                            onClick={()=>{\r\n                                                                deletePhone(idx)\r\n                                                            }}\r\n                                                            aria-label='toggle password visibility'\r\n                                                        >\r\n                                                            <Remove/>\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                }\r\n                                            />\r\n                                        </FormControl>\r\n                                    )}\r\n                                    <Button onClick={async()=>{\r\n                                        addPhone()\r\n                                    }} size='small' color='primary'>\r\n                                        Добавить телефон. Формат: +996555780861\r\n                                    </Button>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    <TextField\r\n                                        multiline={true}\r\n                                        label='Информация'\r\n                                        value={info}\r\n                                        className={isMobileApp?classes.inputM:classes.inputD}\r\n                                        onChange={(event)=>{setInfo(event.target.value)}}\r\n                                        inputProps={{\r\n                                            'aria-label': 'description',\r\n                                        }}\r\n                                    />\r\n                                    <div className={classes.row}>\r\n                                        {\r\n                                            router.query.id==='new'?\r\n                                                <Button onClick={async()=>{\r\n                                                    if (image!==undefined&&name.length>0&&email.length>0&&address.length>0&&phone.length>0&&info.length>0) {\r\n                                                        const action = async() => {\r\n                                                            await addOrganization({image: image, name: name, address: address, email: email, phone: phone, info: info, minimumOrder: minimumOrder})\r\n                                                            Router.push('/organizations')\r\n                                                        }\r\n                                                        setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                        showMiniDialog(true)\r\n                                                    } else {\r\n                                                        showSnackBar('Заполните все поля')\r\n                                                    }\r\n                                                }} size='small' color='primary'>\r\n                                                    Добавить\r\n                                                </Button>\r\n                                                :\r\n                                                <>\r\n                                                <Button onClick={async()=>{\r\n                                                    console.log(minimumOrder)\r\n                                                    let editElement = {_id: data.organization._id}\r\n                                                    if(image!==undefined)editElement.image = image\r\n                                                    if(name.length>0&&name!==data.organization.name)editElement.name = name\r\n                                                    if(address.length>0&&address!==data.organization.address)editElement.address = address\r\n                                                    if(email.length>0&&email!==data.organization.email)editElement.email = email\r\n                                                    if(phone.length>0&&phone!==data.organization.phone)editElement.phone = phone\r\n                                                    if(info.length>0&&info!==data.organization.info)editElement.info = info\r\n                                                    if(minimumOrder!==data.organization.minimumOrder)editElement.minimumOrder = minimumOrder\r\n                                                    const action = async() => {\r\n                                                        await setOrganization(editElement)\r\n                                                    }\r\n                                                    setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                    showMiniDialog(true)\r\n                                                }} size='small' color='primary'>\r\n                                                    Сохранить\r\n                                                </Button>\r\n                                                {profile.role==='admin'?\r\n                                                    <>\r\n                                                    <Button onClick={async()=>{\r\n                                                        const action = async() => {\r\n                                                            await onoffOrganization([data.organization._id])\r\n                                                            setStatusO(statusO==='active'?'deactive':'active')\r\n                                                        }\r\n                                                        setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                        showMiniDialog(true)\r\n                                                    }} size='small' color='primary'>\r\n                                                        {statusO==='active'?'Отключить':'Включить'}\r\n                                                    </Button>\r\n                                                    <Button onClick={async()=>{\r\n                                                        const action = async() => {\r\n                                                            await deleteOrganization([data.organization._id])\r\n                                                            Router.push('/organizations')\r\n                                                        }\r\n                                                        setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                        showMiniDialog(true)\r\n                                                    }} size='small' color='primary'>\r\n                                                        Удалить\r\n                                                    </Button>\r\n                                                    </>\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                                </>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                :\r\n                                router.query.id==='new'?\r\n                                    'Ничего не найдено'\r\n                                    :\r\n                                    <>\r\n                                    <img\r\n                                        className={classes.media1}\r\n                                        src={preview}\r\n                                        alt={name}\r\n                                    />\r\n                                    <div style={{width: isMobileApp?'100%':'calc(100% - 300px)'}}>\r\n                                        <div className={classes.name}>\r\n                                            {name}\r\n                                        </div>\r\n                                        <br/>\r\n                                        <div className={classes.row}>\r\n                                            <div className={classes.nameField}>\r\n                                                Адрес:&nbsp;\r\n                                            </div>\r\n                                            <div className={classes.column}>\r\n                                                {address.map((element, idx)=>\r\n                                                    <div key={idx} className={classes.value}>\r\n                                                        {element}\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className={classes.row}>\r\n                                            <div className={classes.nameField}>\r\n                                                Телефон:&nbsp;\r\n                                            </div>\r\n                                            <div className={classes.column}>\r\n                                                {phone.map((element, idx)=>\r\n                                                    <a href={`tel:${element}`} key={idx} className={classes.value}>\r\n                                                        {element}\r\n                                                    </a>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className={classes.row}>\r\n                                            <div className={classes.nameField}>\r\n                                                E-mail:&nbsp;\r\n                                            </div>\r\n                                            <div className={classes.column}>\r\n                                                {email.map((element, idx)=>\r\n                                                    <a href={`mailto:${element}`} key={idx} className={classes.value}>\r\n                                                        {element}\r\n                                                    </a>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                        {\r\n                                            minimumOrder>0?\r\n                                                <div className={classes.row}>\r\n                                                    <div className={classes.nameField}>\r\n                                                        Минимальный заказ:&nbsp;\r\n                                                    </div>\r\n                                                    <div className={classes.value}>\r\n                                                        {minimumOrder}&nbsp;сом\r\n                                                    </div>\r\n                                                </div>\r\n                                                :\r\n                                                null\r\n                                        }\r\n                                        <br/>\r\n                                        <div className={classes.info}>\r\n                                            {info}\r\n                                        </div>\r\n                                    </div>\r\n                                    </>\r\n                            :\r\n                            'Ничего не найдено'\r\n                    }\r\n                </CardActions>\r\n            </Card>\r\n            <input\r\n                accept='image/*'\r\n                style={{ display: 'none' }}\r\n                id='contained-button-file'\r\n                type='file'\r\n                onChange={handleChangeImage}\r\n            />\r\n        </App>\r\n    )\r\n})\r\n\r\nOrganization.getInitialProps = async function(ctx) {\r\n    return {\r\n        data: {\r\n            ...ctx.store.getState().user.authenticated&&['организация', 'менеджер'].includes(ctx.store.getState().user.profile.role)?await getEmployment({_id: ctx.store.getState().user.profile._id}):{},\r\n            ...ctx.query.id!=='new'?await getOrganization({_id: ctx.query.id}):{organization:{name: '',image: '/static/add.png',address: [],email: [],phone: [],info: '',minimumOrder: 0}}\r\n        }\r\n\r\n    };\r\n};\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Organization);"]},"metadata":{},"sourceType":"module"}