{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\components\\\\client\\\\CardClient.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport cardOrganizationStyle from '../../src/styleMUI/client/cardClient';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport Button from '@material-ui/core/Button';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport { onoffClient } from '../../src/gql/client';\nimport CardActions from '@material-ui/core/CardActions';\nimport Confirmation from '../../components/dialog/Confirmation';\nconst CardOrganization = React.memo(props => {\n  const classes = cardOrganizationStyle();\n  const {\n    element\n  } = props;\n  const {\n    isMobileApp\n  } = props.app;\n  const {\n    profile\n  } = props.user;\n  const {\n    setMiniDialog,\n    showMiniDialog\n  } = props.mini_dialogActions;\n  let {\n    0: status,\n    1: setStatus\n  } = useState(element.user ? element.user.status : '');\n  return __jsx(Card, {\n    className: isMobileApp ? classes.cardM : classes.cardD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/client/[id]\",\n    as: `/client/${element._id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(CardContent, {\n    className: classes.line,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"contained-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: classes.media,\n    src: element.image ? element.image : '/static/add.png',\n    alt: element.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, element.organization ? __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, element.organization.name)) : null, __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"\\u0418\\u043C\\u044F:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, element.name)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D:\\xA0\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, element.phone.map((phone, idx) => __jsx(\"div\", {\n    key: idx,\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, phone)))), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"\\u0410\\u0434\\u0440\\u0435\\u0441:\\xA0\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, element.address.map((addres, idx) => __jsx(\"div\", {\n    key: idx,\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, addres[0])))))))), __jsx(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, element.user && profile.role === 'admin' ? __jsx(Button, {\n    onClick: async () => {\n      const action = async () => {\n        await onoffClient([element._id]);\n        setStatus(status === 'active' ? 'deactive' : 'active');\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, status === 'active' ? 'Отключить' : 'Включить') : null));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardOrganization);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\client\\CardClient.js"],"names":["React","useState","Card","CardActionArea","CardContent","cardOrganizationStyle","connect","Link","Button","bindActionCreators","mini_dialogActions","onoffClient","CardActions","Confirmation","CardOrganization","memo","props","classes","element","isMobileApp","app","profile","user","setMiniDialog","showMiniDialog","status","setStatus","cardM","cardD","_id","line","media","image","name","organization","row","nameField","value","phone","map","idx","address","addres","role","action","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport cardOrganizationStyle from '../../src/styleMUI/client/cardClient'\r\nimport { connect } from 'react-redux'\r\nimport Link from 'next/link';\r\nimport Button from '@material-ui/core/Button';\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport { onoffClient } from '../../src/gql/client'\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Confirmation from '../../components/dialog/Confirmation'\r\n\r\n\r\nconst CardOrganization = React.memo((props) => {\r\n    const classes = cardOrganizationStyle();\r\n    const { element } = props;\r\n    const { isMobileApp } = props.app;\r\n    const { profile } = props.user;\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    let [status, setStatus] = useState(element.user?element.user.status:'');\r\n    return (\r\n        <Card className={isMobileApp?classes.cardM:classes.cardD}>\r\n            <CardActionArea>\r\n                <Link href='/client/[id]' as={`/client/${element._id}`}>\r\n                    <CardContent className={classes.line}>\r\n                        <label htmlFor='contained-button-file'>\r\n                            <img\r\n                                className={classes.media}\r\n                                src={element.image?element.image:'/static/add.png'}\r\n                                alt={element.name}\r\n                            />\r\n                        </label>\r\n                        <div>\r\n                            {\r\n                                element.organization?\r\n                                    <div className={classes.row}>\r\n                                        <div className={classes.nameField}>\r\n                                            Организация:&nbsp;\r\n                                        </div>\r\n                                        <div className={classes.value}>\r\n                                            {element.organization.name}\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    null\r\n                            }\r\n                            <div className={classes.row}>\r\n                                <div className={classes.nameField}>\r\n                                    Имя:&nbsp;\r\n                                </div>\r\n                                <div className={classes.value}>\r\n                                    {element.name}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.row}>\r\n                                <div className={classes.nameField}>\r\n                                    Телефон:&nbsp;\r\n                                </div>\r\n                                <div>\r\n                                    {element.phone.map((phone, idx)=>\r\n                                            <div key={idx} className={classes.value}>\r\n                                                {phone}\r\n                                            </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.row}>\r\n                                <div className={classes.nameField}>\r\n                                    Адрес:&nbsp;\r\n                                </div>\r\n                                <div>\r\n                                    {element.address.map((addres, idx)=>\r\n                                        <div key={idx} className={classes.value}>\r\n                                            {addres[0]}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </CardContent>\r\n                </Link>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                {\r\n                    element.user&&profile.role === 'admin' ?\r\n                        <Button onClick={async()=>{\r\n                            const action = async() => {\r\n                                await onoffClient([element._id])\r\n                                setStatus(status==='active'?'deactive':'active')\r\n                            }\r\n                            setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                            showMiniDialog(true)\r\n                        }} size='small' color='primary'>\r\n                            {status==='active'?'Отключить':'Включить'}\r\n                        </Button>\r\n                        :\r\n                        null\r\n                }\r\n            </CardActions>\r\n            </Card>\r\n    );\r\n})\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardOrganization)"]},"metadata":{},"sourceType":"module"}