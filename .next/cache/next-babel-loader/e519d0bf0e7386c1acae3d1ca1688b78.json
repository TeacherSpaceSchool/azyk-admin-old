{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\components\\\\items\\\\CardItem.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport cardItemStyle from '../../src/styleMUI/item/cardItem';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport AddShoppingCart from '@material-ui/icons/AddShoppingCart';\nimport Star from '@material-ui/icons/Star';\nimport Link from 'next/link';\nimport { onoffItem, deleteItem, favoriteItem } from '../../src/gql/items';\nimport { addBasket } from '../../src/gql/basket';\nimport Button from '@material-ui/core/Button';\nimport Confirmation from '../dialog/Confirmation';\nvar CardItem = React.memo(function (props) {\n  var classes = cardItemStyle();\n  var element = props.element,\n      setList = props.setList,\n      subCategory = props.subCategory,\n      getList = props.getList,\n      setFavorites = props.setFavorites;\n  var _props$user = props.user,\n      profile = _props$user.profile,\n      authenticated = _props$user.authenticated;\n\n  var _useState = useState(element !== undefined ? element.status : ''),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  var _useState2 = useState(element !== undefined && element.favorite !== undefined ? element.favorite : []),\n      favorite = _useState2[0],\n      setFavorite = _useState2[1];\n\n  var _props$mini_dialogAct = props.mini_dialogActions,\n      setMiniDialog = _props$mini_dialogAct.setMiniDialog,\n      showMiniDialog = _props$mini_dialogAct.showMiniDialog;\n  var showSnackBar = props.snackbarActions.showSnackBar;\n\n  var _useState3 = useState(false),\n      basket = _useState3[0],\n      setBasket = _useState3[1];\n\n  useEffect(function () {\n    if (!authenticated) {\n      if (localStorage.favorites == undefined) localStorage.favorites = _JSON$stringify([]);else {\n        var favorites = JSON.parse(localStorage.favorites);\n\n        for (var i = 0; i < favorites.length; i++) {\n          if (favorites[i]._id == element._id) setFavorite(true);\n        }\n      }\n      if (localStorage.basket == undefined) localStorage.basket = _JSON$stringify([]);else {\n        var _basket = JSON.parse(localStorage.basket);\n\n        console.log(_basket);\n\n        for (var _i = 0; _i < _basket.length; _i++) {\n          if (_basket[_i]._id == element._id) setBasket(true);\n        }\n      }\n    } else {\n      setBasket(element.basket.includes(profile._id));\n    }\n  }, []);\n  return __jsx(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(CardContent, {\n    className: classes.column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.chipList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, element.latest ? __jsx(\"div\", {\n    className: classes.chip,\n    style: {\n      color: 'white',\n      background: 'green'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"\\u041D\\u043E\\u0432\\u0438\\u043D\\u043A\\u0430\") : null, element.hit ? __jsx(\"div\", {\n    className: classes.chip,\n    style: {\n      color: 'black',\n      background: 'yellow'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"\\u0425\\u0438\\u0442\") : null), __jsx(Link, {\n    href: \"/item/[id]\",\n    as: \"/item/\".concat(element !== undefined ? element._id : 'new'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: classes.media,\n    src: element.image,\n    alt: element.info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), __jsx(Link, {\n    href: \"/item/[id]\",\n    as: \"/item/\".concat(element !== undefined ? element._id : 'new'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, element.name)), __jsx(Link, {\n    href: \"/item/[id]\",\n    as: \"/item/\".concat(element !== undefined ? element._id : 'new'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, element.stock === 0 || element.stock === undefined ? __jsx(\"div\", {\n    className: classes.price,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"\".concat(element.price, \" \\u0441\\u043E\\u043C\")) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.crossedPrice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"\".concat(element.price)), __jsx(\"div\", {\n    className: classes.stockPrice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"\".concat(element.stock, \" \\u0441\\u043E\\u043C\"))))), ['admin', 'организация', 'менеджер'].includes(profile.role) ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return onoffItem([element._id]);\n\n                        case 2:\n                          setStatus(status === 'active' ? 'deactive' : 'active');\n\n                        case 3:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function action() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 109\n                },\n                __self: this\n              }));\n              showMiniDialog(true);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    })),\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, status === 'active' ? 'Отключить' : 'Включить'), 'admin' === profile.role ? __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref4 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee3() {\n                  var list;\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.next = 2;\n                          return deleteItem([element._id], subCategory);\n\n                        case 2:\n                          list = _context3.sent.items;\n                          setList(list);\n\n                        case 4:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function action() {\n                  return _ref4.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 121\n                },\n                __self: this\n              }));\n              showMiniDialog(true);\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    })),\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\") : null) : profile.role === 'client' || !authenticated ? __jsx(AddShoppingCart, {\n    style: {\n      color: basket ? '#ffb300' : '#e1e1e1'\n    },\n    className: classes.button,\n    onClick: function onClick() {\n      if (profile.role === 'client') addBasket({\n        item: element._id,\n        count: 1\n      });else if (!authenticated) {\n        var _basket2 = JSON.parse(localStorage.basket);\n\n        var index = -1;\n\n        for (var i = 0; i < _basket2.length; i++) {\n          if (_basket2[i].item._id == element._id) index = i;\n        }\n\n        if (index === -1) _basket2.push({\n          item: element,\n          count: 1\n        });\n        localStorage.basket = _JSON$stringify(_basket2);\n      }\n      showSnackBar('Товар добавлен в корзину');\n      setBasket(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }) : null, profile.role === 'client' || !authenticated ? __jsx(Star, {\n    className: classes.buttonToggle,\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6() {\n      var index, favorites, i, action;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(profile.role === 'client')) {\n                _context6.next = 7;\n                break;\n              }\n\n              _context6.next = 3;\n              return favoriteItem([element._id]);\n\n            case 3:\n              index = favorite.indexOf(profile._id);\n\n              if (index === -1) {\n                favorite.push(profile._id);\n                setFavorite(_toConsumableArray(favorite));\n                if (getList !== undefined) getList();\n              }\n\n              _context6.next = 8;\n              break;\n\n            case 7:\n              if (!authenticated) {\n                favorites = JSON.parse(localStorage.favorites);\n                index = -1;\n\n                for (i = 0; i < favorites.length; i++) {\n                  if (favorites[i]._id == element._id) index = i;\n                }\n\n                if (index === -1) {\n                  favorites.push(element);\n                  setFavorite(true);\n                  localStorage.favorites = _JSON$stringify(favorites);\n                  if (setFavorites) setFavorites(favorites);\n                }\n              }\n\n            case 8:\n              if (index !== -1) {\n                action =\n                /*#__PURE__*/\n                function () {\n                  var _ref6 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee5() {\n                    var _favorites;\n\n                    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            if (profile.role === 'client') {\n                              favorite.splice(index, 1);\n                              setFavorite(_toConsumableArray(favorite));\n                              if (getList !== undefined) getList();\n                            } else if (!authenticated) {\n                              _favorites = JSON.parse(localStorage.favorites);\n\n                              _favorites.splice(index, 1);\n\n                              setFavorite(false);\n                              localStorage.favorites = _JSON$stringify(_favorites);\n                              if (setFavorites) setFavorites(_favorites);\n                            }\n\n                          case 1:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n\n                  return function action() {\n                    return _ref6.apply(this, arguments);\n                  };\n                }();\n\n                setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                  action: action,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 195\n                  },\n                  __self: this\n                }));\n                showMiniDialog(true);\n              }\n\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, this);\n    })),\n    style: {\n      color: !authenticated && favorite === true || profile.role == 'client' && favorite.includes(profile._id) ? '#ffb300' : '#e1e1e1'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }) : null));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardItem);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\items\\CardItem.js"],"names":["React","useState","useEffect","Card","CardContent","cardItemStyle","connect","bindActionCreators","mini_dialogActions","snackbarActions","AddShoppingCart","Star","Link","onoffItem","deleteItem","favoriteItem","addBasket","Button","Confirmation","CardItem","memo","props","classes","element","setList","subCategory","getList","setFavorites","user","profile","authenticated","undefined","status","setStatus","favorite","setFavorite","setMiniDialog","showMiniDialog","showSnackBar","basket","setBasket","localStorage","favorites","JSON","parse","i","length","_id","console","log","includes","card","column","chipList","latest","chip","color","background","hit","media","image","info","name","row","stock","price","crossedPrice","stockPrice","role","action","list","items","button","item","count","index","push","buttonToggle","indexOf","splice","mapStateToProps","state","app","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport cardItemStyle from '../../src/styleMUI/item/cardItem'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport AddShoppingCart from '@material-ui/icons/AddShoppingCart';\r\nimport Star from '@material-ui/icons/Star';\r\nimport Link from 'next/link';\r\nimport { onoffItem, deleteItem, favoriteItem } from '../../src/gql/items'\r\nimport { addBasket } from '../../src/gql/basket'\r\nimport Button from '@material-ui/core/Button';\r\nimport Confirmation from '../dialog/Confirmation'\r\n\r\nconst CardItem = React.memo((props) => {\r\n    const classes = cardItemStyle();\r\n    const { element, setList, subCategory, getList, setFavorites } = props;\r\n    const { profile, authenticated } = props.user;\r\n    let [status, setStatus] = useState(element!==undefined?element.status:'');\r\n    let [favorite, setFavorite] = useState(element!==undefined&&element.favorite!==undefined?element.favorite:[]);\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    const { showSnackBar } = props.snackbarActions;\r\n    let [basket, setBasket] = useState(false);\r\n    useEffect(()=>{\r\n        if(!authenticated){\r\n            if(localStorage.favorites==undefined)\r\n                localStorage.favorites = JSON.stringify([])\r\n            else {\r\n                let favorites = JSON.parse(localStorage.favorites)\r\n                for(let i=0; i<favorites.length; i++){\r\n                    if(favorites[i]._id == element._id)\r\n                        setFavorite(true)\r\n                }\r\n            }\r\n            if(localStorage.basket==undefined)\r\n                localStorage.basket = JSON.stringify([])\r\n            else {\r\n                let basket = JSON.parse(localStorage.basket)\r\n                console.log(basket)\r\n                for(let i=0; i<basket.length; i++){\r\n                    if(basket[i]._id == element._id)\r\n                        setBasket(true)\r\n                }\r\n            }\r\n\r\n        } else {\r\n            setBasket((element.basket).includes(profile._id))\r\n        }\r\n    },[])\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent className={classes.column}>\r\n                <div className={classes.chipList}>\r\n                    {\r\n                        element.latest?\r\n                            <div className={classes.chip} style={{color: 'white',background: 'green'}}>\r\n                                Новинка\r\n                            </div>\r\n                            :null\r\n                    }\r\n                                    {\r\n                                        element.hit?\r\n                                            <div className={classes.chip} style={{color: 'black',background: 'yellow'}}>\r\n                                                Хит\r\n                                            </div>\r\n                                            :null\r\n                                    }\r\n                                        </div>\r\n                                        <Link href='/item/[id]' as={`/item/${element!==undefined?element._id:'new'}`}>\r\n                                            <img\r\n                                                className={classes.media}\r\n                                                src={element.image}\r\n                                                alt={element.info}\r\n                                            />\r\n                                        </Link>\r\n                                        <Link href='/item/[id]' as={`/item/${element!==undefined?element._id:'new'}`}>\r\n                                            <div className={classes.name}>\r\n                                                {element.name}\r\n                                            </div>\r\n                                        </Link>\r\n                                        <Link href='/item/[id]' as={`/item/${element!==undefined?element._id:'new'}`}>\r\n                                            <div className={classes.row}>\r\n                                            {\r\n                                                element.stock===0||element.stock===undefined?\r\n                                                    <div className={classes.price}>\r\n                                                        {`${element.price} сом`}\r\n                                                    </div>\r\n                                                    :\r\n                                                    <>\r\n                                                    <div className={classes.crossedPrice}>\r\n                                                        {`${element.price}`}\r\n                                                    </div>\r\n                                                    <div className={classes.stockPrice}>\r\n                                                        {`${element.stock} сом`}\r\n                                                    </div>\r\n                                                    </>\r\n                                            }\r\n                                            </div>\r\n                                        </Link>\r\n                                        {['admin','организация','менеджер'].includes(profile.role)?\r\n                                            <>\r\n                                            <Button onClick={async()=>{\r\n                                                const action = async() => {\r\n                                                    await onoffItem([element._id])\r\n                                                    setStatus(status==='active'?'deactive':'active')\r\n                                                }\r\n                                                setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                showMiniDialog(true)\r\n                                            }} size='small' color='primary'>\r\n                                                {status==='active'?'Отключить':'Включить'}\r\n                                            </Button>\r\n                                            {\r\n                                                'admin'===profile.role?\r\n                                                    <Button onClick={async()=>{\r\n                                                        const action = async() => {\r\n                                                            const list = (await deleteItem([element._id], subCategory)).items\r\n                                                            setList(list)\r\n                                                        }\r\n                                                        setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                        showMiniDialog(true)\r\n                                                    }} size='small' color='primary'>\r\n                                                        Удалить\r\n                                                    </Button>:null\r\n                                            }\r\n                                            </>\r\n                                            :\r\n                                            profile.role==='client'||!authenticated?\r\n                                                <AddShoppingCart style={{color: basket?'#ffb300':'#e1e1e1'}}  className={classes.button} onClick={()=>{\r\n                                                    if(profile.role==='client')\r\n                                                        addBasket({item: element._id, count: 1})\r\n                                                    else if(!authenticated) {\r\n                                                        let basket = JSON.parse(localStorage.basket);\r\n                                                        let index = -1\r\n                                                        for(let i=0; i<basket.length; i++){\r\n                                                            if(basket[i].item._id == element._id)\r\n                                                                index = i\r\n                                                        }\r\n                                                        if(index===-1)\r\n                                                            basket.push({item: element, count: 1})\r\n                                                        localStorage.basket = JSON.stringify(basket)\r\n                                                    }\r\n                                                    showSnackBar('Товар добавлен в корзину')\r\n                                                    setBasket(true)\r\n                                                }}/>\r\n                                                :\r\n                                                null\r\n                                        }\r\n                                        {profile.role==='client'||!authenticated?\r\n                                            <Star className={classes.buttonToggle} onClick={async ()=>{\r\n                                                let index\r\n                                                if(profile.role==='client') {\r\n                                                    await favoriteItem([element._id])\r\n                                                    index = favorite.indexOf(profile._id)\r\n                                                    if (index === -1) {\r\n                                                        favorite.push(profile._id)\r\n                                                        setFavorite([...favorite])\r\n                                                        if (getList !== undefined)\r\n                                                            getList()\r\n                                                    }\r\n                                                }\r\n                                                else if(!authenticated) {\r\n                                                    let favorites = JSON.parse(localStorage.favorites);\r\n                                                    index = -1\r\n                                                    for(let i=0; i<favorites.length; i++){\r\n                                                        if(favorites[i]._id == element._id)\r\n                                                            index = i\r\n                                                    }\r\n                                                    if(index===-1) {\r\n                                                        favorites.push(element)\r\n                                                        setFavorite(true)\r\n                                                        localStorage.favorites = JSON.stringify(favorites)\r\n                                                        if (setFavorites)\r\n                                                            setFavorites(favorites)\r\n                                                    }\r\n                                                }\r\n                                                if (index !== -1) {\r\n                                                    const action = async() => {\r\n                                                        if(profile.role==='client') {\r\n                                                            favorite.splice(index, 1)\r\n                                                            setFavorite([...favorite])\r\n                                                            if (getList !== undefined)\r\n                                                                getList()\r\n                                                        }\r\n                                                        else if(!authenticated) {\r\n                                                            let favorites = JSON.parse(localStorage.favorites);\r\n                                                            favorites.splice(index, 1)\r\n                                                            setFavorite(false)\r\n                                                            localStorage.favorites = JSON.stringify(favorites)\r\n                                                            if(setFavorites)\r\n                                                                setFavorites(favorites)\r\n                                                        }\r\n                                                    }\r\n                                                    setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                    showMiniDialog(true)\r\n                                                }\r\n                                            }} style={{color: (!authenticated&&favorite===true)||(profile.role=='client'&&favorite.includes(profile._id))?'#ffb300':'#e1e1e1'}}  />\r\n                                            :\r\n                                            null\r\n                                        }\r\n                                    </CardContent>\r\n        </Card>\r\n    );\r\n})\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardItem)"]},"metadata":{},"sourceType":"module"}