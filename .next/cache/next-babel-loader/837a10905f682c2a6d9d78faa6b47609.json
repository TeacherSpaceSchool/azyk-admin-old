{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\pages\\\\clients.js\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState, useEffect } from 'react';\nimport App from '../layouts/App';\nimport pageListStyle from '../src/styleMUI/client/clientList';\nimport { getClients } from '../src/gql/client';\nimport CardClient from '../components/client/CardClient';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nvar Client = React.memo(function (props) {\n  var classes = pageListStyle();\n  var data = props.data;\n\n  var _useState = useState(data.clients),\n      list = _useState[0],\n      setList = _useState[1];\n\n  var _props$app = props.app,\n      search = _props$app.search,\n      filter = _props$app.filter,\n      sort = _props$app.sort;\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = setList;\n              _context.next = 3;\n              return getClients({\n                search: search,\n                sort: sort,\n                filter: filter\n              });\n\n            case 3:\n              _context.t1 = _context.sent.clients;\n              (0, _context.t0)(_context.t1);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, [filter, sort, search]);\n  return __jsx(App, {\n    filters: data.filterClient,\n    sorts: data.sortClient,\n    pageName: \"\\u041A\\u043B\\u0438\\u0435\\u043D\\u0442\\u044B\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"\\u041A\\u043B\\u0438\\u0435\\u043D\\u0442\\u044B\")), __jsx(\"div\", {\n    className: classes.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, list ? list.map(function (element) {\n    return __jsx(CardClient, {\n      key: element._id,\n      setList: setList,\n      element: element,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n  }) : null));\n});\n\nClient.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(ctx) {\n    var role, authenticated;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            role = ctx.store.getState().user.profile.role;\n            authenticated = ctx.store.getState().user.authenticated;\n            if (authenticated && !['admin', 'организация', 'менеджер'].includes(role)) if (ctx.res) {\n              ctx.res.writeHead(302, {\n                Location: '/'\n              });\n              ctx.res.end();\n            } else Router.push('/');\n            _context2.next = 5;\n            return getClients({\n              search: '',\n              sort: '-updatedAt',\n              filter: ''\n            });\n\n          case 5:\n            _context2.t0 = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              data: _context2.t0\n            });\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(Client);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\pages\\clients.js"],"names":["Head","React","useState","useEffect","App","pageListStyle","getClients","CardClient","connect","Router","Client","memo","props","classes","data","clients","list","setList","app","search","filter","sort","filterClient","sortClient","page","map","element","_id","getInitialProps","ctx","role","store","getState","user","profile","authenticated","includes","res","writeHead","Location","end","push","mapStateToProps","state"],"mappings":"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","sourcesContent":["import Head from 'next/head';\r\nimport React, { useState, useEffect } from 'react';\r\nimport App from '../layouts/App';\r\nimport pageListStyle from '../src/styleMUI/client/clientList'\r\nimport {getClients} from '../src/gql/client'\r\nimport CardClient from '../components/client/CardClient'\r\nimport { connect } from 'react-redux'\r\nimport Router from 'next/router'\r\n\r\nconst Client = React.memo((props) => {\r\n    const classes = pageListStyle();\r\n    const { data } = props;\r\n    let [list, setList] = useState(data.clients);\r\n    const { search, filter, sort } = props.app;\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            setList((await getClients({search: search, sort: sort, filter: filter})).clients)\r\n        })()\r\n    },[filter, sort, search])\r\n    return (\r\n        <App filters={data.filterClient} sorts={data.sortClient} pageName='Клиенты'>\r\n            <Head>\r\n                <title>Клиенты</title>\r\n            </Head>\r\n            <div className={classes.page}>\r\n                {list?list.map((element)=>\r\n                    <CardClient key={element._id} setList={setList} element={element}/>\r\n                ):null}\r\n            </div>\r\n        </App>\r\n    )\r\n})\r\n\r\nClient.getInitialProps = async function(ctx) {\r\n    let role = ctx.store.getState().user.profile.role\r\n    let authenticated = ctx.store.getState().user.authenticated\r\n    if(authenticated&&!['admin', 'организация', 'менеджер'].includes(role))\r\n        if(ctx.res) {\r\n            ctx.res.writeHead(302, {\r\n                Location: '/'\r\n            })\r\n            ctx.res.end()\r\n        } else\r\n            Router.push('/')\r\n    return {\r\n        data: await getClients({search: '', sort: '-updatedAt', filter: ''})\r\n    };\r\n};\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Client);"]},"metadata":{},"sourceType":"module"}