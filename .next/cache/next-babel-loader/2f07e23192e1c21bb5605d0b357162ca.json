{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\pages\\\\employments.js\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState, useEffect } from 'react';\nimport App from '../layouts/App';\nimport pageListStyle from '../src/styleMUI/employment/employmentList';\nimport { getEmployments } from '../src/gql/employment';\nimport CardEmployment from '../components/employment/CardEmployment';\nimport { connect } from 'react-redux';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Link from 'next/link';\nimport Router from 'next/router';\nvar Employment = React.memo(function (props) {\n  var profile = props.user.profile;\n  var classes = pageListStyle();\n  var data = props.data;\n\n  var _useState = useState(data.employments),\n      list = _useState[0],\n      setList = _useState[1];\n\n  var _props$app = props.app,\n      search = _props$app.search,\n      filter = _props$app.filter,\n      sort = _props$app.sort;\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = setList;\n              _context.next = 3;\n              return getEmployments({\n                search: search,\n                sort: sort,\n                filter: filter\n              });\n\n            case 3:\n              _context.t1 = _context.sent.employments;\n              (0, _context.t0)(_context.t1);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, [filter, sort, search]);\n  return __jsx(App, {\n    filters: data.filterEmployment,\n    sorts: data.sortEmployment,\n    pageName: \"\\u0421\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0438\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"\\u0421\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0438\")), __jsx(\"div\", {\n    className: classes.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, list ? list.map(function (element) {\n    return __jsx(CardEmployment, {\n      key: element._id,\n      setList: setList,\n      element: element,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  }) : null), ['admin', 'организация'].includes(profile.role) ? __jsx(Link, {\n    href: \"/employment/[id]\",\n    as: \"/employment/new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: classes.fab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))) : null);\n});\n\nEmployment.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(ctx) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!['admin', 'организация', 'менеджер'].includes(ctx.store.getState().user.profile.role)) if (ctx.res) {\n              ctx.res.writeHead(302, {\n                Location: '/'\n              });\n              ctx.res.end();\n            } else Router.push('/');\n            _context2.next = 3;\n            return getEmployments({\n              search: '',\n              sort: '-updatedAt',\n              filter: ''\n            });\n\n          case 3:\n            _context2.t0 = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              data: _context2.t0\n            });\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(Employment);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\pages\\employments.js"],"names":["Head","React","useState","useEffect","App","pageListStyle","getEmployments","CardEmployment","connect","Fab","AddIcon","Link","Router","Employment","memo","props","profile","user","classes","data","employments","list","setList","app","search","filter","sort","filterEmployment","sortEmployment","page","map","element","_id","includes","role","fab","getInitialProps","ctx","store","getState","res","writeHead","Location","end","push","mapStateToProps","state"],"mappings":"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","sourcesContent":["import Head from 'next/head';\r\nimport React, { useState, useEffect } from 'react';\r\nimport App from '../layouts/App';\r\nimport pageListStyle from '../src/styleMUI/employment/employmentList'\r\nimport {getEmployments} from '../src/gql/employment'\r\nimport CardEmployment from '../components/employment/CardEmployment'\r\nimport { connect } from 'react-redux'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Link from 'next/link';\r\nimport Router from 'next/router'\r\n\r\nconst Employment = React.memo((props) => {\r\n    const { profile } = props.user;\r\n    const classes = pageListStyle();\r\n    const { data } = props;\r\n    let [list, setList] = useState(data.employments);\r\n    const { search, filter, sort } = props.app;\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            setList((await getEmployments({search: search, sort: sort, filter: filter})).employments)\r\n        })()\r\n    },[filter, sort, search])\r\n    return (\r\n        <App filters={data.filterEmployment} sorts={data.sortEmployment} pageName='Сотрудники'>\r\n            <Head>\r\n                <title>Сотрудники</title>\r\n            </Head>\r\n            <div className={classes.page}>\r\n                {list?list.map((element)=>\r\n                    <CardEmployment key={element._id} setList={setList} element={element}/>\r\n                ):null}\r\n            </div>\r\n            {['admin', 'организация'].includes(profile.role)?\r\n                <Link href='/employment/[id]' as={`/employment/new`}>\r\n                    <Fab color='primary' aria-label='add' className={classes.fab}>\r\n                        <AddIcon />\r\n                    </Fab>\r\n                </Link>\r\n                :\r\n                null\r\n            }\r\n        </App>\r\n    )\r\n})\r\n\r\nEmployment.getInitialProps = async function(ctx) {\r\n    if(!['admin', 'организация', 'менеджер'].includes(ctx.store.getState().user.profile.role))\r\n        if(ctx.res) {\r\n            ctx.res.writeHead(302, {\r\n                Location: '/'\r\n            })\r\n            ctx.res.end()\r\n        } else\r\n            Router.push('/')\r\n    return {\r\n        data: await getEmployments({search: '', sort: '-updatedAt', filter: ''})\r\n    };\r\n};\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Employment);"]},"metadata":{},"sourceType":"module"}