{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport { ThemeProvider } from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../src/theme';\nimport withRedux from 'next-redux-wrapper';\nimport configureStore from '../redux/configureStore';\nimport { Provider } from 'react-redux';\nimport { SingletonApolloClient } from '../src/singleton/client';\nimport { SingletonStore } from '../src/singleton/store';\nimport { getProfile } from '../redux/actions/user';\nimport { checkMobile, checkAuth } from '../src/lib';\nimport { getClientGQL } from '../src/getClientGQL';\nexport default withRedux(configureStore, {\n  debug: false\n})(\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          store = _this$props.store;\n      new SingletonStore(store);\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, __jsx(ThemeProvider, {\n        theme: theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, __jsx(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), __jsx(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, __jsx(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })))));\n    }\n  }], [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Remove the server-side injected CSS.\n      var jssStyles = document.querySelector('#jss-server-side');\n\n      if (jssStyles) {\n        jssStyles.parentNode.removeChild(jssStyles);\n      }\n    }\n  }, {\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n                new SingletonApolloClient(ctx.req);\n\n                if (!ctx.req) {\n                  _context.next = 14;\n                  break;\n                }\n\n                ctx.store.getState().app.isMobileApp = checkMobile(ctx.req.headers['user-agent']);\n                ctx.store.getState().user.authenticated = checkAuth(ctx.req.headers.cookie);\n                console.log(ctx.req.headers.cookie);\n\n                if (!ctx.store.getState().user.authenticated) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.t0 = getProfile;\n                _context.next = 10;\n                return getClientGQL();\n\n              case 10:\n                _context.t1 = _context.sent;\n                _context.next = 13;\n                return (0, _context.t0)(_context.t1);\n\n              case 13:\n                ctx.store.getState().user.profile = _context.sent;\n\n              case 14:\n                ctx.store.getState().app.search = '';\n                ctx.store.getState().app.sort = '-createdAt';\n                ctx.store.getState().app.filter = '';\n                ctx.store.getState().app.date = '';\n                ctx.store.getState().app.load = false;\n                ctx.store.getState().mini_dialog.show = false;\n                ctx.store.getState().pagination.work = false;\n                _context.t2 = _objectSpread;\n                _context.t3 = {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 29;\n                  break;\n                }\n\n                _context.next = 26;\n                return Component.getInitialProps(ctx);\n\n              case 26:\n                _context.t4 = _context.sent;\n                _context.next = 30;\n                break;\n\n              case 29:\n                _context.t4 = {};\n\n              case 30:\n                _context.t5 = _context.t4;\n                _context.t6 = (0, _context.t2)(_context.t3, _context.t5);\n                return _context.abrupt(\"return\", {\n                  pageProps: _context.t6\n                });\n\n              case 33:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MyApp;\n}(App));","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\pages\\_app.js"],"names":["React","App","ThemeProvider","CssBaseline","theme","withRedux","configureStore","Provider","SingletonApolloClient","SingletonStore","getProfile","checkMobile","checkAuth","getClientGQL","debug","props","Component","pageProps","store","jssStyles","document","querySelector","parentNode","removeChild","ctx","req","getState","app","isMobileApp","headers","user","authenticated","cookie","console","log","profile","search","sort","filter","date","load","mini_dialog","show","pagination","work","getInitialProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport App  from 'next/app';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport theme from '../src/theme';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport configureStore from '../redux/configureStore'\r\nimport { Provider } from 'react-redux';\r\nimport { SingletonApolloClient } from '../src/singleton/client'\r\nimport { SingletonStore } from '../src/singleton/store'\r\nimport { getProfile } from '../redux/actions/user'\r\nimport { checkMobile, checkAuth } from '../src/lib'\r\nimport { getClientGQL } from '../src/getClientGQL'\r\n\r\nexport default withRedux(configureStore, { debug: false })(\r\n    class MyApp extends App {\r\n        static componentDidMount() {\r\n            // Remove the server-side injected CSS.\r\n            const jssStyles = document.querySelector('#jss-server-side');\r\n            if (jssStyles) {\r\n                jssStyles.parentNode.removeChild(jssStyles);\r\n            }\r\n        }\r\n        static async getInitialProps({ Component, ctx }) {\r\n            new SingletonApolloClient(ctx.req)\r\n            if(ctx.req){\r\n                ctx.store.getState().app.isMobileApp = checkMobile(ctx.req.headers['user-agent'])\r\n                ctx.store.getState().user.authenticated = checkAuth(ctx.req.headers.cookie)\r\n                console.log(ctx.req.headers.cookie)\r\n                if(ctx.store.getState().user.authenticated) {\r\n                    ctx.store.getState().user.profile = await getProfile(await getClientGQL())\r\n                }\r\n            }\r\n            ctx.store.getState().app.search = ''\r\n            ctx.store.getState().app.sort = '-createdAt'\r\n            ctx.store.getState().app.filter = ''\r\n            ctx.store.getState().app.date = ''\r\n            ctx.store.getState().app.load = false\r\n            ctx.store.getState().mini_dialog.show = false\r\n            ctx.store.getState().pagination.work = false\r\n            return {\r\n                pageProps: {\r\n                    ...(Component.getInitialProps\r\n                        ? await Component.getInitialProps(ctx)\r\n                        : {}),\r\n                }\r\n            };\r\n        }\r\n\r\n        render() {\r\n            const { Component, pageProps, store } = this.props;\r\n            new SingletonStore(store)\r\n            return (\r\n                <React.Fragment>\r\n                    <ThemeProvider theme={theme}>\r\n                        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n                        <CssBaseline />\r\n                        <Provider store={store}>\r\n                                <Component {...pageProps} />\r\n                        </Provider>\r\n                    </ThemeProvider>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n\r\n)\r\n"]},"metadata":{},"sourceType":"module"}