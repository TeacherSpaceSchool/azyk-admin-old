{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { getAds } from '../src/gql/ads';\nimport AppBar from '../components/app/AppBar';\nimport Dialog from '../components/app/Dialog';\nimport SnackBar from '../components/app/SnackBar';\nimport Drawer from '../components/app/Drawer';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { addFavoriteItem } from '../src/gql/items';\nimport { addBasket } from '../src/gql/basket';\nimport * as userActions from '../redux/actions/user';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport '../scss/app.scss';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nexport const mainWindow = React.createRef();\nconst App = React.memo(props => {\n  const {\n    setProfile\n  } = props.userActions;\n  const {\n    profile,\n    authenticated\n  } = props.user;\n  let {\n    sorts,\n    filters,\n    getList,\n    pageName\n  } = props;\n  let {\n    0: ads,\n    1: setAds\n  } = useState({});\n  useEffect(() => {\n    if (!profile || !profile.role) setProfile();\n  }, []);\n  useEffect(() => {\n    (async () => {\n      if (authenticated) {\n        if (localStorage.favorites && localStorage.favorites !== '[]') {\n          let favorites = JSON.parse(localStorage.favorites);\n          favorites = favorites.map(element => element._id);\n          await addFavoriteItem(favorites);\n          localStorage.favorites = _JSON$stringify([]);\n          if (getList !== undefined) await getList();\n        }\n\n        if (localStorage.basket && localStorage.basket !== '[]') {\n          let basket = JSON.parse(localStorage.basket);\n\n          for (let i = 0; i < basket.length; i++) {\n            await addBasket({\n              item: basket[i].item._id,\n              count: basket[i].count\n            });\n          }\n\n          localStorage.basket = '[]';\n          if (getList !== undefined) await getList();\n        }\n      }\n\n      setAds((await getAds()).ads);\n    })();\n  }, []);\n  const {\n    load\n  } = props.app;\n  /*const { data: { data }, loading } = useSubscription(\n      BASKET_SUBSCRIPTION\n  );\n  console.log(data, loading)*/\n\n  return __jsx(\"div\", {\n    ref: mainWindow,\n    className: \"App\"\n  }, __jsx(AppBar, {\n    pageName: pageName,\n    sorts: sorts,\n    filters: filters\n  }), __jsx(Drawer, null), __jsx(\"div\", {\n    className: \"App-body\"\n  }, ads && ads.url ? __jsx(\"a\", {\n    href: ads.url\n  }, __jsx(LazyLoadImage, {\n    src: ads.image,\n    alt: ads.title,\n    className: \"marketImg\"\n  })) : null, props.children), __jsx(Dialog, null), __jsx(SnackBar, null), load ? __jsx(\"div\", {\n    className: \"load\"\n  }, __jsx(CircularProgress, null)) : null);\n});\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    userActions: bindActionCreators(userActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":null,"metadata":{},"sourceType":"module"}