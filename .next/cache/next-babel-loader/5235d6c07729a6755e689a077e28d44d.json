{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\components\\\\blog\\\\CardBlog.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport cardPageListStyle from '../../src/styleMUI/blog/cardBlog';\nimport { connect } from 'react-redux';\nimport { pdDDMMYYYY } from '../../src/lib';\nimport Button from '@material-ui/core/Button';\nimport CardActions from '@material-ui/core/CardActions';\nimport { deleteBlog, addBlog, setBlog } from '../../src/gql/blog';\nimport TextField from '@material-ui/core/TextField';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport Confirmation from '../dialog/Confirmation';\nconst CardBlog = React.memo(props => {\n  const classes = cardPageListStyle();\n  const {\n    element,\n    setList\n  } = props;\n  const {\n    profile\n  } = props.user;\n  const {\n    isMobileApp\n  } = props.app; //addCard\n\n  let {\n    0: preview,\n    1: setPreview\n  } = useState(element ? element.image : '/static/add.png');\n  let {\n    0: image,\n    1: setImage\n  } = useState(undefined);\n\n  let handleChangeImage = event => {\n    setImage(event.target.files[0]);\n    setPreview(URL.createObjectURL(event.target.files[0]));\n  };\n\n  let {\n    0: title,\n    1: setTitle\n  } = useState(element ? element.title : '');\n\n  let handleTitle = event => {\n    setTitle(event.target.value);\n  };\n\n  let {\n    0: text,\n    1: setText\n  } = useState(element ? element.text : '');\n\n  let handleText = event => {\n    setText(event.target.value);\n  };\n\n  let date = pdDDMMYYYY(element ? new Date(element.updatedAt) : new Date());\n  const {\n    setMiniDialog,\n    showMiniDialog\n  } = props.mini_dialogActions;\n  const {\n    showSnackBar\n  } = props.snackbarActions;\n  let {\n    0: all,\n    1: setAll\n  } = useState(false);\n  return __jsx(Card, {\n    className: isMobileApp ? classes.cardM : classes.cardD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, profile.role === 'admin' ? __jsx(React.Fragment, null, __jsx(CardHeader, {\n    subheader: date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), __jsx(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: element ? element._id : 'add',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: isMobileApp ? classes.mediaM : classes.mediaD,\n    src: preview,\n    alt: 'Изменить',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), __jsx(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(TextField, {\n    label: \"\\u0418\\u043C\\u044F\",\n    value: title,\n    className: classes.input,\n    onChange: handleTitle,\n    inputProps: {\n      'aria-label': 'description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), __jsx(TextField, {\n    label: \"\\u0422\\u0435\\u043A\\u0441\\u0442\",\n    value: text,\n    className: classes.input,\n    onChange: handleText,\n    inputProps: {\n      'aria-label': 'description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }))), __jsx(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, element !== undefined ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: async () => {\n      let editElement = {\n        _id: element._id\n      };\n      if (title.length > 0 && title !== element.title) editElement.title = title;\n      if (text.length > 0 && text !== element.text) editElement.text = text;\n      if (image !== undefined) editElement.image = image;\n\n      const action = async () => {\n        setList((await setBlog(editElement)).blogs);\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), __jsx(Button, {\n    onClick: async () => {\n      const action = async () => {\n        setList((await deleteBlog([element._id])).blogs);\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")) : __jsx(Button, {\n    onClick: async () => {\n      if (image !== undefined && text.length > 0 && title.length > 0) {\n        setImage(undefined);\n        setPreview('/static/add.png');\n        setTitle('');\n        setText('');\n\n        const action = async () => {\n          setList((await addBlog({\n            image: image,\n            text: text,\n            title: title\n          })).blogs);\n        };\n\n        setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n          action: action,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }));\n        showMiniDialog(true);\n      } else {\n        showSnackBar('Заполните все поля');\n      }\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\")), __jsx(\"input\", {\n    accept: \"image/*\",\n    style: {\n      display: 'none'\n    },\n    id: element ? element._id : 'add',\n    type: \"file\",\n    onChange: handleChangeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })) : element !== undefined ? __jsx(React.Fragment, null, __jsx(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: isMobileApp ? classes.mediaM : classes.mediaD,\n    src: element.image,\n    alt: element.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.shapka,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, element.title), __jsx(\"div\", {\n    className: classes.date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, date)), all ? __jsx(\"div\", {\n    style: {\n      fontSize: '1rem',\n      margin: 20,\n      whiteSpace: 'pre-wrap'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, element.text) : null, __jsx(Button, {\n    onClick: async () => {\n      setAll(!all);\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, all ? 'Свернуть' : 'Посмотреть полностью'))) : null);\n});\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardBlog);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\blog\\CardBlog.js"],"names":["React","useState","Card","CardActionArea","CardContent","CardHeader","cardPageListStyle","connect","pdDDMMYYYY","Button","CardActions","deleteBlog","addBlog","setBlog","TextField","bindActionCreators","mini_dialogActions","snackbarActions","Confirmation","CardBlog","memo","props","classes","element","setList","profile","user","isMobileApp","app","preview","setPreview","image","setImage","undefined","handleChangeImage","event","target","files","URL","createObjectURL","title","setTitle","handleTitle","value","text","setText","handleText","date","Date","updatedAt","setMiniDialog","showMiniDialog","showSnackBar","all","setAll","cardM","cardD","role","_id","mediaM","mediaD","input","editElement","length","action","blogs","display","shapka","fontSize","margin","whiteSpace","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,OAA9B,QAA6C,oBAA7C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,kBAAZ,MAAoC,iCAApC;AACA,OAAO,KAAKC,eAAZ,MAAiC,8BAAjC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AAEA,MAAMC,QAAQ,GAAGnB,KAAK,CAACoB,IAAN,CAAYC,KAAD,IAAW;AACnC,QAAMC,OAAO,GAAGhB,iBAAiB,EAAjC;AACA,QAAM;AAAEiB,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBH,KAA7B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAcJ,KAAK,CAACK,IAA1B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAkBN,KAAK,CAACO,GAA9B,CAJmC,CAKnC;;AACA,MAAI;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwB7B,QAAQ,CAACsB,OAAO,GAACA,OAAO,CAACQ,KAAT,GAAe,iBAAvB,CAApC;AACA,MAAI;AAAA,OAACA,KAAD;AAAA,OAAQC;AAAR,MAAoB/B,QAAQ,CAACgC,SAAD,CAAhC;;AACA,MAAIC,iBAAiB,GAAKC,KAAD,IAAW;AAChCH,IAAAA,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAR;AACAP,IAAAA,UAAU,CAACQ,GAAG,CAACC,eAAJ,CAAoBJ,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAApB,CAAD,CAAV;AACH,GAHD;;AAIA,MAAI;AAAA,OAACG,KAAD;AAAA,OAAQC;AAAR,MAAoBxC,QAAQ,CAACsB,OAAO,GAACA,OAAO,CAACiB,KAAT,GAAe,EAAvB,CAAhC;;AACA,MAAIE,WAAW,GAAKP,KAAD,IAAW;AAC1BM,IAAAA,QAAQ,CAACN,KAAK,CAACC,MAAN,CAAaO,KAAd,CAAR;AACH,GAFD;;AAGA,MAAI;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkB5C,QAAQ,CAACsB,OAAO,GAACA,OAAO,CAACqB,IAAT,GAAc,EAAtB,CAA9B;;AACA,MAAIE,UAAU,GAAKX,KAAD,IAAW;AACzBU,IAAAA,OAAO,CAACV,KAAK,CAACC,MAAN,CAAaO,KAAd,CAAP;AACH,GAFD;;AAGA,MAAII,IAAI,GAAGvC,UAAU,CAACe,OAAO,GAAC,IAAIyB,IAAJ,CAASzB,OAAO,CAAC0B,SAAjB,CAAD,GAA6B,IAAID,IAAJ,EAArC,CAArB;AACA,QAAM;AAAEE,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAoC9B,KAAK,CAACL,kBAAhD;AACA,QAAM;AAAEoC,IAAAA;AAAF,MAAmB/B,KAAK,CAACJ,eAA/B;AACA,MAAI;AAAA,OAACoC,GAAD;AAAA,OAAMC;AAAN,MAAgBrD,QAAQ,CAAC,KAAD,CAA5B;AACA,SACI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAE0B,WAAW,GAACL,OAAO,CAACiC,KAAT,GAAejC,OAAO,CAACkC,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ/B,OAAO,CAACgC,IAAR,KAAiB,OAAjB,GACI,4BACA,MAAC,UAAD;AACI,IAAA,SAAS,EAAEV,IADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAIA,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAExB,OAAO,GAACA,OAAO,CAACmC,GAAT,GAAa,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAE/B,WAAW,GAACL,OAAO,CAACqC,MAAT,GAAgBrC,OAAO,CAACsC,MADlD;AAEI,IAAA,GAAG,EAAE/B,OAFT;AAGI,IAAA,GAAG,EAAE,UAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAQI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AACI,IAAA,KAAK,EAAC,oBADV;AAEI,IAAA,KAAK,EAAEW,KAFX;AAGI,IAAA,SAAS,EAAElB,OAAO,CAACuC,KAHvB;AAII,IAAA,QAAQ,EAAEnB,WAJd;AAKI,IAAA,UAAU,EAAE;AACR,oBAAc;AADN,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAYI,MAAC,SAAD;AACI,IAAA,KAAK,EAAC,gCADV;AAEI,IAAA,KAAK,EAAEE,IAFX;AAGI,IAAA,SAAS,EAAEtB,OAAO,CAACuC,KAHvB;AAII,IAAA,QAAQ,EAAEf,UAJd;AAKI,IAAA,UAAU,EAAE;AACR,oBAAc;AADN,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CARJ,CAJA,EAmCA,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQvB,OAAO,KAAGU,SAAV,GACI,4BACA,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,YAAS;AAC9B,UAAI6B,WAAW,GAAG;AAACJ,QAAAA,GAAG,EAAEnC,OAAO,CAACmC;AAAd,OAAlB;AACA,UAAGlB,KAAK,CAACuB,MAAN,GAAa,CAAb,IAAgBvB,KAAK,KAAGjB,OAAO,CAACiB,KAAnC,EAAyCsB,WAAW,CAACtB,KAAZ,GAAoBA,KAApB;AACzC,UAAGI,IAAI,CAACmB,MAAL,GAAY,CAAZ,IAAenB,IAAI,KAAGrB,OAAO,CAACqB,IAAjC,EAAsCkB,WAAW,CAAClB,IAAZ,GAAmBA,IAAnB;AACtC,UAAGb,KAAK,KAAGE,SAAX,EAAqB6B,WAAW,CAAC/B,KAAZ,GAAoBA,KAApB;;AACrB,YAAMiC,MAAM,GAAG,YAAW;AACtBxC,QAAAA,OAAO,CAAC,CAAC,MAAMX,OAAO,CAACiD,WAAD,CAAd,EAA6BG,KAA9B,CAAP;AACH,OAFD;;AAGAf,MAAAA,aAAa,CAAC,cAAD,EAAiB,MAAC,YAAD;AAAc,QAAA,MAAM,EAAEc,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjB,CAAb;AACAb,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAVO;AAUL,IAAA,IAAI,EAAC,OAVA;AAUQ,IAAA,KAAK,EAAC,SAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADA,EAcA,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,YAAS;AAC1B,YAAMa,MAAM,GAAG,YAAW;AACtBxC,QAAAA,OAAO,CAAC,CAAC,MAAMb,UAAU,CAAC,CAACY,OAAO,CAACmC,GAAT,CAAD,CAAjB,EAAkCO,KAAnC,CAAP;AACH,OAFD;;AAGAf,MAAAA,aAAa,CAAC,cAAD,EAAiB,MAAC,YAAD;AAAc,QAAA,MAAM,EAAEc,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjB,CAAb;AACAb,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KANG;AAMD,IAAA,IAAI,EAAC,OANJ;AAMY,IAAA,KAAK,EAAC,SANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAdA,CADJ,GA0BI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,YAAU;AACvB,UAAIpB,KAAK,KAAKE,SAAV,IAAuBW,IAAI,CAACmB,MAAL,GAAc,CAArC,IAA0CvB,KAAK,CAACuB,MAAN,GAAe,CAA7D,EAAgE;AAC5D/B,QAAAA,QAAQ,CAACC,SAAD,CAAR;AACAH,QAAAA,UAAU,CAAC,iBAAD,CAAV;AACAW,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAI,QAAAA,OAAO,CAAC,EAAD,CAAP;;AACA,cAAMmB,MAAM,GAAG,YAAW;AACtBxC,UAAAA,OAAO,CAAC,CAAC,MAAMZ,OAAO,CAAC;AAACmB,YAAAA,KAAK,EAAEA,KAAR;AAAea,YAAAA,IAAI,EAAEA,IAArB;AAA2BJ,YAAAA,KAAK,EAAEA;AAAlC,WAAD,CAAd,EAA0DyB,KAA3D,CAAP;AACH,SAFD;;AAGAf,QAAAA,aAAa,CAAC,cAAD,EAAiB,MAAC,YAAD;AAAc,UAAA,MAAM,EAAEc,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjB,CAAb;AACAb,QAAAA,cAAc,CAAC,IAAD,CAAd;AACH,OAVD,MAUO;AACHC,QAAAA,YAAY,CAAC,oBAAD,CAAZ;AACH;AACJ,KAdD;AAeE,IAAA,IAAI,EAAC,OAfP;AAee,IAAA,KAAK,EAAC,SAfrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDA5BZ,CAnCA,EAmFA;AACI,IAAA,MAAM,EAAC,SADX;AAEI,IAAA,KAAK,EAAE;AAAEc,MAAAA,OAAO,EAAE;AAAX,KAFX;AAGI,IAAA,EAAE,EAAE3C,OAAO,GAACA,OAAO,CAACmC,GAAT,GAAa,KAH5B;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,QAAQ,EAAExB,iBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnFA,CADJ,GA6FIX,OAAO,KAAGU,SAAV,GACI,4BACA,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAEN,WAAW,GAACL,OAAO,CAACqC,MAAT,GAAgBrC,OAAO,CAACsC,MADlD;AAEI,IAAA,GAAG,EAAErC,OAAO,CAACQ,KAFjB;AAGI,IAAA,GAAG,EAAER,OAAO,CAACiB,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI;AAAK,IAAA,SAAS,EAAElB,OAAO,CAAC6C,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAE7C,OAAO,CAACkB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCjB,OAAO,CAACiB,KAAxC,CADJ,EAEI;AAAK,IAAA,SAAS,EAAElB,OAAO,CAACyB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BA,IAA/B,CAFJ,CANJ,EAUKM,GAAG,GACA;AAAK,IAAA,KAAK,EAAE;AAACe,MAAAA,QAAQ,EAAE,MAAX;AAAmBC,MAAAA,MAAM,EAAE,EAA3B;AAA+BC,MAAAA,UAAU,EAAE;AAA3C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK/C,OAAO,CAACqB,IADb,CADA,GAGO,IAbf,EAcI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,YAAU;AACvBU,MAAAA,MAAM,CAAC,CAACD,GAAF,CAAN;AACH,KAFD;AAEG,IAAA,IAAI,EAAC,OAFR;AAEgB,IAAA,KAAK,EAAC,SAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKA,GAAG,GAAC,UAAD,GAAY,sBAHpB,CAdJ,CADA,CADJ,GAuBK,IAtHjB,CADJ;AA2HH,CAnJgB,CAAjB;;AAqJA,SAASkB,eAAT,CAA0BC,KAA1B,EAAiC;AAC7B,SAAO;AACH9C,IAAAA,IAAI,EAAE8C,KAAK,CAAC9C,IADT;AAEHE,IAAAA,GAAG,EAAE4C,KAAK,CAAC5C;AAFR,GAAP;AAIH;;AAED,SAAS6C,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACH1D,IAAAA,kBAAkB,EAAED,kBAAkB,CAACC,kBAAD,EAAqB0D,QAArB,CADnC;AAEHzD,IAAAA,eAAe,EAAEF,kBAAkB,CAACE,eAAD,EAAkByD,QAAlB;AAFhC,GAAP;AAIH;;AAED,eAAenE,OAAO,CAACgE,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtD,QAA7C,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport cardPageListStyle from '../../src/styleMUI/blog/cardBlog'\r\nimport { connect } from 'react-redux'\r\nimport { pdDDMMYYYY } from '../../src/lib'\r\nimport Button from '@material-ui/core/Button';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { deleteBlog, addBlog, setBlog } from '../../src/gql/blog'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport Confirmation from '../dialog/Confirmation'\r\n\r\nconst CardBlog = React.memo((props) => {\r\n    const classes = cardPageListStyle();\r\n    const { element, setList } = props;\r\n    const { profile } = props.user;\r\n    const { isMobileApp } = props.app;\r\n    //addCard\r\n    let [preview, setPreview] = useState(element?element.image:'/static/add.png');\r\n    let [image, setImage] = useState(undefined);\r\n    let handleChangeImage = ((event) => {\r\n        setImage(event.target.files[0])\r\n        setPreview(URL.createObjectURL(event.target.files[0]))\r\n    })\r\n    let [title, setTitle] = useState(element?element.title:'');\r\n    let handleTitle =  (event) => {\r\n        setTitle(event.target.value)\r\n    };\r\n    let [text, setText] = useState(element?element.text:'');\r\n    let handleText =  (event) => {\r\n        setText(event.target.value)\r\n    };\r\n    let date = pdDDMMYYYY(element?new Date(element.updatedAt):new Date())\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    const { showSnackBar } = props.snackbarActions;\r\n    let [all, setAll] = useState(false);\r\n    return (\r\n        <Card className={isMobileApp?classes.cardM:classes.cardD}>\r\n            {\r\n                profile.role === 'admin' ?\r\n                    <>\r\n                    <CardHeader\r\n                        subheader={date}\r\n                    />\r\n                    <CardActionArea>\r\n                        <label htmlFor={element?element._id:'add'}>\r\n                            <img\r\n                                className={isMobileApp?classes.mediaM:classes.mediaD}\r\n                                src={preview}\r\n                                alt={'Изменить'}\r\n                            />\r\n                        </label>\r\n                        <CardContent>\r\n                            <TextField\r\n                                label='Имя'\r\n                                value={title}\r\n                                className={classes.input}\r\n                                onChange={handleTitle}\r\n                                inputProps={{\r\n                                    'aria-label': 'description',\r\n                                }}\r\n                            />\r\n                            <br/>\r\n                            <br/>\r\n                            <TextField\r\n                                label='Текст'\r\n                                value={text}\r\n                                className={classes.input}\r\n                                onChange={handleText}\r\n                                inputProps={{\r\n                                    'aria-label': 'description',\r\n                                }}\r\n                            />\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                        {\r\n                            element!==undefined?\r\n                                <>\r\n                                <Button onClick={async()=>{\r\n                            let editElement = {_id: element._id}\r\n                            if(title.length>0&&title!==element.title)editElement.title = title\r\n                            if(text.length>0&&text!==element.text)editElement.text = text\r\n                            if(image!==undefined)editElement.image = image\r\n                            const action = async() => {\r\n                                setList((await setBlog(editElement)).blogs)\r\n                            }\r\n                            setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                            showMiniDialog(true)\r\n                        }} size='small' color='primary'>\r\n                            Сохранить\r\n                            </Button>\r\n                                <Button onClick={async()=>{\r\n                                const action = async() => {\r\n                                    setList((await deleteBlog([element._id])).blogs)\r\n                                }\r\n                                setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                showMiniDialog(true)\r\n                            }} size='small' color='primary'>\r\n                                Удалить\r\n                            </Button>\r\n                                </>\r\n                                :\r\n                                <Button onClick={async()=> {\r\n                                    if (image !== undefined && text.length > 0 && title.length > 0) {\r\n                                        setImage(undefined)\r\n                                        setPreview('/static/add.png')\r\n                                        setTitle('')\r\n                                        setText('')\r\n                                        const action = async() => {\r\n                                            setList((await addBlog({image: image, text: text, title: title})).blogs)\r\n                                        }\r\n                                        setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                        showMiniDialog(true)\r\n                                    } else {\r\n                                        showSnackBar('Заполните все поля')\r\n                                    }\r\n                                }\r\n                                } size='small' color='primary'>\r\n                                    Добавить\r\n                                </Button>\r\n                        }\r\n                    </CardActions>\r\n                    <input\r\n                        accept='image/*'\r\n                        style={{ display: 'none' }}\r\n                        id={element?element._id:'add'}\r\n                        type='file'\r\n                        onChange={handleChangeImage}\r\n                    />\r\n                    </>\r\n                    :\r\n                    element!==undefined?\r\n                        <>\r\n                        <CardActionArea>\r\n                            <img\r\n                                className={isMobileApp?classes.mediaM:classes.mediaD}\r\n                                src={element.image}\r\n                                alt={element.title}\r\n                            />\r\n                            <div className={classes.shapka}>\r\n                                <div className={classes.title}>{element.title}</div>\r\n                                <div className={classes.date}>{date}</div>\r\n                            </div>\r\n                            {all?\r\n                                <div style={{fontSize: '1rem', margin: 20, whiteSpace: 'pre-wrap'}}>\r\n                                    {element.text}\r\n                                </div>:null}\r\n                            <Button onClick={async()=> {\r\n                                setAll(!all)\r\n                            }} size='small' color='primary'>\r\n                                {all?'Свернуть':'Посмотреть полностью'}\r\n                            </Button>\r\n                        </CardActionArea>\r\n                        </>\r\n                        :null\r\n            }\r\n            </Card>\r\n    );\r\n})\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardBlog)"]},"metadata":{},"sourceType":"module"}