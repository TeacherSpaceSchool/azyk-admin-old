{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Document, { Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/styles';\nimport theme from '../src/theme';\nimport { urlMain } from '../redux/constants/other';\n\nclass MyDocument extends Document {\n  render() {\n    return __jsx(\"html\", {\n      lang: \"en\"\n    }, __jsx(Head, null, __jsx(\"meta\", {\n      charSet: \"utf-8\"\n    }), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n    }), __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: theme.palette.primary.main\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n    }), __jsx(\"meta\", {\n      property: \"fb:app_id\",\n      content: \"257953674358265\"\n    }), __jsx(\"meta\", {\n      name: \"format-detection\",\n      content: \"telephone=no\"\n    }), __jsx(\"meta\", {\n      httpEquiv: \"x-dns-prefetch-control\",\n      content: \"on\"\n    }), __jsx(\"link\", {\n      rel: \"shortcut icon\",\n      href: `${urlMain}/static/favicon.ico`,\n      type: \"image/x-icon\"\n    })), __jsx(\"body\", null, __jsx(Main, null), __jsx(NextScript, null)));\n  }\n\n}\n\nMyDocument.getInitialProps = async ctx => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n  // Render app and page and get the context of the page with collected side effects.\n  const sheets = new ServerStyleSheets();\n  const originalRenderPage = ctx.renderPage;\n\n  ctx.renderPage = () => originalRenderPage({\n    enhanceApp: App => props => sheets.collect(__jsx(App, props))\n  });\n\n  const initialProps = await Document.getInitialProps(ctx);\n  return _objectSpread({}, initialProps, {\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: [__jsx(React.Fragment, {\n      key: \"styles\"\n    }, initialProps.styles, sheets.getStyleElement())]\n  });\n};\n\nexport default MyDocument;","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\pages\\_document.js"],"names":["React","Document","Head","Main","NextScript","ServerStyleSheets","theme","urlMain","MyDocument","render","palette","primary","main","getInitialProps","ctx","sheets","originalRenderPage","renderPage","enhanceApp","App","props","collect","initialProps","styles","getStyleElement"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAASC,OAAT,QAAwB,0BAAxB;;AAEA,MAAMC,UAAN,SAAyBP,QAAzB,CAAkC;AAC9BQ,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,IAAI,EAAC;AAAX,OACA,MAAC,IAAD,QACE;AAAM,MAAA,OAAO,EAAC;AAAd,MADF,EAEE;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,OAAO,EAAC;AAFZ,MAFF,EAOE;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAcC,OAAd,CAAsBC;AAAxD,MAPF,EAQE;AACI,MAAA,GAAG,EAAC,YADR;AAEI,MAAA,IAAI,EAAC;AAFT,MARF,EAWI;AAAM,MAAA,QAAQ,EAAC,WAAf;AAA2B,MAAA,OAAO,EAAC;AAAnC,MAXJ,EAYI;AAAM,MAAA,IAAI,EAAC,kBAAX;AAA8B,MAAA,OAAO,EAAC;AAAtC,MAZJ,EAaI;AAAM,MAAA,SAAS,EAAC,wBAAhB;AAAyC,MAAA,OAAO,EAAC;AAAjD,MAbJ,EAcI;AAAM,MAAA,GAAG,EAAC,eAAV;AAA0B,MAAA,IAAI,EAAG,GAAEL,OAAQ,qBAA3C;AAAiE,MAAA,IAAI,EAAC;AAAtE,MAdJ,CADA,EAiBA,oBACA,MAAC,IAAD,OADA,EAEA,MAAC,UAAD,OAFA,CAjBA,CADJ;AAwBH;;AA1B6B;;AA6BlCC,UAAU,CAACK,eAAX,GAA6B,MAAMC,GAAN,IAAa;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,QAAMC,MAAM,GAAG,IAAIV,iBAAJ,EAAf;AACA,QAAMW,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEAH,EAAAA,GAAG,CAACG,UAAJ,GAAiB,MACbD,kBAAkB,CAAC;AACfE,IAAAA,UAAU,EAAEC,GAAG,IAAIC,KAAK,IAAIL,MAAM,CAACM,OAAP,CAAe,MAAC,GAAD,EAASD,KAAT,CAAf;AADb,GAAD,CADtB;;AAKA,QAAME,YAAY,GAAG,MAAMrB,QAAQ,CAACY,eAAT,CAAyBC,GAAzB,CAA3B;AAEA,2BACOQ,YADP;AAEI;AACAC,IAAAA,MAAM,EAAE,CACN,MAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAC;AAApB,OACKD,YAAY,CAACC,MADlB,EAEKR,MAAM,CAACS,eAAP,EAFL,CADM;AAHZ;AAUH,CA5CD;;AA8CA,eAAehB,UAAf","sourcesContent":["import React from 'react';\nimport Document, { Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/styles';\nimport theme from '../src/theme';\nimport { urlMain } from '../redux/constants/other'\n\nclass MyDocument extends Document {\n    render() {\n        return (\n            <html lang=\"en\">\n            <Head>\n              <meta charSet=\"utf-8\" />\n              <meta\n                  name=\"viewport\"\n                  content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n              />\n                {/* PWA primary color */}\n              <meta name=\"theme-color\" content={theme.palette.primary.main} />\n              <link\n                  rel=\"stylesheet\"\n                  href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n              /><meta property=\"fb:app_id\" content=\"257953674358265\" />\n                <meta name=\"format-detection\" content=\"telephone=no\" />\n                <meta httpEquiv=\"x-dns-prefetch-control\" content=\"on\"/>\n                <link rel=\"shortcut icon\" href={`${urlMain}/static/favicon.ico`} type=\"image/x-icon\" />\n            </Head>\n            <body>\n            <Main />\n            <NextScript />\n            </body>\n            </html>\n        );\n    }\n}\n\nMyDocument.getInitialProps = async ctx => {\n    // Resolution order\n    //\n    // On the server:\n    // 1. app.getInitialProps\n    // 2. page.getInitialProps\n    // 3. document.getInitialProps\n    // 4. app.render\n    // 5. page.render\n    // 6. document.render\n    //\n    // On the server with error:\n    // 1. document.getInitialProps\n    // 2. app.render\n    // 3. page.render\n    // 4. document.render\n    //\n    // On the client\n    // 1. app.getInitialProps\n    // 2. page.getInitialProps\n    // 3. app.render\n    // 4. page.render\n\n    // Render app and page and get the context of the page with collected side effects.\n    const sheets = new ServerStyleSheets();\n    const originalRenderPage = ctx.renderPage;\n\n    ctx.renderPage = () =>\n        originalRenderPage({\n            enhanceApp: App => props => sheets.collect(<App {...props} />),\n        });\n\n    const initialProps = await Document.getInitialProps(ctx);\n\n    return {\n        ...initialProps,\n        // Styles fragment is rendered after the app and page rendering finish.\n        styles: [\n          <React.Fragment key=\"styles\">\n              {initialProps.styles}\n              {sheets.getStyleElement()}\n          </React.Fragment>,\n        ],\n    };\n};\n\nexport default MyDocument;\n"]},"metadata":{},"sourceType":"module"}