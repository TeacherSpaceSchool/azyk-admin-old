{"ast":null,"code":"var __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState, useEffect } from 'react';\nimport App from '../layouts/App';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as userActions from '../redux/actions/user';\nimport { getCategorys } from '../src/gql/category';\nimport pageListStyle from '../src/styleMUI/category/categoryList';\nimport CardCategory from '../components/category/CardCategory';\nconst Index = React.memo(props => {\n  const classes = pageListStyle();\n  const {\n    data\n  } = props;\n  let {\n    0: list,\n    1: setList\n  } = useState(data.categorys);\n  const {\n    search,\n    filter,\n    sort\n  } = props.app;\n  const {\n    profile\n  } = props.user;\n  useEffect(() => {\n    (async () => {\n      setList((await getCategorys({\n        search: search,\n        sort: sort,\n        filter: filter\n      })).categorys);\n    })();\n  }, [filter, sort, search]);\n  return __jsx(App, {\n    filters: data.filterCategory,\n    sorts: data.sortCategory,\n    pageName: \"\\u0422\\u043E\\u0432\\u0430\\u0440\\u044B\"\n  }, __jsx(Head, null, __jsx(\"title\", null, \"\\u0422\\u043E\\u0432\\u0430\\u0440\\u044B\")), __jsx(\"div\", {\n    className: classes.page\n  }, profile.role === 'admin' ? __jsx(React.Fragment, null, __jsx(CardCategory, {\n    setList: setList\n  })) : null, __jsx(CardCategory, {\n    element: {\n      image: '/static/add.png',\n      name: 'Все подкатегории',\n      _id: 'all'\n    },\n    setList: \"all\"\n  }), list ? list.map(element => element.name !== 'Не задано' ? __jsx(CardCategory, {\n    key: element._id,\n    setList: setList,\n    element: element\n  }) : null) : null));\n});\n\nIndex.getInitialProps = async function () {\n  return {\n    data: await getCategorys({\n      search: '',\n      sort: '-updatedAt',\n      filter: ''\n    })\n  };\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    userActions: bindActionCreators(userActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":null,"metadata":{},"sourceType":"module"}