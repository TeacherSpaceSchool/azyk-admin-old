{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as userActions from '../../redux/actions/user';\nimport { validPhone } from '../../redux/constants/other';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport dialogContentStyle from '../../src/styleMUI/dialogContent';\nconst AddSocial = React.memo(props => {\n  const {\n    classes,\n    action,\n    idx,\n    social\n  } = props;\n  let {\n    0: url,\n    1: setUrl\n  } = useState(social ? social : '');\n  const {\n    isMobileApp\n  } = props.app;\n  const {\n    showMiniDialog\n  } = props.mini_dialogActions;\n  const width = isMobileApp ? window.innerWidth - 144 : 500;\n  return __jsx(\"div\", {\n    className: classes.main\n  }, __jsx(TextField, {\n    style: {\n      width: width\n    },\n    id: \"standard-search\",\n    label: \"URL\",\n    type: \"login\",\n    className: classes.textField,\n    margin: \"normal\",\n    value: url,\n    onChange: event => {\n      setUrl(event.target.value);\n    }\n  }), __jsx(\"br\", null), __jsx(\"div\", null, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: async () => {\n      await action(url, idx);\n      showMiniDialog(false);\n    },\n    className: classes.button\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => {\n      showMiniDialog(false);\n    },\n    className: classes.button\n  }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\")));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    mini_dialog: state.mini_dialog,\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    userActions: bindActionCreators(userActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(AddSocial));","map":null,"metadata":{},"sourceType":"module"}