{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport cardRouteStyle from '../../src/styleMUI/route/cardRoute';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport dynamic from 'next/dynamic';\nimport moment from 'moment';\nimport { deleteRoute } from '../../src/gql/route';\nimport Link from 'next/link';\nconst Confirmation = dynamic(() => import('../dialog/Confirmation'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../dialog/Confirmation')],\n    modules: ['../dialog/Confirmation']\n  }\n});\nconst CardOrder = React.memo(props => {\n  const classes = cardRouteStyle();\n  const {\n    element,\n    setList\n  } = props;\n  const {\n    setMiniDialog,\n    showMiniDialog\n  } = props.mini_dialogActions;\n  const statusColor = {\n    'создан': 'orange',\n    'выполняется': 'blue',\n    'выполнен': 'green'\n  };\n  return __jsx(Card, {\n    className: classes.card\n  }, __jsx(Link, {\n    href: \"/route/[id]\",\n    as: `/route/${element !== undefined ? element._id : 'new'}`\n  }, __jsx(CardActionArea, null, __jsx(CardContent, {\n    className: classes.column\n  }, __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"\\u041A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u044F:\\xA0\"), __jsx(\"div\", {\n    className: classes.value\n  }, element.employment.organization.name), __jsx(\"div\", {\n    className: classes.status,\n    style: {\n      background: statusColor[element.status]\n    }\n  }, element.status)), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"\\u042D\\u043A\\u0441\\u043F\\u0435\\u0434\\u0438\\u0442\\u043E\\u0440:\\xA0\"), __jsx(\"div\", {\n    className: classes.value\n  }, element.employment.name)), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"\\u0414\\u0430\\u0442\\u0430:\\xA0\"), __jsx(\"div\", {\n    className: classes.value\n  }, moment(element.dateStart).format('DD.MM.YY'))), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"\\u0417\\u0430\\u043A\\u0430\\u0437\\u044B:\\xA0\"), __jsx(\"div\", {\n    className: classes.column\n  }, element.invoices.map((invoice, idx) => __jsx(\"div\", {\n    key: idx,\n    className: classes.value\n  }, invoice.number))))))), __jsx(CardActions, null, __jsx(Button, {\n    onClick: async () => {\n      const action = async () => {\n        setList((await deleteRoute([element._id])).routes);\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\"\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardOrder);","map":null,"metadata":{},"sourceType":"module"}