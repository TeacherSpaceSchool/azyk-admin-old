{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n                    mutation ($_id: ID!, $image: Upload, $name: String) {\\n                        setCategory(_id: $_id, image: $image, name: $name) {\\n                             data\\n                        }\\n                    }\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n                    mutation ($image: Upload!, $name: String!) {\\n                        addCategory(image: $image, name: $name) {\\n                             data\\n                        }\\n                    }\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n                    mutation ($_id: [ID]!) {\\n                        onoffCategory(_id: $_id) {\\n                             data\\n                        }\\n                    }\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n                    mutation ($_id: [ID]!) {\\n                        deleteCategory(_id: $_id) {\\n                             data\\n                        }\\n                    }\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n                    query ($search: String!, $sort: String!, $filter: String!) {\\n                        categorys(search: $search, sort: $sort, filter: $filter) {\\n                            _id\\n                            image\\n                            name\\n                            status\\n                            updatedAt\\n                          }\\n                          sortCategory {\\n                           name\\n                            field\\n                          }\\n                          filterCategory {\\n                           name\\n                           value\\n                          }\\n                    }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from 'apollo-boost';\nimport { SingletonApolloClient } from '../singleton/client';\nimport { SingletonStore } from '../singleton/store';\nexport var getCategorys =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var search, sort, filter, client, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            search = _ref.search, sort = _ref.sort, filter = _ref.filter;\n            _context.prev = 1;\n            client = new SingletonApolloClient().getClient();\n            _context.next = 5;\n            return client.readQuery({\n              variables: {\n                search: search,\n                sort: sort,\n                filter: filter\n              },\n              query: gql(_templateObject())\n            });\n\n          case 5:\n            res = _context.sent;\n            console.log(res);\n            return _context.abrupt(\"return\", res.data);\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            console.error(_context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 10]]);\n  }));\n\n  return function getCategorys(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var deleteCategory =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(ids) {\n    var client;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            client = new SingletonApolloClient().getClient();\n            _context2.next = 4;\n            return client.mutate({\n              variables: {\n                _id: ids\n              },\n              mutation: gql(_templateObject2())\n            });\n\n          case 4:\n            _context2.next = 6;\n            return getCategorys(new SingletonStore().getStore().getState().app);\n\n          case 6:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 9]]);\n  }));\n\n  return function deleteCategory(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var onoffCategory =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(ids) {\n    var client;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            client = new SingletonApolloClient().getClient();\n            _context3.next = 4;\n            return client.mutate({\n              variables: {\n                _id: ids\n              },\n              mutation: gql(_templateObject3())\n            });\n\n          case 4:\n            _context3.next = 6;\n            return getCategorys(new SingletonStore().getStore().getState().app);\n\n          case 6:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error(_context3.t0);\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 9]]);\n  }));\n\n  return function onoffCategory(_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var addCategory =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(element) {\n    var client;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            client = new SingletonApolloClient().getClient();\n            _context4.next = 4;\n            return client.mutate({\n              variables: element,\n              mutation: gql(_templateObject4())\n            });\n\n          case 4:\n            _context4.next = 6;\n            return getCategorys(new SingletonStore().getStore().getState().app);\n\n          case 6:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.error(_context4.t0);\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 9]]);\n  }));\n\n  return function addCategory(_x4) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var setCategory =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(element) {\n    var client;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            client = new SingletonApolloClient().getClient();\n            _context5.next = 4;\n            return client.mutate({\n              variables: element,\n              mutation: gql(_templateObject5())\n            });\n\n          case 4:\n            _context5.next = 6;\n            return getCategorys(new SingletonStore().getStore().getState().app);\n\n          case 6:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 9:\n            _context5.prev = 9;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.error(_context5.t0);\n\n          case 12:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 9]]);\n  }));\n\n  return function setCategory(_x5) {\n    return _ref6.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\src\\gql\\category.js"],"names":["gql","SingletonApolloClient","SingletonStore","getCategorys","search","sort","filter","client","getClient","readQuery","variables","query","res","console","log","data","error","deleteCategory","ids","mutate","_id","mutation","getStore","getState","app","onoffCategory","addCategory","element","setCategory"],"mappings":"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","sourcesContent":["import { gql } from 'apollo-boost';\r\nimport { SingletonApolloClient } from '../singleton/client';\r\nimport { SingletonStore } from '../singleton/store';\r\n\r\nexport const getCategorys = async({search: search, sort: sort, filter: filter})=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        let res = await client\r\n            .readQuery({\r\n                variables: {search: search, sort: sort, filter: filter},\r\n                query: gql`\r\n                    query ($search: String!, $sort: String!, $filter: String!) {\r\n                        categorys(search: $search, sort: $sort, filter: $filter) {\r\n                            _id\r\n                            image\r\n                            name\r\n                            status\r\n                            updatedAt\r\n                          }\r\n                          sortCategory {\r\n                           name\r\n                            field\r\n                          }\r\n                          filterCategory {\r\n                           name\r\n                           value\r\n                          }\r\n                    }`,\r\n            })\r\n        console.log(res)\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const deleteCategory = async(ids)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {_id: ids},\r\n            mutation : gql`\r\n                    mutation ($_id: [ID]!) {\r\n                        deleteCategory(_id: $_id) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        return await getCategorys(new SingletonStore().getStore().getState().app)\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const onoffCategory = async(ids)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {_id: ids},\r\n            mutation : gql`\r\n                    mutation ($_id: [ID]!) {\r\n                        onoffCategory(_id: $_id) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        return await getCategorys(new SingletonStore().getStore().getState().app)\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const addCategory = async(element)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: element,\r\n            mutation : gql`\r\n                    mutation ($image: Upload!, $name: String!) {\r\n                        addCategory(image: $image, name: $name) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        return await getCategorys(new SingletonStore().getStore().getState().app)\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const setCategory = async(element)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: element,\r\n            mutation : gql`\r\n                    mutation ($_id: ID!, $image: Upload, $name: String) {\r\n                        setCategory(_id: $_id, image: $image, name: $name) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        return await getCategorys(new SingletonStore().getStore().getState().app)\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}