{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n                    mutation ($_id: ID!, $image: Upload, $text: String, $title: String) {\\n                        setBlog(_id: $_id, image: $image, text: $text, title: $title) {\\n                             data\\n                        }\\n                    }\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n                    mutation ($image: Upload!, $text: String!, $title: String!) {\\n                        addBlog(image: $image, text: $text, title: $title) {\\n                             data\\n                        }\\n                    }\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n                    mutation ($_id: [ID]!) {\\n                        deleteBlog(_id: $_id) {\\n                             data\\n                        }\\n                    }\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n                    query ($search: String!, $sort: String!, $filter: String!) {\\n                        blogs(search: $search, sort: $sort, filter: $filter) {\\n                            _id\\n                            image\\n                            text\\n                            title\\n                            createdAt\\n                          }\\n                          sortBlog {\\n                           name\\n                            field\\n                          }\\n                          filterBlog {\\n                           name\\n                           value\\n                          }\\n                    }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from 'apollo-boost';\nimport { SingletonApolloClient } from '../singleton/client';\nimport { SingletonStore } from '../singleton/store';\nexport var getBlogs =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var search, sort, filter, client, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            search = _ref.search, sort = _ref.sort, filter = _ref.filter;\n            _context.prev = 1;\n            client = new SingletonApolloClient().getClient();\n            _context.next = 5;\n            return client.query({\n              variables: {\n                search: search,\n                sort: sort,\n                filter: filter\n              },\n              query: gql(_templateObject())\n            });\n\n          case 5:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res.data);\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            console.error(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 9]]);\n  }));\n\n  return function getBlogs(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var deleteBlog =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(ids) {\n    var client;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            client = new SingletonApolloClient().getClient();\n            _context2.next = 4;\n            return client.mutate({\n              variables: {\n                _id: ids\n              },\n              mutation: gql(_templateObject2())\n            });\n\n          case 4:\n            _context2.next = 6;\n            return getBlogs(new SingletonStore().getStore().getState().app);\n\n          case 6:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 9]]);\n  }));\n\n  return function deleteBlog(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var addBlog =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(element) {\n    var client, list;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            client = new SingletonApolloClient().getClient();\n            _context3.next = 4;\n            return client.mutate({\n              variables: element,\n              mutation: gql(_templateObject3())\n            });\n\n          case 4:\n            _context3.next = 6;\n            return getBlogs(new SingletonStore().getStore().getState().app);\n\n          case 6:\n            list = _context3.sent;\n            return _context3.abrupt(\"return\", list);\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error(_context3.t0);\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 10]]);\n  }));\n\n  return function addBlog(_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var setBlog =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(element) {\n    var client, list;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            client = new SingletonApolloClient().getClient();\n            _context4.next = 4;\n            return client.mutate({\n              variables: element,\n              mutation: gql(_templateObject4())\n            });\n\n          case 4:\n            _context4.next = 6;\n            return getBlogs(new SingletonStore().getStore().getState().app);\n\n          case 6:\n            list = _context4.sent;\n            return _context4.abrupt(\"return\", list);\n\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.error(_context4.t0);\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 10]]);\n  }));\n\n  return function setBlog(_x4) {\n    return _ref5.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\src\\gql\\blog.js"],"names":["gql","SingletonApolloClient","SingletonStore","getBlogs","search","sort","filter","client","getClient","query","variables","res","data","console","error","deleteBlog","ids","mutate","_id","mutation","getStore","getState","app","addBlog","element","list","setBlog"],"mappings":"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","sourcesContent":["import { gql } from 'apollo-boost';\r\nimport { SingletonApolloClient } from '../singleton/client';\r\nimport { SingletonStore } from '../singleton/store';\r\n\r\nexport const getBlogs = async({search: search, sort: sort, filter: filter})=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        let res = await client\r\n            .query({\r\n                variables: {search: search, sort: sort, filter: filter},\r\n                query: gql`\r\n                    query ($search: String!, $sort: String!, $filter: String!) {\r\n                        blogs(search: $search, sort: $sort, filter: $filter) {\r\n                            _id\r\n                            image\r\n                            text\r\n                            title\r\n                            createdAt\r\n                          }\r\n                          sortBlog {\r\n                           name\r\n                            field\r\n                          }\r\n                          filterBlog {\r\n                           name\r\n                           value\r\n                          }\r\n                    }`,\r\n            })\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const deleteBlog = async(ids)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {_id: ids},\r\n            mutation : gql`\r\n                    mutation ($_id: [ID]!) {\r\n                        deleteBlog(_id: $_id) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        return await getBlogs(new SingletonStore().getStore().getState().app)\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const addBlog = async(element)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: element,\r\n            mutation : gql`\r\n                    mutation ($image: Upload!, $text: String!, $title: String!) {\r\n                        addBlog(image: $image, text: $text, title: $title) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        let list = await getBlogs(new SingletonStore().getStore().getState().app)\r\n        return list\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const setBlog = async(element)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: element,\r\n            mutation : gql`\r\n                    mutation ($_id: ID!, $image: Upload, $text: String, $title: String) {\r\n                        setBlog(_id: $_id, image: $image, text: $text, title: $title) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        let list = await getBlogs(new SingletonStore().getStore().getState().app)\r\n        return list\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}