{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n                    mutation ($_id: ID!, $stock: Int, $deliveryDays: [String], $name: String, $image: Upload, $info: String, $price: Int, $subCategory: ID, $organization: ID, $hit: Boolean, $latest: Boolean) {\\n                        setItem(_id: $_id, stock: $stock, deliveryDays: $deliveryDays, name: $name, image: $image, info: $info, price: $price, subCategory: $subCategory, organization: $organization, hit: $hit, latest: $latest) {\\n                             data\\n                        }\\n                    }\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n                    mutation ($stock: Int!, $deliveryDays: [String], $name: String!, $image: Upload, $info: String!, $price: Int!, $subCategory: ID!, $organization: ID!, $hit: Boolean!, $latest: Boolean!) {\\n                        addItem(stock: $stock, deliveryDays: $deliveryDays, name: $name, image: $image, info: $info, price: $price, subCategory: $subCategory, organization: $organization, hit: $hit, latest: $latest) {\\n                             data\\n                        }\\n                    }\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n                    mutation ($_id: [ID]!) {\\n                        addFavoriteItem(_id: $_id) {\\n                             data\\n                        }\\n                    }\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n                    mutation ($_id: [ID]!) {\\n                        favoriteItem(_id: $_id) {\\n                             data\\n                        }\\n                    }\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n                    mutation ($_id: [ID]!) {\\n                        onoffItem(_id: $_id) {\\n                             data\\n                        }\\n                    }\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n                    mutation ($_id: [ID]!) {\\n                        deleteItem(_id: $_id) {\\n                             data\\n                        }\\n                    }\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n                    query ($_id: ID!) {\\n                        item(_id: $_id) {\\n                            _id\\n                            subCategory\\n                                {\\n                                    _id \\n                                    name \\n                                    category\\n                                        {_id name}\\n                                }\\n                            name\\n                            status\\n                            createdAt                  \\n                            stock\\n                            image\\n                            info\\n                            price\\n                            reiting\\n                            organization\\n                                {_id name minimumOrder}\\n                            hit\\n                            latest\\n                            favorite\\n                            basket\\n                            deliveryDays\\n                        }\\n                    }\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n                    query ($search: String!) {\\n                        favorites(search: $search) {\\n                            _id\\n                            subCategory\\n                                {_id name}\\n                            name\\n                            status\\n                            createdAt                  \\n                            stock\\n                            image\\n                            info\\n                            price\\n                            reiting\\n                            organization\\n                                {_id name}\\n                            hit\\n                            latest\\n                            favorite\\n                            basket\\n                        }\\n                    }\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n                    query ($organization: ID!,$search: String!, $sort: String!) {\\n                        brands(organization: $organization, search: $search, sort: $sort) {\\n                            _id\\n                            subCategory\\n                                {_id name}\\n                            name\\n                            status\\n                            createdAt                  \\n                            stock\\n                            image\\n                            info\\n                            price\\n                            reiting\\n                            organization\\n                                {_id name info image}\\n                            hit\\n                            latest\\n                            favorite\\n                            basket\\n                        }\\n                        sortItem {\\n                            name\\n                            field\\n                        }\\n                    }\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n                    query ($subCategory: ID!,$search: String!, $sort: String!, $filter: String!) {\\n                        items(subCategory: $subCategory, search: $search, sort: $sort, filter: $filter) {\\n                            _id\\n                            subCategory\\n                                {_id name}\\n                            name\\n                            status\\n                            createdAt                  \\n                            stock\\n                            image\\n                            info\\n                            price\\n                            reiting\\n                            organization\\n                                {_id name}\\n                            hit\\n                            latest\\n                            favorite\\n                            basket\\n                        }\\n                        sortItem {\\n                            name\\n                            field\\n                        }\\n                        filterItem {\\n                           name\\n                           value\\n                        }\\n                        subCategory(_id: $subCategory) {\\n                           _id\\n                           name\\n                           category\\n                                {_id name}\\n                          }\\n                    }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from 'apollo-boost';\nimport { SingletonApolloClient } from '../singleton/client';\nimport { SingletonStore } from '../singleton/store';\nexport var getItems =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref) {\n    var subCategory, search, sort, filter, client, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            subCategory = _ref.subCategory, search = _ref.search, sort = _ref.sort, filter = _ref.filter;\n            _context.prev = 1;\n            client = new SingletonApolloClient().getClient();\n            _context.next = 5;\n            return client.query({\n              variables: {\n                subCategory: subCategory,\n                search: search,\n                sort: sort,\n                filter: filter\n              },\n              query: gql(_templateObject())\n            });\n\n          case 5:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res.data);\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            console.error(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 9]]);\n  }));\n\n  return function getItems(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getBrands =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(_ref3) {\n    var organization, search, sort, filter, client, res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            organization = _ref3.organization, search = _ref3.search, sort = _ref3.sort, filter = _ref3.filter;\n            _context2.prev = 1;\n            client = new SingletonApolloClient().getClient();\n            _context2.next = 5;\n            return client.query({\n              variables: {\n                organization: organization,\n                search: search,\n                sort: sort,\n                filter: filter\n              },\n              query: gql(_templateObject2())\n            });\n\n          case 5:\n            res = _context2.sent;\n            return _context2.abrupt(\"return\", res.data);\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.error(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 9]]);\n  }));\n\n  return function getBrands(_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var favorites =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(_ref5) {\n    var search, client, res;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            search = _ref5.search;\n            _context3.prev = 1;\n            client = new SingletonApolloClient().getClient();\n            _context3.next = 5;\n            return client.query({\n              variables: {\n                search: search\n              },\n              query: gql(_templateObject3())\n            });\n\n          case 5:\n            res = _context3.sent;\n            return _context3.abrupt(\"return\", res.data);\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](1);\n            console.error(_context3.t0);\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 9]]);\n  }));\n\n  return function favorites(_x3) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var getItem =\n/*#__PURE__*/\nfunction () {\n  var _ref8 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(_ref7) {\n    var _id, client, res;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _id = _ref7._id;\n            _context4.prev = 1;\n            client = new SingletonApolloClient().getClient();\n            _context4.next = 5;\n            return client.query({\n              variables: {\n                _id: _id\n              },\n              query: gql(_templateObject4())\n            });\n\n          case 5:\n            res = _context4.sent;\n            return _context4.abrupt(\"return\", res.data);\n\n          case 9:\n            _context4.prev = 9;\n            _context4.t0 = _context4[\"catch\"](1);\n            console.error(_context4.t0);\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 9]]);\n  }));\n\n  return function getItem(_x4) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nexport var deleteItem =\n/*#__PURE__*/\nfunction () {\n  var _ref9 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(ids, subCategory) {\n    var client;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            client = new SingletonApolloClient().getClient();\n            _context5.next = 4;\n            return client.mutate({\n              variables: {\n                _id: ids\n              },\n              mutation: gql(_templateObject5())\n            });\n\n          case 4:\n            _context5.next = 6;\n            return getItems(_objectSpread({\n              subCategory: subCategory\n            }, new SingletonStore().getStore().getState().app));\n\n          case 6:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 9:\n            _context5.prev = 9;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.error(_context5.t0);\n\n          case 12:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 9]]);\n  }));\n\n  return function deleteItem(_x5, _x6) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nexport var onoffItem =\n/*#__PURE__*/\nfunction () {\n  var _ref10 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(ids) {\n    var client;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            client = new SingletonApolloClient().getClient();\n            _context6.next = 4;\n            return client.mutate({\n              variables: {\n                _id: ids\n              },\n              mutation: gql(_templateObject6())\n            });\n\n          case 4:\n            _context6.next = 9;\n            break;\n\n          case 6:\n            _context6.prev = 6;\n            _context6.t0 = _context6[\"catch\"](0);\n            console.error(_context6.t0);\n\n          case 9:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[0, 6]]);\n  }));\n\n  return function onoffItem(_x7) {\n    return _ref10.apply(this, arguments);\n  };\n}();\nexport var favoriteItem =\n/*#__PURE__*/\nfunction () {\n  var _ref11 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(ids) {\n    var client;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            client = new SingletonApolloClient().getClient();\n            _context7.next = 4;\n            return client.mutate({\n              variables: {\n                _id: ids\n              },\n              mutation: gql(_templateObject7())\n            });\n\n          case 4:\n            _context7.next = 9;\n            break;\n\n          case 6:\n            _context7.prev = 6;\n            _context7.t0 = _context7[\"catch\"](0);\n            console.error(_context7.t0);\n\n          case 9:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[0, 6]]);\n  }));\n\n  return function favoriteItem(_x8) {\n    return _ref11.apply(this, arguments);\n  };\n}();\nexport var addFavoriteItem =\n/*#__PURE__*/\nfunction () {\n  var _ref12 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee8(ids) {\n    var client;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            client = new SingletonApolloClient().getClient();\n            _context8.next = 4;\n            return client.mutate({\n              variables: {\n                _id: ids\n              },\n              mutation: gql(_templateObject8())\n            });\n\n          case 4:\n            _context8.next = 9;\n            break;\n\n          case 6:\n            _context8.prev = 6;\n            _context8.t0 = _context8[\"catch\"](0);\n            console.error(_context8.t0);\n\n          case 9:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[0, 6]]);\n  }));\n\n  return function addFavoriteItem(_x9) {\n    return _ref12.apply(this, arguments);\n  };\n}();\nexport var addItem =\n/*#__PURE__*/\nfunction () {\n  var _ref13 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee9(element, subCategory) {\n    var client;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.prev = 0;\n            client = new SingletonApolloClient().getClient();\n            _context9.next = 4;\n            return client.mutate({\n              variables: _objectSpread({}, element, {\n                subCategory: subCategory\n              }),\n              mutation: gql(_templateObject9())\n            });\n\n          case 4:\n            _context9.next = 9;\n            break;\n\n          case 6:\n            _context9.prev = 6;\n            _context9.t0 = _context9[\"catch\"](0);\n            console.error(_context9.t0);\n\n          case 9:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[0, 6]]);\n  }));\n\n  return function addItem(_x10, _x11) {\n    return _ref13.apply(this, arguments);\n  };\n}();\nexport var setItem =\n/*#__PURE__*/\nfunction () {\n  var _ref14 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee10(element) {\n    var client;\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.prev = 0;\n            client = new SingletonApolloClient().getClient();\n            _context10.next = 4;\n            return client.mutate({\n              variables: _objectSpread({}, element),\n              mutation: gql(_templateObject10())\n            });\n\n          case 4:\n            _context10.next = 9;\n            break;\n\n          case 6:\n            _context10.prev = 6;\n            _context10.t0 = _context10[\"catch\"](0);\n            console.error(_context10.t0);\n\n          case 9:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[0, 6]]);\n  }));\n\n  return function setItem(_x12) {\n    return _ref14.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\src\\gql\\items.js"],"names":["gql","SingletonApolloClient","SingletonStore","getItems","subCategory","search","sort","filter","client","getClient","query","variables","res","data","console","error","getBrands","organization","favorites","getItem","_id","deleteItem","ids","mutate","mutation","getStore","getState","app","onoffItem","favoriteItem","addFavoriteItem","addItem","element","setItem"],"mappings":"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","sourcesContent":["import { gql } from 'apollo-boost';\r\nimport { SingletonApolloClient } from '../singleton/client';\r\nimport { SingletonStore } from '../singleton/store';\r\n\r\nexport const getItems = async({subCategory,  search,  sort,  filter})=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n\r\n        let res = await client\r\n            .query({\r\n                variables: {subCategory: subCategory, search: search, sort: sort, filter: filter},\r\n                query: gql`\r\n                    query ($subCategory: ID!,$search: String!, $sort: String!, $filter: String!) {\r\n                        items(subCategory: $subCategory, search: $search, sort: $sort, filter: $filter) {\r\n                            _id\r\n                            subCategory\r\n                                {_id name}\r\n                            name\r\n                            status\r\n                            createdAt                  \r\n                            stock\r\n                            image\r\n                            info\r\n                            price\r\n                            reiting\r\n                            organization\r\n                                {_id name}\r\n                            hit\r\n                            latest\r\n                            favorite\r\n                            basket\r\n                        }\r\n                        sortItem {\r\n                            name\r\n                            field\r\n                        }\r\n                        filterItem {\r\n                           name\r\n                           value\r\n                        }\r\n                        subCategory(_id: $subCategory) {\r\n                           _id\r\n                           name\r\n                           category\r\n                                {_id name}\r\n                          }\r\n                    }`,\r\n            })\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const getBrands = async({organization,  search,  sort,  filter})=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        let res = await client\r\n            .query({\r\n                variables: {organization: organization, search: search, sort: sort, filter: filter},\r\n                query: gql`\r\n                    query ($organization: ID!,$search: String!, $sort: String!) {\r\n                        brands(organization: $organization, search: $search, sort: $sort) {\r\n                            _id\r\n                            subCategory\r\n                                {_id name}\r\n                            name\r\n                            status\r\n                            createdAt                  \r\n                            stock\r\n                            image\r\n                            info\r\n                            price\r\n                            reiting\r\n                            organization\r\n                                {_id name info image}\r\n                            hit\r\n                            latest\r\n                            favorite\r\n                            basket\r\n                        }\r\n                        sortItem {\r\n                            name\r\n                            field\r\n                        }\r\n                    }`,\r\n            })\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const favorites = async({ search})=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        let res = await client\r\n            .query({\r\n                variables: { search: search },\r\n                query: gql`\r\n                    query ($search: String!) {\r\n                        favorites(search: $search) {\r\n                            _id\r\n                            subCategory\r\n                                {_id name}\r\n                            name\r\n                            status\r\n                            createdAt                  \r\n                            stock\r\n                            image\r\n                            info\r\n                            price\r\n                            reiting\r\n                            organization\r\n                                {_id name}\r\n                            hit\r\n                            latest\r\n                            favorite\r\n                            basket\r\n                        }\r\n                    }`,\r\n            })\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const getItem = async({_id})=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        let res = await client\r\n            .query({\r\n                variables: {_id: _id},\r\n                query: gql`\r\n                    query ($_id: ID!) {\r\n                        item(_id: $_id) {\r\n                            _id\r\n                            subCategory\r\n                                {\r\n                                    _id \r\n                                    name \r\n                                    category\r\n                                        {_id name}\r\n                                }\r\n                            name\r\n                            status\r\n                            createdAt                  \r\n                            stock\r\n                            image\r\n                            info\r\n                            price\r\n                            reiting\r\n                            organization\r\n                                {_id name minimumOrder}\r\n                            hit\r\n                            latest\r\n                            favorite\r\n                            basket\r\n                            deliveryDays\r\n                        }\r\n                    }`,\r\n            })\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const deleteItem = async(ids, subCategory)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {_id: ids},\r\n            mutation : gql`\r\n                    mutation ($_id: [ID]!) {\r\n                        deleteItem(_id: $_id) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        return await getItems({subCategory: subCategory, ...(new SingletonStore().getStore().getState().app)})\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const onoffItem = async(ids)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {_id: ids},\r\n            mutation : gql`\r\n                    mutation ($_id: [ID]!) {\r\n                        onoffItem(_id: $_id) {\r\n                             data\r\n                        }\r\n                    }`})\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const favoriteItem = async(ids)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {_id: ids},\r\n            mutation : gql`\r\n                    mutation ($_id: [ID]!) {\r\n                        favoriteItem(_id: $_id) {\r\n                             data\r\n                        }\r\n                    }`})\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const addFavoriteItem = async(ids)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {_id: ids},\r\n            mutation : gql`\r\n                    mutation ($_id: [ID]!) {\r\n                        addFavoriteItem(_id: $_id) {\r\n                             data\r\n                        }\r\n                    }`})\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const addItem = async(element, subCategory)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {...element, subCategory: subCategory},\r\n            mutation : gql`\r\n                    mutation ($stock: Int!, $deliveryDays: [String], $name: String!, $image: Upload, $info: String!, $price: Int!, $subCategory: ID!, $organization: ID!, $hit: Boolean!, $latest: Boolean!) {\r\n                        addItem(stock: $stock, deliveryDays: $deliveryDays, name: $name, image: $image, info: $info, price: $price, subCategory: $subCategory, organization: $organization, hit: $hit, latest: $latest) {\r\n                             data\r\n                        }\r\n                    }`})\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const setItem = async(element)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {...element},\r\n            mutation : gql`\r\n                    mutation ($_id: ID!, $stock: Int, $deliveryDays: [String], $name: String, $image: Upload, $info: String, $price: Int, $subCategory: ID, $organization: ID, $hit: Boolean, $latest: Boolean) {\r\n                        setItem(_id: $_id, stock: $stock, deliveryDays: $deliveryDays, name: $name, image: $image, info: $info, price: $price, subCategory: $subCategory, organization: $organization, hit: $hit, latest: $latest) {\r\n                             data\r\n                        }\r\n                    }`})\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}