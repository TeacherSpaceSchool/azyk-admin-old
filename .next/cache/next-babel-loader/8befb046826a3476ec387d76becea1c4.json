{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\components\\\\order\\\\CardOrder.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport cardOrderStyle from '../../src/styleMUI/orders/cardOrder';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport dynamic from 'next/dynamic';\nimport { pdDDMMYYHHMM } from '../../src/lib';\nvar Order = dynamic(function () {\n  return import('../dialog/Order');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../dialog/Order')];\n    },\n    modules: ['../dialog/Order']\n  }\n});\nvar CardOrder = React.memo(function (props) {\n  var classes = cardOrderStyle();\n  var element = props.element,\n      setList = props.setList,\n      route = props.route,\n      getInvoices = props.getInvoices;\n  var _props$mini_dialogAct = props.mini_dialogActions,\n      setMiniDialog = _props$mini_dialogAct.setMiniDialog,\n      showMiniDialog = _props$mini_dialogAct.showMiniDialog;\n  var statusColor = {\n    'обработка': 'orange',\n    'принят': 'blue',\n    'выполнен': 'green',\n    'отмена': 'red'\n  };\n  return __jsx(Card, {\n    className: classes.card,\n    onClick: function onClick() {\n      setMiniDialog('Заказ', __jsx(Order, {\n        getInvoices: getInvoices,\n        route: route,\n        element: element,\n        setList: setList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(CardContent, {\n    className: classes.column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.number,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, element.number), \"\\xA0\", __jsx(\"div\", {\n    className: classes.date,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, pdDDMMYYHHMM(new Date(element.updatedAt))), \"\\xA0\\xA0\", __jsx(\"div\", {\n    className: classes.status,\n    style: {\n      background: statusColor[element.orders[0].status]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, element.orders[0].status === 'принят' && (element.confirmationForwarder || element.confirmationClient) ? element.confirmationClient ? 'подтвержден клиентом' : element.confirmationForwarder ? 'доставлен поставщиком' : element.orders[0].status : element.orders[0].status)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"\\u0410\\u0434\\u0440\\u0435\\u0441:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, element.address)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0430\\u0442\\u0435\\u043B\\u044C:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, element.client.name)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"\\u041F\\u043E\\u0441\\u0442\\u0430\\u0432\\u0449\\u0438\\u043A:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, element.orders[0].item.organization.name)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"\\u0421\\u0443\\u043C\\u043C\\u0430:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, element.allPrice, \"\\xA0\\u0441\\u043E\\u043C\")))));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardOrder);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\order\\CardOrder.js"],"names":["React","Card","CardActionArea","CardContent","cardOrderStyle","connect","bindActionCreators","mini_dialogActions","snackbarActions","dynamic","pdDDMMYYHHMM","Order","CardOrder","memo","props","classes","element","setList","route","getInvoices","setMiniDialog","showMiniDialog","statusColor","card","column","row","number","date","Date","updatedAt","status","background","orders","confirmationForwarder","confirmationClient","nameField","value","address","client","name","item","organization","allPrice","mapStateToProps","state","user","app","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport cardOrderStyle from '../../src/styleMUI/orders/cardOrder'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport dynamic from 'next/dynamic'\r\nimport { pdDDMMYYHHMM } from '../../src/lib'\r\n\r\nconst Order = dynamic(\r\n    () => import('../dialog/Order')\r\n)\r\n\r\nconst CardOrder = React.memo((props) => {\r\n    const classes = cardOrderStyle();\r\n    const { element, setList, route, getInvoices } = props;\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    const statusColor = {\r\n        'обработка': 'orange',\r\n        'принят': 'blue',\r\n        'выполнен': 'green',\r\n        'отмена': 'red'\r\n    }\r\n    return (\r\n        <Card className={classes.card} onClick={()=>{setMiniDialog('Заказ', <Order getInvoices={getInvoices} route={route} element={element} setList={setList}/>); showMiniDialog(true)}}>\r\n            <CardActionArea>\r\n                <CardContent className={classes.column}>\r\n                    <div className={classes.row}>\r\n                        <div className={classes.number}>{element.number}</div>&nbsp;\r\n                        <div className={classes.date}>{pdDDMMYYHHMM(new Date(element.updatedAt))}</div>&nbsp;&nbsp;\r\n                        <div className={classes.status} style={{background: statusColor[element.orders[0].status]}}>{\r\n                            element.orders[0].status==='принят'&&(element.confirmationForwarder||element.confirmationClient)?\r\n                                element.confirmationClient?\r\n                                    'подтвержден клиентом'\r\n                                    :\r\n                                    element.confirmationForwarder?\r\n                                        'доставлен поставщиком'\r\n                                        :\r\n                                        element.orders[0].status\r\n                                :\r\n                                element.orders[0].status\r\n                        }</div>\r\n                    </div>\r\n                    <div className={classes.row}>\r\n                        <div className={classes.nameField}>Адрес:&nbsp;</div>\r\n                        <div className={classes.value}>{element.address}</div>\r\n                    </div>\r\n                    <div className={classes.row}>\r\n                        <div className={classes.nameField}>Получатель:&nbsp;</div>\r\n                        <div className={classes.value}>{element.client.name}</div>\r\n                    </div>\r\n                    <div className={classes.row}>\r\n                        <div className={classes.nameField}>Поставщик:&nbsp;</div>\r\n                        <div className={classes.value}>{element.orders[0].item.organization.name}</div>\r\n                    </div>\r\n                    <div className={classes.row}>\r\n                        <div className={classes.nameField}>Сумма:&nbsp;</div>\r\n                        <div className={classes.value}>{element.allPrice}&nbsp;сом</div>\r\n                    </div>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n})\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardOrder)"]},"metadata":{},"sourceType":"module"}