{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport cardOrganizationStyle from '../../src/styleMUI/organization/cardOrganization.js';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport Button from '@material-ui/core/Button';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport { onoffOrganization, deleteOrganization } from '../../src/gql/organization';\nimport Confirmation from '../../components/dialog/Confirmation';\nconst CardOrganization = React.memo(props => {\n  const classes = cardOrganizationStyle();\n  const {\n    element,\n    setList\n  } = props;\n  const {\n    isMobileApp\n  } = props.app;\n  const {\n    profile\n  } = props.user;\n  const {\n    setMiniDialog,\n    showMiniDialog\n  } = props.mini_dialogActions;\n  let {\n    0: status,\n    1: setStatus\n  } = useState(element !== undefined ? element.status : '');\n  return __jsx(Card, {\n    className: isMobileApp ? classes.cardM : classes.cardD\n  }, __jsx(CardActionArea, null, __jsx(Link, {\n    href: \"/organization/[id]\",\n    as: `/organization/${element._id}`\n  }, __jsx(\"div\", {\n    className: classes.line\n  }, __jsx(\"img\", {\n    className: classes.mediaO,\n    src: element.image,\n    alt: element.name\n  }), __jsx(\"h3\", {\n    className: isMobileApp ? classes.inputM : classes.inputD\n  }, element.name)))), profile.role === 'admin' ? __jsx(CardActions, null, __jsx(Button, {\n    onClick: async () => {\n      const action = async () => {\n        await onoffOrganization([element._id]);\n        setStatus(status === 'active' ? 'deactive' : 'active');\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\"\n  }, status === 'active' ? 'Отключить' : 'Включить'), __jsx(Button, {\n    onClick: async () => {\n      const action = async () => {\n        const list = (await deleteOrganization([element._id])).organizations;\n        setList(list);\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\"\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")) : null);\n});\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardOrganization);","map":null,"metadata":{},"sourceType":"module"}