{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\components\\\\dialog\\\\Order.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { cancelOrders, approveOrders, setOrder } from '../../src/gql/order';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport * as userActions from '../../redux/actions/user';\nimport Button from '@material-ui/core/Button';\nimport dialogContentStyle from '../../src/styleMUI/dialogContent';\nimport { pdDDMMYYHHMM } from '../../src/lib';\nimport Confirmation from './Confirmation';\nimport Geo from '../../components/dialog/Geo';\nimport IconButton from '@material-ui/core/IconButton';\nimport CancelIcon from '@material-ui/icons/Cancel';\nconst Order = React.memo(props => {\n  const {\n    isMobileApp\n  } = props.app;\n  const {\n    profile\n  } = props.user;\n  const {\n    showMiniDialog,\n    setMiniDialog\n  } = props.mini_dialogActions;\n  const {\n    classes,\n    element,\n    setList,\n    route,\n    getInvoices\n  } = props;\n  let {\n    0: orders,\n    1: setOrders\n  } = useState(element.orders);\n  let {\n    0: allPrice,\n    1: setAllPrice\n  } = useState(element.allPrice);\n  const width = isMobileApp ? window.innerWidth - 144 : 500;\n  const {\n    showSnackBar\n  } = props.snackbarActions;\n\n  let canculateAllPrice = () => {\n    allPrice = 0;\n\n    for (let i = 0; i < orders.length; i++) {\n      allPrice += orders[i].allPrice;\n    }\n\n    if (element.usedBonus && element.usedBonus > 0) allPrice -= element.usedBonus;\n    setAllPrice(allPrice);\n  };\n\n  let increment = idx => {\n    orders[idx].count += 1;\n    orders[idx].allPrice = orders[idx].count * (orders[idx].item.stock === 0 || orders[idx].item.stock === undefined ? orders[idx].item.price : orders[idx].item.stock);\n    setOrders([...orders]);\n    canculateAllPrice();\n  };\n\n  let decrement = idx => {\n    if (orders[idx].count > 1) {\n      orders[idx].count -= 1;\n      orders[idx].allPrice = orders[idx].count * (orders[idx].item.stock === 0 || orders[idx].item.stock === undefined ? orders[idx].item.price : orders[idx].item.stock);\n      setOrders([...orders]);\n      canculateAllPrice();\n    }\n  };\n\n  let remove = idx => {\n    if (orders.length > 1) {\n      orders.splice(idx, 1);\n      setOrders([...orders]);\n      canculateAllPrice();\n    } else showSnackBar('Товары не могут отсутствовать в заказе');\n  };\n\n  return __jsx(\"div\", {\n    className: classes.column,\n    style: {\n      width: width\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u043A\\u0430\\u0437 \\u2116:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, element.number)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, element.orders[0].status === 'принят' && (element.confirmationForwarder || element.confirmationClient) ? element.confirmationClient ? 'подтвержден клиентом' : element.confirmationForwarder ? 'доставлен поставщиком' : element.orders[0].status : element.orders[0].status)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"\\u0410\\u0434\\u0440\\u0435\\u0441: \\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, element.address[0])), __jsx(\"div\", {\n    className: classes.geo,\n    style: {\n      color: element.address[1] ? '#ffb300' : 'red'\n    },\n    onClick: () => {\n      setMiniDialog('Геолокация', __jsx(Geo, {\n        geo: element.address[1],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), true);\n      showMiniDialog(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, element.address[1] ? 'Посмотреть геолокацию' : 'Геолокация не задана'), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"\\u0412\\u0440\\u0435\\u043C\\u044F \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430: \\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, pdDDMMYYHHMM(new Date(element.createdAt)))), element.dateDelivery ? __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"\\u0412\\u0440\\u0435\\u043C\\u044F \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0438:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, pdDDMMYYHHMM(new Date(element.dateDelivery)))) : null, __jsx(\"a\", {\n    href: `/client/${element.client.user._id}`,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0430\\u0442\\u0435\\u043B\\u044C:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, element.client.name))), __jsx(\"a\", {\n    href: `/organization/${element.orders[0].item.organization._id}`,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"\\u041F\\u043E\\u0441\\u0442\\u0430\\u0432\\u0449\\u0438\\u043A:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, element.orders[0].item.organization.name))), element.usedBonus && element.usedBonus > 0 ? __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"\\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0439 \\u0431\\u043E\\u043D\\u0443\\u0441:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, element.usedBonus, \"\\xA0\\u0441\\u043E\\u043C\")) : null, __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"\\u0421\\u0443\\u043C\\u043C\\u0430:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, allPrice, \"\\xA0\\u0441\\u043E\\u043C\")), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"\\u0421\\u043F\\u043E\\u0441\\u043E\\u0431 \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, element.paymentMethod)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, element.info)), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"\\u0422\\u043E\\u0432\\u0430\\u0440\\u044B:\"), orders.map((order, idx) => {\n    if (element.orders[0].status === 'обработка' && (profile.role === 'client' || ['менеджер', 'организация'].includes(profile.role) || profile.role === 'admin')) return __jsx(\"div\", {\n      key: idx,\n      className: classes.column,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.nameField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"\\u0422\\u043E\\u0432\\u0430\\u0440:\\xA0\"), __jsx(\"a\", {\n      href: `/item/${order.item._id}`,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, order.item.name)), __jsx(IconButton, {\n      onClick: () => {\n        remove(idx);\n      },\n      color: \"primary\",\n      className: classes.button,\n      \"aria-label\": \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, __jsx(CancelIcon, {\n      style: {\n        height: 20,\n        width: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: classes.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.nameField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E:\\xA0\"), __jsx(\"div\", {\n      className: classes.counterbtn,\n      onClick: () => {\n        decrement(idx);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"-\"), __jsx(\"div\", {\n      className: classes.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, order.count, \"\\xA0\\u0448\\u0442\"), __jsx(\"div\", {\n      className: classes.counterbtn,\n      onClick: () => {\n        increment(idx);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"+\")), __jsx(\"div\", {\n      className: classes.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.nameField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"\\u041E\\u0431\\u0449\\u0430\\u044F \\u0441\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C:\\xA0\"), __jsx(\"div\", {\n      className: classes.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, order.allPrice, \"\\xA0\\u0441\\u043E\\u043C\")), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }));else return __jsx(\"div\", {\n      key: idx,\n      className: classes.column,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: `/item/${order.item._id}`,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.nameField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"\\u0422\\u043E\\u0432\\u0430\\u0440:\\xA0\"), __jsx(\"div\", {\n      className: classes.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, order.item.name))), __jsx(\"div\", {\n      className: classes.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.nameField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E:\\xA0\"), __jsx(\"div\", {\n      className: classes.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, order.count, \"\\xA0\\u0448\\u0442\")), __jsx(\"div\", {\n      className: classes.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.nameField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"\\u041E\\u0431\\u0449\\u0430\\u044F \\u0441\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C:\\xA0\"), __jsx(\"div\", {\n      className: classes.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, order.allPrice, \"\\xA0\\u0441\\u043E\\u043C\")), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }));\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, element.orders[0].status === 'обработка' && (profile.role === 'client' || ['менеджер', 'организация'].includes(profile.role) || profile.role === 'admin') ? __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => {\n      const action = async () => {\n        let sendOrders = orders.map(order => {\n          return {\n            _id: order._id,\n            count: order.count,\n            allPrice: order.allPrice,\n            status: order.status\n          };\n        });\n        let invoices = (await setOrder({\n          orders: sendOrders,\n          invoice: element._id\n        })).invoices;\n        if (setList) setList(invoices);\n        if (getInvoices) getInvoices();\n        showMiniDialog(false);\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }));\n    },\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\") : null, profile.role === 'client' && 'принят' === element.orders[0].status && !element.confirmationClient || ['менеджер', 'организация'].includes(profile.role) && 'принят' === element.orders[0].status && !element.confirmationForwarder || profile.role === 'admin' ? __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => {\n      const action = async () => {\n        let invoices = (await approveOrders({\n          route: route,\n          invoices: [element._id]\n        })).invoices;\n        if (setList) setList(invoices);\n        if (getInvoices) getInvoices();\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }));\n    },\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u043A\\u0430\\u0437 \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\") : null, profile.role === 'client' && element.orders[0].status === 'обработка' || ['менеджер', 'организация'].includes(profile.role) && ['обработка', 'принят'].includes(element.orders[0].status) && !element.confirmationForwarder || profile.role === 'admin' ? __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => {\n      let _id = element.orders.map(order => order._id);\n\n      const action = async () => {\n        let invoices = (await cancelOrders({\n          _id: _id,\n          invoice: element._id\n        })).invoices;\n        if (setList) setList(invoices);\n        if (getInvoices) getInvoices();\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }));\n    },\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437\") : null, __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => {\n      showMiniDialog(false);\n    },\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\")));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    mini_dialog: state.mini_dialog,\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    userActions: bindActionCreators(userActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nOrder.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(Order));","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\dialog\\Order.js"],"names":["React","useState","PropTypes","withStyles","connect","bindActionCreators","cancelOrders","approveOrders","setOrder","mini_dialogActions","snackbarActions","userActions","Button","dialogContentStyle","pdDDMMYYHHMM","Confirmation","Geo","IconButton","CancelIcon","Order","memo","props","isMobileApp","app","profile","user","showMiniDialog","setMiniDialog","classes","element","setList","route","getInvoices","orders","setOrders","allPrice","setAllPrice","width","window","innerWidth","showSnackBar","canculateAllPrice","i","length","usedBonus","increment","idx","count","item","stock","undefined","price","decrement","remove","splice","column","row","nameField","value","number","status","confirmationForwarder","confirmationClient","address","geo","color","Date","createdAt","dateDelivery","client","_id","name","organization","paymentMethod","info","map","order","role","includes","button","height","counterbtn","action","sendOrders","invoices","invoice","mapStateToProps","state","mini_dialog","mapDispatchToProps","dispatch","propTypes","object","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,QAAtC,QAAsD,qBAAtD;AACA,OAAO,KAAKC,kBAAZ,MAAoC,iCAApC;AACA,OAAO,KAAKC,eAAZ,MAAiC,8BAAjC;AACA,OAAO,KAAKC,WAAZ,MAA6B,0BAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,6BAAhB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,MAAMC,KAAK,GAAInB,KAAK,CAACoB,IAAN,CACVC,KAAD,IAAU;AACN,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,KAAK,CAACE,GAA9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcH,KAAK,CAACI,IAA1B;AACA,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAoCN,KAAK,CAACZ,kBAAhD;AACA,QAAM;AAAEmB,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA,KAA7B;AAAoCC,IAAAA;AAApC,MAAoDX,KAA1D;AACA,MAAI;AAAA,OAACY,MAAD;AAAA,OAASC;AAAT,MAAsBjC,QAAQ,CAAC4B,OAAO,CAACI,MAAT,CAAlC;AACA,MAAI;AAAA,OAACE,QAAD;AAAA,OAAWC;AAAX,MAA0BnC,QAAQ,CAAC4B,OAAO,CAACM,QAAT,CAAtC;AACA,QAAME,KAAK,GAAGf,WAAW,GAAGgB,MAAM,CAACC,UAAP,GAAkB,GAArB,GAA4B,GAArD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAmBnB,KAAK,CAACX,eAA/B;;AACA,MAAI+B,iBAAiB,GAAG,MAAI;AACxBN,IAAAA,QAAQ,GAAC,CAAT;;AACA,SAAI,IAAIO,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACT,MAAM,CAACU,MAAtB,EAA8BD,CAAC,EAA/B,EAAkC;AAC9BP,MAAAA,QAAQ,IAAEF,MAAM,CAACS,CAAD,CAAN,CAAUP,QAApB;AACH;;AACD,QAAGN,OAAO,CAACe,SAAR,IAAmBf,OAAO,CAACe,SAAR,GAAkB,CAAxC,EACIT,QAAQ,IAAIN,OAAO,CAACe,SAApB;AACJR,IAAAA,WAAW,CAACD,QAAD,CAAX;AACH,GARD;;AASA,MAAIU,SAAS,GAAIC,GAAD,IAAO;AACnBb,IAAAA,MAAM,CAACa,GAAD,CAAN,CAAYC,KAAZ,IAAmB,CAAnB;AACAd,IAAAA,MAAM,CAACa,GAAD,CAAN,CAAYX,QAAZ,GAAuBF,MAAM,CAACa,GAAD,CAAN,CAAYC,KAAZ,IAAqBd,MAAM,CAACa,GAAD,CAAN,CAAYE,IAAZ,CAAiBC,KAAjB,KAAyB,CAAzB,IAA4BhB,MAAM,CAACa,GAAD,CAAN,CAAYE,IAAZ,CAAiBC,KAAjB,KAAyBC,SAArD,GAA+DjB,MAAM,CAACa,GAAD,CAAN,CAAYE,IAAZ,CAAiBG,KAAhF,GAAsFlB,MAAM,CAACa,GAAD,CAAN,CAAYE,IAAZ,CAAiBC,KAA5H,CAAvB;AACAf,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,CAAD,CAAT;AACAQ,IAAAA,iBAAiB;AACpB,GALD;;AAMA,MAAIW,SAAS,GAAIN,GAAD,IAAO;AACnB,QAAGb,MAAM,CAACa,GAAD,CAAN,CAAYC,KAAZ,GAAkB,CAArB,EAAwB;AACpBd,MAAAA,MAAM,CAACa,GAAD,CAAN,CAAYC,KAAZ,IAAqB,CAArB;AACAd,MAAAA,MAAM,CAACa,GAAD,CAAN,CAAYX,QAAZ,GAAuBF,MAAM,CAACa,GAAD,CAAN,CAAYC,KAAZ,IAAqBd,MAAM,CAACa,GAAD,CAAN,CAAYE,IAAZ,CAAiBC,KAAjB,KAAyB,CAAzB,IAA4BhB,MAAM,CAACa,GAAD,CAAN,CAAYE,IAAZ,CAAiBC,KAAjB,KAAyBC,SAArD,GAA+DjB,MAAM,CAACa,GAAD,CAAN,CAAYE,IAAZ,CAAiBG,KAAhF,GAAsFlB,MAAM,CAACa,GAAD,CAAN,CAAYE,IAAZ,CAAiBC,KAA5H,CAAvB;AACAf,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,CAAD,CAAT;AACAQ,MAAAA,iBAAiB;AACpB;AACJ,GAPD;;AAQA,MAAIY,MAAM,GAAIP,GAAD,IAAO;AAChB,QAAGb,MAAM,CAACU,MAAP,GAAc,CAAjB,EAAoB;AAChBV,MAAAA,MAAM,CAACqB,MAAP,CAAcR,GAAd,EAAmB,CAAnB;AACAZ,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,CAAD,CAAT;AACAQ,MAAAA,iBAAiB;AACpB,KAJD,MAKID,YAAY,CAAC,wCAAD,CAAZ;AACP,GAPD;;AAQA,SACI;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAAC2B,MAAxB;AAAgC,IAAA,KAAK,EAAE;AAAClB,MAAAA,KAAK,EAAEA;AAAR,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAET,OAAO,CAAC4B,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAAC6B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADJ,EAEI;AAAK,IAAA,SAAS,EAAE7B,OAAO,CAAC8B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC7B,OAAO,CAAC8B,MAAxC,CAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAE/B,OAAO,CAAC4B,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAAC6B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADJ,EAEI;AAAK,IAAA,SAAS,EAAE7B,OAAO,CAAC8B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ7B,OAAO,CAACI,MAAR,CAAe,CAAf,EAAkB2B,MAAlB,KAA2B,QAA3B,KAAsC/B,OAAO,CAACgC,qBAAR,IAA+BhC,OAAO,CAACiC,kBAA7E,IACIjC,OAAO,CAACiC,kBAAR,GACI,sBADJ,GAGIjC,OAAO,CAACgC,qBAAR,GACI,uBADJ,GAGIhC,OAAO,CAACI,MAAR,CAAe,CAAf,EAAkB2B,MAP9B,GASI/B,OAAO,CAACI,MAAR,CAAe,CAAf,EAAkB2B,MAV9B,CAFJ,CALJ,EAoBI;AAAK,IAAA,SAAS,EAAEhC,OAAO,CAAC4B,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAAC6B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADJ,EAEI;AAAK,IAAA,SAAS,EAAE7B,OAAO,CAAC8B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC7B,OAAO,CAACkC,OAAR,CAAgB,CAAhB,CAAhC,CAFJ,CApBJ,EAwBI;AAAK,IAAA,SAAS,EAAEnC,OAAO,CAACoC,GAAxB;AAA6B,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAEpC,OAAO,CAACkC,OAAR,CAAgB,CAAhB,IAAmB,SAAnB,GAA6B;AAArC,KAApC;AAAiF,IAAA,OAAO,EAAE,MAAI;AAC1FpC,MAAAA,aAAa,CAAC,YAAD,EAAe,MAAC,GAAD;AAAK,QAAA,GAAG,EAAEE,OAAO,CAACkC,OAAR,CAAgB,CAAhB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf,EAAgD,IAAhD,CAAb;AACArC,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKQG,OAAO,CAACkC,OAAR,CAAgB,CAAhB,IACI,uBADJ,GAGI,sBARZ,CAxBJ,EAmCI;AAAK,IAAA,SAAS,EAAEnC,OAAO,CAAC4B,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAAC6B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFADJ,EAEI;AAAK,IAAA,SAAS,EAAE7B,OAAO,CAAC8B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC5C,YAAY,CAAC,IAAIoD,IAAJ,CAASrC,OAAO,CAACsC,SAAjB,CAAD,CAA5C,CAFJ,CAnCJ,EAwCQtC,OAAO,CAACuC,YAAR,GACI;AAAK,IAAA,SAAS,EAAExC,OAAO,CAAC4B,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAAC6B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4FADJ,EAEI;AAAK,IAAA,SAAS,EAAE7B,OAAO,CAAC8B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC5C,YAAY,CAAC,IAAIoD,IAAJ,CAASrC,OAAO,CAACuC,YAAjB,CAAD,CAA5C,CAFJ,CADJ,GAMI,IA9CZ,EAgDI;AAAG,IAAA,IAAI,EAAG,WAAUvC,OAAO,CAACwC,MAAR,CAAe5C,IAAf,CAAoB6C,GAAI,EAA5C;AAA+C,IAAA,MAAM,EAAC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAE1C,OAAO,CAAC4B,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAAC6B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEADJ,EAEI;AAAK,IAAA,SAAS,EAAE7B,OAAO,CAAC8B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC7B,OAAO,CAACwC,MAAR,CAAeE,IAA/C,CAFJ,CADJ,CAhDJ,EAsDI;AAAG,IAAA,IAAI,EAAG,iBAAgB1C,OAAO,CAACI,MAAR,CAAe,CAAf,EAAkBe,IAAlB,CAAuBwB,YAAvB,CAAoCF,GAAI,EAAlE;AAAqE,IAAA,MAAM,EAAC,QAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAE1C,OAAO,CAAC4B,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAAC6B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEADJ,EAEI;AAAK,IAAA,SAAS,EAAE7B,OAAO,CAAC8B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC7B,OAAO,CAACI,MAAR,CAAe,CAAf,EAAkBe,IAAlB,CAAuBwB,YAAvB,CAAoCD,IAApE,CAFJ,CADJ,CAtDJ,EA6DQ1C,OAAO,CAACe,SAAR,IAAmBf,OAAO,CAACe,SAAR,GAAkB,CAArC,GACI;AAAK,IAAA,SAAS,EAAEhB,OAAO,CAAC4B,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAAC6B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gIADJ,EAEI;AAAK,IAAA,SAAS,EAAE7B,OAAO,CAAC8B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC7B,OAAO,CAACe,SAAxC,2BAFJ,CADJ,GAMI,IAnEZ,EAqEI;AAAK,IAAA,SAAS,EAAEhB,OAAO,CAAC4B,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAAC6B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,EAEI;AAAK,IAAA,SAAS,EAAE7B,OAAO,CAAC8B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCvB,QAAhC,2BAFJ,CArEJ,EAyEI;AAAK,IAAA,SAAS,EAAEP,OAAO,CAAC4B,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAAC6B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFADJ,EAEI;AAAK,IAAA,SAAS,EAAE7B,OAAO,CAAC8B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC7B,OAAO,CAAC4C,aAAxC,CAFJ,CAzEJ,EA6EI;AAAK,IAAA,SAAS,EAAE7C,OAAO,CAAC4B,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAAC6B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yEADJ,EAEI;AAAK,IAAA,SAAS,EAAE7B,OAAO,CAAC8B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC7B,OAAO,CAAC6C,IAAxC,CAFJ,CA7EJ,EAiFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjFJ,EAkFI;AAAK,IAAA,SAAS,EAAE9C,OAAO,CAAC2B,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADJ,EAGQtB,MAAM,CAAC0C,GAAP,CAAW,CAACC,KAAD,EAAQ9B,GAAR,KAAgB;AACvB,QACIjB,OAAO,CAACI,MAAR,CAAe,CAAf,EAAkB2B,MAAlB,KAA2B,WAA3B,KAEIpC,OAAO,CAACqD,IAAR,KAAe,QAAf,IACA,CAAC,UAAD,EAAa,aAAb,EAA4BC,QAA5B,CAAqCtD,OAAO,CAACqD,IAA7C,CADA,IAEArD,OAAO,CAACqD,IAAR,KAAe,OAJnB,CADJ,EAQI,OACI;AAAK,MAAA,GAAG,EAAE/B,GAAV;AAAe,MAAA,SAAS,EAAElB,OAAO,CAAC2B,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE3B,OAAO,CAAC4B,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE5B,OAAO,CAAC6B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADJ,EAEI;AAAG,MAAA,IAAI,EAAG,SAAQmB,KAAK,CAAC5B,IAAN,CAAWsB,GAAI,EAAjC;AAAoC,MAAA,MAAM,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE1C,OAAO,CAAC8B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCkB,KAAK,CAAC5B,IAAN,CAAWuB,IAA3C,CADJ,CAFJ,EAKI,MAAC,UAAD;AAAY,MAAA,OAAO,EAAE,MAAI;AACrBlB,QAAAA,MAAM,CAACP,GAAD,CAAN;AACH,OAFD;AAEG,MAAA,KAAK,EAAC,SAFT;AAEmB,MAAA,SAAS,EAAElB,OAAO,CAACmD,MAFtC;AAE8C,oBAAW,4CAFzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,MAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,EAAT;AAAa3C,QAAAA,KAAK,EAAE;AAApB,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CALJ,CADJ,EAYI;AAAK,MAAA,SAAS,EAAET,OAAO,CAAC4B,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE5B,OAAO,CAAC6B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EADJ,EAEI;AAAK,MAAA,SAAS,EAAE7B,OAAO,CAACqD,UAAxB;AAAoC,MAAA,OAAO,EAAE,MAAI;AAAC7B,QAAAA,SAAS,CAACN,GAAD,CAAT;AAAe,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,EAGI;AAAK,MAAA,SAAS,EAAElB,OAAO,CAAC8B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCkB,KAAK,CAAC7B,KAAtC,qBAHJ,EAII;AAAK,MAAA,SAAS,EAAEnB,OAAO,CAACqD,UAAxB;AAAoC,MAAA,OAAO,EAAE,MAAI;AAACpC,QAAAA,SAAS,CAACC,GAAD,CAAT;AAAe,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,CAZJ,EAkBI;AAAK,MAAA,SAAS,EAAElB,OAAO,CAAC4B,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE5B,OAAO,CAAC6B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oGADJ,EAEI;AAAK,MAAA,SAAS,EAAE7B,OAAO,CAAC8B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCkB,KAAK,CAACzC,QAAtC,2BAFJ,CAlBJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBJ,CADJ,CARJ,KAmCI,OACI;AAAK,MAAA,GAAG,EAAEW,GAAV;AAAe,MAAA,SAAS,EAAElB,OAAO,CAAC2B,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,IAAI,EAAG,SAAQqB,KAAK,CAAC5B,IAAN,CAAWsB,GAAI,EAAjC;AAAoC,MAAA,MAAM,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE1C,OAAO,CAAC4B,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE5B,OAAO,CAAC6B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADJ,EAEI;AAAK,MAAA,SAAS,EAAE7B,OAAO,CAAC8B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCkB,KAAK,CAAC5B,IAAN,CAAWuB,IAA3C,CAFJ,CADJ,CADJ,EAOI;AAAK,MAAA,SAAS,EAAE3C,OAAO,CAAC4B,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE5B,OAAO,CAAC6B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EADJ,EAEI;AAAK,MAAA,SAAS,EAAE7B,OAAO,CAAC8B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCkB,KAAK,CAAC7B,KAAtC,qBAFJ,CAPJ,EAWI;AAAK,MAAA,SAAS,EAAEnB,OAAO,CAAC4B,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE5B,OAAO,CAAC6B,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oGADJ,EAEI;AAAK,MAAA,SAAS,EAAE7B,OAAO,CAAC8B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCkB,KAAK,CAACzC,QAAtC,2BAFJ,CAXJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,CADJ;AAmBP,GAvDD,CAHR,CAlFJ,EA+II;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAESN,OAAO,CAACI,MAAR,CAAe,CAAf,EAAkB2B,MAAlB,KAA2B,WAA3B,KAAyCpC,OAAO,CAACqD,IAAR,KAAe,QAAf,IAAyB,CAAC,UAAD,EAAa,aAAb,EAA4BC,QAA5B,CAAqCtD,OAAO,CAACqD,IAA7C,CAAzB,IAA6ErD,OAAO,CAACqD,IAAR,KAAe,OAArI,CAAD,GACI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAE,MAAI;AACrD,YAAMK,MAAM,GAAG,YAAW;AACtB,YAAIC,UAAU,GAAGlD,MAAM,CAAC0C,GAAP,CAAYC,KAAD,IAAS;AAAC,iBAAO;AAACN,YAAAA,GAAG,EAAEM,KAAK,CAACN,GAAZ;AAAiBvB,YAAAA,KAAK,EAAE6B,KAAK,CAAC7B,KAA9B;AAAqCZ,YAAAA,QAAQ,EAAEyC,KAAK,CAACzC,QAArD;AAA+DyB,YAAAA,MAAM,EAAEgB,KAAK,CAAChB;AAA7E,WAAP;AAA4F,SAAjH,CAAjB;AACA,YAAIwB,QAAQ,GAAG,CAAC,MAAM5E,QAAQ,CAAC;AAACyB,UAAAA,MAAM,EAAEkD,UAAT;AAAqBE,UAAAA,OAAO,EAAExD,OAAO,CAACyC;AAAtC,SAAD,CAAf,EAA6Dc,QAA5E;AACA,YAAGtD,OAAH,EACIA,OAAO,CAACsD,QAAD,CAAP;AACJ,YAAGpD,WAAH,EACIA,WAAW;AACfN,QAAAA,cAAc,CAAC,KAAD,CAAd;AACH,OARD;;AASAC,MAAAA,aAAa,CAAC,cAAD,EAAiB,MAAC,YAAD;AAAc,QAAA,MAAM,EAAEuD,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjB,CAAb;AACH,KAXD;AAWG,IAAA,SAAS,EAAEtD,OAAO,CAACmD,MAXtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADJ,GAgBI,IAlBZ,EAsBavD,OAAO,CAACqD,IAAR,KAAe,QAAf,IAAyB,aAAWhD,OAAO,CAACI,MAAR,CAAe,CAAf,EAAkB2B,MAAtD,IAA8D,CAAC/B,OAAO,CAACiC,kBAAxE,IAEC,CAAC,UAAD,EAAa,aAAb,EAA4BgB,QAA5B,CAAqCtD,OAAO,CAACqD,IAA7C,KAAoD,aAAWhD,OAAO,CAACI,MAAR,CAAe,CAAf,EAAkB2B,MAAjF,IAAyF,CAAC/B,OAAO,CAACgC,qBAFnG,IAIArC,OAAO,CAACqD,IAAR,KAAe,OALnB,GAOI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAE,MAAI;AACrD,YAAMK,MAAM,GAAG,YAAW;AACtB,YAAIE,QAAQ,GAAG,CAAC,MAAM7E,aAAa,CAAC;AAACwB,UAAAA,KAAK,EAAEA,KAAR;AAAeqD,UAAAA,QAAQ,EAAE,CAACvD,OAAO,CAACyC,GAAT;AAAzB,SAAD,CAApB,EAA+Dc,QAA9E;AACA,YAAGtD,OAAH,EACIA,OAAO,CAACsD,QAAD,CAAP;AACJ,YAAGpD,WAAH,EACIA,WAAW;AAClB,OAND;;AAOAL,MAAAA,aAAa,CAAC,cAAD,EAAiB,MAAC,YAAD;AAAc,QAAA,MAAM,EAAEuD,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjB,CAAb;AACH,KATD;AASG,IAAA,SAAS,EAAEtD,OAAO,CAACmD,MATtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAPJ,GAoBI,IAzCZ,EA4CSvD,OAAO,CAACqD,IAAR,KAAe,QAAf,IAAyBhD,OAAO,CAACI,MAAR,CAAe,CAAf,EAAkB2B,MAAlB,KAA2B,WAArD,IACG,CAAC,UAAD,EAAa,aAAb,EAA4BkB,QAA5B,CAAqCtD,OAAO,CAACqD,IAA7C,KAAoD,CAAC,WAAD,EAAc,QAAd,EAAwBC,QAAxB,CAAiCjD,OAAO,CAACI,MAAR,CAAe,CAAf,EAAkB2B,MAAnD,CAApD,IAAgH,CAAC/B,OAAO,CAACgC,qBAAzH,IACDrC,OAAO,CAACqD,IAAR,KAAe,OAFjB,GAGI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,OAAO,EAAE,MAAI;AACrD,UAAIP,GAAG,GAAGzC,OAAO,CAACI,MAAR,CAAe0C,GAAf,CAAmBC,KAAK,IAAEA,KAAK,CAACN,GAAhC,CAAV;;AACA,YAAMY,MAAM,GAAG,YAAW;AACtB,YAAIE,QAAQ,GAAG,CAAC,MAAM9E,YAAY,CAAC;AAACgE,UAAAA,GAAG,EAAEA,GAAN;AAAWe,UAAAA,OAAO,EAAExD,OAAO,CAACyC;AAA5B,SAAD,CAAnB,EAAuDc,QAAtE;AACA,YAAGtD,OAAH,EACIA,OAAO,CAACsD,QAAD,CAAP;AACJ,YAAGpD,WAAH,EACIA,WAAW;AAClB,OAND;;AAOAL,MAAAA,aAAa,CAAC,cAAD,EAAiB,MAAC,YAAD;AAAc,QAAA,MAAM,EAAEuD,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjB,CAAb;AACH,KAVD;AAUG,IAAA,SAAS,EAAEtD,OAAO,CAACmD,MAVtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAHJ,GAiBI,IA7DZ,EA+DI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,WAAlC;AAA8C,IAAA,OAAO,EAAE,MAAI;AAACrD,MAAAA,cAAc,CAAC,KAAD,CAAd;AAAuB,KAAnF;AAAqF,IAAA,SAAS,EAAEE,OAAO,CAACmD,MAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDA/DJ,CA/IJ,CADJ;AAqNH,CA9PU,CAAf;;AAiQA,SAASO,eAAT,CAA0BC,KAA1B,EAAiC;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADhB;AAEH/D,IAAAA,IAAI,EAAE8D,KAAK,CAAC9D,IAFT;AAGHF,IAAAA,GAAG,EAAEgE,KAAK,CAAChE;AAHR,GAAP;AAKH;;AAED,SAASkE,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHjF,IAAAA,kBAAkB,EAAEJ,kBAAkB,CAACI,kBAAD,EAAqBiF,QAArB,CADnC;AAEH/E,IAAAA,WAAW,EAAEN,kBAAkB,CAACM,WAAD,EAAc+E,QAAd,CAF5B;AAGHhF,IAAAA,eAAe,EAAEL,kBAAkB,CAACK,eAAD,EAAkBgF,QAAlB;AAHhC,GAAP;AAKH;;AAEDvE,KAAK,CAACwE,SAAN,GAAkB;AACd/D,EAAAA,OAAO,EAAE1B,SAAS,CAAC0F,MAAV,CAAiBC;AADZ,CAAlB;AAIA,eAAezF,OAAO,CAACkF,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CtF,UAAU,CAACU,kBAAD,CAAV,CAA+BM,KAA/B,CAA7C,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { cancelOrders, approveOrders, setOrder } from '../../src/gql/order'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport * as userActions from '../../redux/actions/user'\r\nimport Button from '@material-ui/core/Button';\r\nimport dialogContentStyle from '../../src/styleMUI/dialogContent'\r\nimport { pdDDMMYYHHMM } from '../../src/lib'\r\nimport Confirmation from './Confirmation'\r\nimport Geo from '../../components/dialog/Geo'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nconst Order =  React.memo(\r\n    (props) =>{\r\n        const { isMobileApp } = props.app;\r\n        const { profile } = props.user;\r\n        const { showMiniDialog, setMiniDialog } = props.mini_dialogActions;\r\n        const { classes, element, setList, route, getInvoices } = props;\r\n        let [orders, setOrders] = useState(element.orders);\r\n        let [allPrice, setAllPrice] = useState(element.allPrice);\r\n        const width = isMobileApp? (window.innerWidth-144) : 500;\r\n        const { showSnackBar } = props.snackbarActions;\r\n        let canculateAllPrice = ()=>{\r\n            allPrice=0\r\n            for(let i=0; i<orders.length; i++){\r\n                allPrice+=orders[i].allPrice\r\n            }\r\n            if(element.usedBonus&&element.usedBonus>0)\r\n                allPrice -= element.usedBonus\r\n            setAllPrice(allPrice)\r\n        }\r\n        let increment = (idx)=>{\r\n            orders[idx].count+=1\r\n            orders[idx].allPrice = orders[idx].count * (orders[idx].item.stock===0||orders[idx].item.stock===undefined?orders[idx].item.price:orders[idx].item.stock)\r\n            setOrders([...orders])\r\n            canculateAllPrice()\r\n        }\r\n        let decrement = (idx)=>{\r\n            if(orders[idx].count>1) {\r\n                orders[idx].count -= 1\r\n                orders[idx].allPrice = orders[idx].count * (orders[idx].item.stock===0||orders[idx].item.stock===undefined?orders[idx].item.price:orders[idx].item.stock)\r\n                setOrders([...orders])\r\n                canculateAllPrice()\r\n            }\r\n        }\r\n        let remove = (idx)=>{\r\n            if(orders.length>1) {\r\n                orders.splice(idx, 1)\r\n                setOrders([...orders])\r\n                canculateAllPrice()\r\n            } else\r\n                showSnackBar('Товары не могут отсутствовать в заказе')\r\n        }\r\n        return (\r\n            <div className={classes.column} style={{width: width}}>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Заказ №:&nbsp;</div>\r\n                    <div className={classes.value}>{element.number}</div>\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Статус:&nbsp;</div>\r\n                    <div className={classes.value}>{\r\n                            element.orders[0].status==='принят'&&(element.confirmationForwarder||element.confirmationClient)?\r\n                                element.confirmationClient?\r\n                                    'подтвержден клиентом'\r\n                                    :\r\n                                    element.confirmationForwarder?\r\n                                        'доставлен поставщиком'\r\n                                        :\r\n                                        element.orders[0].status\r\n                                :\r\n                                element.orders[0].status\r\n                    }</div>\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Адрес: &nbsp;</div>\r\n                    <div className={classes.value}>{element.address[0]}</div>\r\n                </div>\r\n                <div className={classes.geo} style={{color: element.address[1]?'#ffb300':'red'}} onClick={()=>{\r\n                    setMiniDialog('Геолокация', <Geo geo={element.address[1]}/>, true)\r\n                    showMiniDialog(true)\r\n                }}>\r\n                    {\r\n                        element.address[1]?\r\n                            'Посмотреть геолокацию'\r\n                            :\r\n                            'Геолокация не задана'\r\n                    }\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Время заказа: &nbsp;</div>\r\n                    <div className={classes.value}>{pdDDMMYYHHMM(new Date(element.createdAt))}</div>\r\n                </div>\r\n                {\r\n                    element.dateDelivery?\r\n                        <div className={classes.row}>\r\n                            <div className={classes.nameField}>Время доставки:&nbsp;</div>\r\n                            <div className={classes.value}>{pdDDMMYYHHMM(new Date(element.dateDelivery))}</div>\r\n                        </div>\r\n                        :\r\n                        null\r\n                }\r\n                <a href={`/client/${element.client.user._id}`} target='_blank'>\r\n                    <div className={classes.row}>\r\n                        <div className={classes.nameField}>Получатель:&nbsp;</div>\r\n                        <div className={classes.value}>{element.client.name}</div>\r\n                    </div>\r\n                </a>\r\n                <a href={`/organization/${element.orders[0].item.organization._id}`} target='_blank'>\r\n                    <div className={classes.row}>\r\n                        <div className={classes.nameField}>Поставщик:&nbsp;</div>\r\n                        <div className={classes.value}>{element.orders[0].item.organization.name}</div>\r\n                    </div>\r\n                </a>\r\n                {\r\n                    element.usedBonus&&element.usedBonus>0?\r\n                        <div className={classes.row}>\r\n                            <div className={classes.nameField}>Использованный бонус:&nbsp;</div>\r\n                            <div className={classes.value}>{element.usedBonus}&nbsp;сом</div>\r\n                        </div>\r\n                        :\r\n                        null\r\n                }\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Сумма:&nbsp;</div>\r\n                    <div className={classes.value}>{allPrice}&nbsp;сом</div>\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Способ оплаты:&nbsp;</div>\r\n                    <div className={classes.value}>{element.paymentMethod}</div>\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Информация:&nbsp;</div>\r\n                    <div className={classes.value}>{element.info}</div>\r\n                </div>\r\n                <br/>\r\n                <div className={classes.column}>\r\n                    <b>Товары:</b>\r\n                    {\r\n                        orders.map((order, idx) => {\r\n                            if(\r\n                                element.orders[0].status==='обработка'&&\r\n                                (\r\n                                    profile.role==='client'||\r\n                                    ['менеджер', 'организация'].includes(profile.role)||\r\n                                    profile.role==='admin'\r\n                                )\r\n                            )\r\n                                return(\r\n                                    <div key={idx} className={classes.column}>\r\n                                        <div className={classes.row}>\r\n                                            <div className={classes.nameField}>Товар:&nbsp;</div>\r\n                                            <a href={`/item/${order.item._id}`} target='_blank'>\r\n                                                <div className={classes.value}>{order.item.name}</div>\r\n                                            </a>\r\n                                            <IconButton onClick={()=>{\r\n                                                remove(idx)\r\n                                            }} color='primary' className={classes.button} aria-label='удалить'>\r\n                                                <CancelIcon style={{height: 20, width: 20}}/>\r\n                                            </IconButton>\r\n                                        </div>\r\n                                        <div className={classes.row}>\r\n                                            <div className={classes.nameField}>Количество:&nbsp;</div>\r\n                                            <div className={classes.counterbtn} onClick={()=>{decrement(idx)}}>-</div>\r\n                                            <div className={classes.value}>{order.count}&nbsp;шт</div>\r\n                                            <div className={classes.counterbtn} onClick={()=>{increment(idx)}}>+</div>\r\n                                        </div>\r\n                                        <div className={classes.row}>\r\n                                            <div className={classes.nameField}>Общая стоимость:&nbsp;</div>\r\n                                            <div className={classes.value}>{order.allPrice}&nbsp;сом</div>\r\n                                        </div>\r\n                                        <br/>\r\n                                    </div>\r\n                                )\r\n                            else\r\n                                return(\r\n                                    <div key={idx} className={classes.column}>\r\n                                        <a href={`/item/${order.item._id}`} target='_blank'>\r\n                                            <div className={classes.row}>\r\n                                                <div className={classes.nameField}>Товар:&nbsp;</div>\r\n                                                <div className={classes.value}>{order.item.name}</div>\r\n                                            </div>\r\n                                        </a>\r\n                                        <div className={classes.row}>\r\n                                            <div className={classes.nameField}>Количество:&nbsp;</div>\r\n                                            <div className={classes.value}>{order.count}&nbsp;шт</div>\r\n                                        </div>\r\n                                        <div className={classes.row}>\r\n                                            <div className={classes.nameField}>Общая стоимость:&nbsp;</div>\r\n                                            <div className={classes.value}>{order.allPrice}&nbsp;сом</div>\r\n                                        </div>\r\n                                        <br/>\r\n                                    </div>\r\n                                )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div>\r\n                    {\r\n                        (element.orders[0].status==='обработка'&&(profile.role==='client'||['менеджер', 'организация'].includes(profile.role)||profile.role==='admin'))?\r\n                            <Button variant='contained' color='primary' onClick={()=>{\r\n                                const action = async() => {\r\n                                    let sendOrders = orders.map((order)=>{return {_id: order._id, count: order.count, allPrice: order.allPrice, status: order.status}})\r\n                                    let invoices = (await setOrder({orders: sendOrders, invoice: element._id})).invoices\r\n                                    if(setList)\r\n                                        setList(invoices)\r\n                                    if(getInvoices)\r\n                                        getInvoices()\r\n                                    showMiniDialog(false);\r\n                                }\r\n                                setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                            }} className={classes.button}>\r\n                                Сохранить\r\n                            </Button>\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        (\r\n                            (profile.role==='client'&&'принят'===element.orders[0].status&&!element.confirmationClient)\r\n                            ||\r\n                            (['менеджер', 'организация'].includes(profile.role)&&'принят'===element.orders[0].status&&!element.confirmationForwarder)\r\n                            ||\r\n                            profile.role==='admin'\r\n                        )?\r\n                            <Button variant='contained' color='primary' onClick={()=>{\r\n                                const action = async() => {\r\n                                    let invoices = (await approveOrders({route: route, invoices: [element._id]})).invoices\r\n                                    if(setList)\r\n                                        setList(invoices)\r\n                                    if(getInvoices)\r\n                                        getInvoices()\r\n                                }\r\n                                setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                            }} className={classes.button}>\r\n                                Заказ выполнен\r\n                            </Button>\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        (profile.role==='client'&&element.orders[0].status==='обработка')\r\n                        ||(['менеджер', 'организация'].includes(profile.role)&&['обработка', 'принят'].includes(element.orders[0].status)&&!element.confirmationForwarder\r\n                        ||profile.role==='admin')?\r\n                            <Button variant='contained' color='primary' onClick={()=>{\r\n                                let _id = element.orders.map(order=>order._id)\r\n                                const action = async() => {\r\n                                    let invoices = (await cancelOrders({_id: _id, invoice: element._id})).invoices\r\n                                    if(setList)\r\n                                        setList(invoices)\r\n                                    if(getInvoices)\r\n                                        getInvoices()\r\n                                }\r\n                                setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                            }} className={classes.button}>\r\n                                Отменить заказ\r\n                            </Button>\r\n                            :\r\n                            null\r\n                    }\r\n                    <Button variant='contained' color='secondary' onClick={()=>{showMiniDialog(false);}} className={classes.button}>\r\n                        Закрыть\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nOrder.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(Order));"]},"metadata":{},"sourceType":"module"}