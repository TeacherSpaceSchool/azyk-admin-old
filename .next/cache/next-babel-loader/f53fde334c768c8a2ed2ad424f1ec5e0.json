{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\components\\\\route\\\\CardRoute.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport cardRouteStyle from '../../src/styleMUI/route/cardRoute';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport { deleteRoute } from '../../src/gql/route';\nimport Link from 'next/link';\nimport { pdDDMMYY } from '../../src/lib';\nimport Confirmation from '../dialog/Confirmation';\nconst CardOrder = React.memo(props => {\n  const classes = cardRouteStyle();\n  const {\n    element,\n    setList\n  } = props;\n  const {\n    setMiniDialog,\n    showMiniDialog\n  } = props.mini_dialogActions;\n  const statusColor = {\n    'создан': 'orange',\n    'выполняется': 'blue',\n    'выполнен': 'green'\n  };\n  const breakGeoRoute = element.invoices.filter(element => !element.address[1]).length > 0;\n  return __jsx(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/route/[id]\",\n    as: `/route/${element !== undefined ? element._id : 'new'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(CardContent, {\n    className: classes.column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"\\u041A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u044F:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, element.employment.organization.name), __jsx(\"div\", {\n    className: classes.status,\n    style: {\n      background: statusColor[element.status]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, element.status)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"\\u042D\\u043A\\u0441\\u043F\\u0435\\u0434\\u0438\\u0442\\u043E\\u0440:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, element.employment.name)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"\\u0414\\u0430\\u0442\\u0430:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, pdDDMMYY(new Date(element.dateStart)))), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, breakGeoRoute ? 'Маршрут ' : 'Просмотреть маршрут')), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u043A\\u0430\\u0437\\u044B:\\xA0\"), __jsx(\"div\", {\n    className: classes.column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, element.invoices.map((invoice, idx) => __jsx(\"div\", {\n    key: idx,\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, invoice.number))))))), __jsx(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: async () => {\n      const action = async () => {\n        setList((await deleteRoute([element._id])).routes);\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardOrder);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\route\\CardRoute.js"],"names":["React","Card","CardActionArea","CardContent","CardActions","Button","cardRouteStyle","connect","bindActionCreators","mini_dialogActions","snackbarActions","deleteRoute","Link","pdDDMMYY","Confirmation","CardOrder","memo","props","classes","element","setList","setMiniDialog","showMiniDialog","statusColor","breakGeoRoute","invoices","filter","address","length","card","undefined","_id","column","row","nameField","value","employment","organization","name","status","background","Date","dateStart","map","invoice","idx","number","action","routes","mapStateToProps","state","user","app","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport cardRouteStyle from '../../src/styleMUI/route/cardRoute'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport { deleteRoute } from '../../src/gql/route'\r\nimport Link from 'next/link';\r\nimport { pdDDMMYY } from '../../src/lib'\r\nimport Confirmation from '../dialog/Confirmation'\r\n\r\nconst CardOrder = React.memo((props) => {\r\n    const classes = cardRouteStyle();\r\n    const { element, setList } = props;\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    const statusColor = {\r\n        'создан': 'orange',\r\n        'выполняется': 'blue',\r\n        'выполнен': 'green',\r\n    }\r\n    const breakGeoRoute = (element.invoices.filter((element)=>!element.address[1])).length>0\r\n    return (\r\n        <Card className={classes.card}>\r\n            <Link href='/route/[id]' as={`/route/${element!==undefined?element._id:'new'}`}>\r\n                <CardActionArea>\r\n                    <CardContent className={classes.column}>\r\n                        <div className={classes.row}>\r\n                            <div className={classes.nameField}>Компания:&nbsp;</div>\r\n                            <div className={classes.value}>{element.employment.organization.name}</div>\r\n                            <div className={classes.status} style={{background: statusColor[element.status]}}>{element.status}</div>\r\n                        </div>\r\n                        <div className={classes.row}>\r\n                            <div className={classes.nameField}>Экспедитор:&nbsp;</div>\r\n                            <div className={classes.value}>{element.employment.name}</div>\r\n                        </div>\r\n                        <div className={classes.row}>\r\n                            <div className={classes.nameField}>Дата:&nbsp;</div>\r\n                            <div className={classes.value}>{pdDDMMYY(new Date(element.dateStart))}</div>\r\n                        </div>\r\n                        <div className={classes.row}>\r\n                            <div className={classes.nameField}>{breakGeoRoute?'Маршрут ':'Просмотреть маршрут'}</div>\r\n                        </div>\r\n                        <div className={classes.row}>\r\n                            <div className={classes.nameField}>Заказы:&nbsp;</div>\r\n                            <div className={classes.column}>\r\n                                {element.invoices.map((invoice, idx)=> <div key={idx} className={classes.value}>{invoice.number}</div>)}\r\n                            </div>\r\n                        </div>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Link>\r\n            <CardActions>\r\n                <Button onClick={async()=>{\r\n                    const action = async() => {\r\n                        setList((await deleteRoute([element._id])).routes)\r\n                    }\r\n                    setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                    showMiniDialog(true)\r\n                }} size='small' color='primary'>\r\n                    Удалить\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n})\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardOrder)"]},"metadata":{},"sourceType":"module"}