{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\components\\\\dialog\\\\Order.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { cancelOrders, approveOrders } from '../../src/gql/order';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport * as userActions from '../../redux/actions/user';\nimport Button from '@material-ui/core/Button';\nimport dialogContentStyle from '../../src/styleMUI/dialogContent';\nimport { pdDDMMYYHHMM } from '../../src/lib';\nimport Confirmation from './Confirmation';\nimport Geo from '../../components/dialog/Geo';\nconst Order = React.memo(props => {\n  const {\n    isMobileApp\n  } = props.app;\n  const {\n    profile\n  } = props.user;\n  const {\n    showMiniDialog,\n    setMiniDialog\n  } = props.mini_dialogActions;\n  const {\n    classes,\n    element,\n    setList,\n    route,\n    getInvoices\n  } = props;\n  const width = isMobileApp ? window.innerWidth - 126 : 500;\n  return __jsx(\"div\", {\n    className: classes.column,\n    style: {\n      width: width\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u043A\\u0430\\u0437 \\u2116:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, element.number)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, element.orders[0].status === 'принят' && (element.confirmationForwarder || element.confirmationClient) ? element.confirmationClient ? 'подтвержден клиентом' : element.confirmationForwarder ? 'доставлен поставщиком' : element.orders[0].status : element.orders[0].status)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"\\u0410\\u0434\\u0440\\u0435\\u0441: \\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, element.address[0])), __jsx(\"div\", {\n    className: classes.geo,\n    style: {\n      color: element.address[1] ? '#ffb300' : 'red'\n    },\n    onClick: () => {\n      setMiniDialog('Геолокация', __jsx(Geo, {\n        geo: element.address[1],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), true);\n      showMiniDialog(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, element[1] ? 'Посмотреть геолокацию' : 'Геолокация не задана'), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"\\u0412\\u0440\\u0435\\u043C\\u044F \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430: \\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, pdDDMMYYHHMM(new Date(element.updatedAt)))), __jsx(\"a\", {\n    href: `/client/${element.client.user._id}`,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0430\\u0442\\u0435\\u043B\\u044C:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, element.client.name))), __jsx(\"a\", {\n    href: `/organization/${element.orders[0].item.organization._id}`,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"\\u041F\\u043E\\u0441\\u0442\\u0430\\u0432\\u0449\\u0438\\u043A:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, element.orders[0].item.organization.name))), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"\\u0421\\u0443\\u043C\\u043C\\u0430:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, element.allPrice, \"\\xA0\\u0441\\u043E\\u043C\")), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"\\u0421\\u043F\\u043E\\u0441\\u043E\\u0431 \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, element.paymentMethod)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, element.info)), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"\\u0422\\u043E\\u0432\\u0430\\u0440\\u044B:\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), element.orders.map((order, idx) => __jsx(\"div\", {\n    key: idx,\n    className: classes.column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    href: `/item/${order.item._id}`,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"\\u0422\\u043E\\u0432\\u0430\\u0440:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, order.item.name))), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, order.count, \"\\xA0\\u0448\\u0442\")), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"\\u041E\\u0431\\u0449\\u0430\\u044F \\u0441\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, order.allPrice, \"\\xA0\\u0441\\u043E\\u043C\")), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })))), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, profile.role === 'client' && 'принят' === element.orders[0].status && !element.confirmationClient || ['менеджер', 'организация'].includes(profile.role) && 'принят' === element.orders[0].status && !element.confirmationForwarder || profile.role === 'admin' ? __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => {\n      const action = async () => {\n        let invoices = (await approveOrders({\n          route: route,\n          invoices: [element._id]\n        })).invoices;\n        if (setList) setList(invoices);\n        if (getInvoices) getInvoices();\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }));\n    },\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u043A\\u0430\\u0437 \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\") : null, profile.role === 'client' && element.orders[0].status === 'обработка' || ['менеджер', 'организация'].includes(profile.role) && ['обработка', 'принят'].includes(element.orders[0].status) && !element.confirmationForwarder || profile.role === 'admin' ? __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => {\n      let _id = element.orders.map(order => order._id);\n\n      const action = async () => {\n        let invoices = (await cancelOrders({\n          _id: _id\n        })).invoices;\n        if (setList) setList(invoices);\n        if (getInvoices) getInvoices();\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }));\n    },\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437\") : null, __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => {\n      showMiniDialog(false);\n    },\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\")));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    mini_dialog: state.mini_dialog,\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    userActions: bindActionCreators(userActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nOrder.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(Order));","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\dialog\\Order.js"],"names":["React","PropTypes","withStyles","connect","bindActionCreators","cancelOrders","approveOrders","mini_dialogActions","snackbarActions","userActions","Button","dialogContentStyle","pdDDMMYYHHMM","Confirmation","Geo","Order","memo","props","isMobileApp","app","profile","user","showMiniDialog","setMiniDialog","classes","element","setList","route","getInvoices","width","window","innerWidth","column","row","nameField","value","number","orders","status","confirmationForwarder","confirmationClient","address","geo","color","Date","updatedAt","client","_id","name","item","organization","allPrice","paymentMethod","info","map","order","idx","count","role","includes","action","invoices","button","mapStateToProps","state","mini_dialog","mapDispatchToProps","dispatch","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { cancelOrders, approveOrders } from '../../src/gql/order'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport * as userActions from '../../redux/actions/user'\r\nimport Button from '@material-ui/core/Button';\r\nimport dialogContentStyle from '../../src/styleMUI/dialogContent'\r\nimport { pdDDMMYYHHMM } from '../../src/lib'\r\nimport Confirmation from './Confirmation'\r\nimport Geo from '../../components/dialog/Geo'\r\n\r\nconst Order =  React.memo(\r\n    (props) =>{\r\n        const { isMobileApp } = props.app;\r\n        const { profile } = props.user;\r\n        const { showMiniDialog, setMiniDialog } = props.mini_dialogActions;\r\n        const { classes, element, setList, route, getInvoices } = props;\r\n        const width = isMobileApp? (window.innerWidth-126) : 500;\r\n        return (\r\n            <div className={classes.column} style={{width: width}}>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Заказ №:&nbsp;</div>\r\n                    <div className={classes.value}>{element.number}</div>\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Статус:&nbsp;</div>\r\n                    <div className={classes.value}>{\r\n                            element.orders[0].status==='принят'&&(element.confirmationForwarder||element.confirmationClient)?\r\n                                element.confirmationClient?\r\n                                    'подтвержден клиентом'\r\n                                    :\r\n                                    element.confirmationForwarder?\r\n                                        'доставлен поставщиком'\r\n                                        :\r\n                                        element.orders[0].status\r\n                                :\r\n                                element.orders[0].status\r\n                    }</div>\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Адрес: &nbsp;</div>\r\n                    <div className={classes.value}>{element.address[0]}</div>\r\n                </div>\r\n                <div className={classes.geo} style={{color: element.address[1]?'#ffb300':'red'}} onClick={()=>{\r\n                    setMiniDialog('Геолокация', <Geo geo={element.address[1]}/>, true)\r\n                    showMiniDialog(true)\r\n                }}>\r\n                    {\r\n                        element[1]?\r\n                            'Посмотреть геолокацию'\r\n                            :\r\n                            'Геолокация не задана'\r\n                    }\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Время заказа: &nbsp;</div>\r\n                    <div className={classes.value}>{pdDDMMYYHHMM(new Date(element.updatedAt))}</div>\r\n                </div>\r\n                <a href={`/client/${element.client.user._id}`} target='_blank'>\r\n                    <div className={classes.row}>\r\n                        <div className={classes.nameField}>Получатель:&nbsp;</div>\r\n                        <div className={classes.value}>{element.client.name}</div>\r\n                    </div>\r\n                </a>\r\n                <a href={`/organization/${element.orders[0].item.organization._id}`} target='_blank'>\r\n                    <div className={classes.row}>\r\n                        <div className={classes.nameField}>Поставщик:&nbsp;</div>\r\n                        <div className={classes.value}>{element.orders[0].item.organization.name}</div>\r\n                    </div>\r\n                </a>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Сумма:&nbsp;</div>\r\n                    <div className={classes.value}>{element.allPrice}&nbsp;сом</div>\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Способ оплаты:&nbsp;</div>\r\n                    <div className={classes.value}>{element.paymentMethod}</div>\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Информация:&nbsp;</div>\r\n                    <div className={classes.value}>{element.info}</div>\r\n                </div>\r\n                <br/>\r\n                <div className={classes.column}>\r\n                    <b>Товары:</b>\r\n                    <br/>\r\n                    <br/>\r\n                    {\r\n                        element.orders.map((order, idx) => (\r\n                            <div key={idx} className={classes.column}>\r\n                                <a href={`/item/${order.item._id}`} target='_blank'>\r\n                                    <div className={classes.row}>\r\n                                        <div className={classes.nameField}>Товар:&nbsp;</div>\r\n                                        <div className={classes.value}>{order.item.name}</div>\r\n                                    </div>\r\n                                </a>\r\n                                <div className={classes.row}>\r\n                                    <div className={classes.nameField}>Количество:&nbsp;</div>\r\n                                    <div className={classes.value}>{order.count}&nbsp;шт</div>\r\n                                </div>\r\n                                <div className={classes.row}>\r\n                                    <div className={classes.nameField}>Общая стоимость:&nbsp;</div>\r\n                                    <div className={classes.value}>{order.allPrice}&nbsp;сом</div>\r\n                                </div>\r\n                                <br/>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div>\r\n                    {\r\n                        (\r\n                            (profile.role==='client'&&'принят'===element.orders[0].status&&!element.confirmationClient)\r\n                            ||\r\n                            (['менеджер', 'организация'].includes(profile.role)&&'принят'===element.orders[0].status&&!element.confirmationForwarder)\r\n                            ||\r\n                            profile.role==='admin'\r\n                        )?\r\n                            <Button variant='contained' color='primary' onClick={()=>{\r\n                                const action = async() => {\r\n                                    let invoices = (await approveOrders({route: route, invoices: [element._id]})).invoices\r\n                                    if(setList)\r\n                                        setList(invoices)\r\n                                    if(getInvoices)\r\n                                        getInvoices()\r\n                                }\r\n                                setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                            }} className={classes.button}>\r\n                                Заказ выполнен\r\n                            </Button>\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        (profile.role==='client'&&element.orders[0].status==='обработка')\r\n                        ||(['менеджер', 'организация'].includes(profile.role)&&['обработка', 'принят'].includes(element.orders[0].status)&&!element.confirmationForwarder\r\n                        ||profile.role==='admin')?\r\n                            <Button variant='contained' color='primary' onClick={()=>{\r\n                                let _id = element.orders.map(order=>order._id)\r\n                                const action = async() => {\r\n                                    let invoices = (await cancelOrders({_id: _id})).invoices\r\n                                    if(setList)\r\n                                        setList(invoices)\r\n                                    if(getInvoices)\r\n                                        getInvoices()\r\n                                }\r\n                                setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                            }} className={classes.button}>\r\n                                Отменить заказ\r\n                            </Button>\r\n                            :\r\n                            null\r\n                    }\r\n                    <Button variant='contained' color='secondary' onClick={()=>{showMiniDialog(false);}} className={classes.button}>\r\n                        Закрыть\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nOrder.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(Order));"]},"metadata":{},"sourceType":"module"}