{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { SingletonApolloClient } from '../singleton/client';\nexport var readDataGQL =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(variables, query) {\n    var client, res, _res;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            client = new SingletonApolloClient().getClient();\n            _context.prev = 1;\n            console.log({\n              variables: variables,\n              query: query\n            });\n            _context.next = 5;\n            return client.query({\n              variables: variables,\n              query: query\n            });\n\n          case 5:\n            res = _context.sent;\n            console.log(res.data);\n            client.writeQuery({\n              variables: variables,\n              query: query,\n              data: res.data\n            });\n            return _context.abrupt(\"return\", res.data);\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            _res = client.readQuery({\n              variables: variables,\n              query: query\n            });\n            console.log(_res);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 11]]);\n  }));\n\n  return function readDataGQL(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\src\\gql\\index.js"],"names":["SingletonApolloClient","readDataGQL","variables","query","client","getClient","console","log","res","data","writeQuery","readQuery"],"mappings":";;AAAA,SAASA,qBAAT,QAAsC,qBAAtC;AAEA,OAAO,IAAMC,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAMC,SAAN,EAAiBC,KAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjBC,YAAAA,MADiB,GACR,IAAIJ,qBAAJ,GAA4BK,SAA5B,EADQ;AAAA;AAGnBC,YAAAA,OAAO,CAACC,GAAR,CAAY;AACRL,cAAAA,SAAS,EAAEA,SADH;AAERC,cAAAA,KAAK,EAAEA;AAFC,aAAZ;AAHmB;AAAA,mBAOHC,MAAM,CACjBD,KADW,CACL;AACHD,cAAAA,SAAS,EAAEA,SADR;AAEHC,cAAAA,KAAK,EAAEA;AAFJ,aADK,CAPG;;AAAA;AAOfK,YAAAA,GAPe;AAYnBF,YAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACC,IAAhB;AACAL,YAAAA,MAAM,CAACM,UAAP,CAAkB;AACdR,cAAAA,SAAS,EAAEA,SADG;AAEdC,cAAAA,KAAK,EAAEA,KAFO;AAGdM,cAAAA,IAAI,EAAED,GAAG,CAACC;AAHI,aAAlB;AAbmB,6CAkBZD,GAAG,CAACC,IAlBQ;;AAAA;AAAA;AAAA;AAoBfD,YAAAA,IApBe,GAoBTJ,MAAM,CAACO,SAAP,CAAiB;AACvBT,cAAAA,SAAS,EAAEA,SADY;AAEvBC,cAAAA,KAAK,EAAEA;AAFgB,aAAjB,CApBS;AAwBnBG,YAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;;AAxBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXP,WAAW;AAAA;AAAA;AAAA,GAAjB","sourcesContent":["import { SingletonApolloClient } from '../singleton/client';\r\n\r\nexport const readDataGQL = async(variables, query)=>{\r\n    const client = new SingletonApolloClient().getClient()\r\n    try{\r\n        console.log({\r\n            variables: variables,\r\n            query: query\r\n        })\r\n        let res = await client\r\n            .query({\r\n                variables: variables,\r\n                query: query\r\n            })\r\n        console.log(res.data)\r\n        client.writeQuery({\r\n            variables: variables,\r\n            query: query,\r\n            data: res.data,\r\n        });\r\n        return res.data\r\n    } catch(err){\r\n        let res = client.readQuery({\r\n            variables: variables,\r\n            query: query,\r\n        });\r\n        console.log(res)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}