{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\components\\\\ads\\\\CardAds.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport cardAdsStyle from '../../src/styleMUI/ads/cardAds';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport CardActions from '@material-ui/core/CardActions';\nimport { deleteAds, addAds, setAds } from '../../src/gql/ads';\nimport TextField from '@material-ui/core/TextField';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport Confirmation from '../dialog/Confirmation';\nvar CardAds = React.memo(function (props) {\n  var classes = cardAdsStyle();\n  var element = props.element,\n      setList = props.setList;\n  var profile = props.user.profile;\n  var isMobileApp = props.app.isMobileApp; //addCard\n\n  var _useState = useState(element ? element.image : '/static/add.png'),\n      preview = _useState[0],\n      setPreview = _useState[1];\n\n  var _useState2 = useState(undefined),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var handleChangeImage = function handleChangeImage(event) {\n    if (event.target.files[0].size / 1024 / 1024 < 20) {\n      setImage(event.target.files[0]);\n      setPreview(URL.createObjectURL(event.target.files[0]));\n    } else {\n      showSnackBar('Файл слишком большой');\n    }\n  };\n\n  var _useState3 = useState(element ? element.title : ''),\n      title = _useState3[0],\n      setTitle = _useState3[1];\n\n  var handleTitle = function handleTitle(event) {\n    setTitle(event.target.value);\n  };\n\n  var _useState4 = useState(element ? element.url : ''),\n      url = _useState4[0],\n      setUrl = _useState4[1];\n\n  var handleUrl = function handleUrl(event) {\n    setUrl(event.target.value);\n  };\n\n  var _props$mini_dialogAct = props.mini_dialogActions,\n      setMiniDialog = _props$mini_dialogAct.setMiniDialog,\n      showMiniDialog = _props$mini_dialogAct.showMiniDialog;\n  var showSnackBar = props.snackbarActions.showSnackBar;\n  return __jsx(React.Fragment, null, \" \", profile.role === 'admin' ? __jsx(Card, {\n    className: isMobileApp ? classes.cardM : classes.cardD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: element ? element._id : 'add',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: isMobileApp ? classes.mediaM : classes.mediaD,\n    src: preview,\n    alt: 'Изменить',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), __jsx(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(TextField, {\n    label: \"\\u0418\\u043C\\u044F\",\n    value: title,\n    className: classes.input,\n    onChange: handleTitle,\n    inputProps: {\n      'aria-label': 'description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), __jsx(TextField, {\n    label: \"URL\",\n    value: url,\n    className: classes.input,\n    onChange: handleUrl,\n    inputProps: {\n      'aria-label': 'description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), __jsx(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, element !== undefined ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var editElement, action;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              editElement = {\n                _id: element._id\n              };\n              if (title.length > 0 && title !== element.title) editElement.title = title;\n              if (url.length > 0 && url !== element.url) editElement.url = url;\n              if (image !== undefined) editElement.image = image;\n\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.t0 = setList;\n                          _context.next = 3;\n                          return setAds(editElement);\n\n                        case 3:\n                          _context.t1 = _context.sent.adss;\n                          (0, _context.t0)(_context.t1);\n\n                        case 5:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function action() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 88\n                },\n                __self: this\n              }));\n              showMiniDialog(true);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    })),\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref4 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee3() {\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.t0 = setList;\n                          _context3.next = 3;\n                          return deleteAds([element._id]);\n\n                        case 3:\n                          _context3.t1 = _context3.sent.adss;\n                          (0, _context3.t0)(_context3.t1);\n\n                        case 5:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function action() {\n                  return _ref4.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 97\n                },\n                __self: this\n              }));\n              showMiniDialog(true);\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    })),\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")) : __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (image !== undefined && url.length > 0 && title.length > 0) {\n                setImage(undefined);\n                setPreview('/static/add.png');\n                setTitle('');\n                setUrl('');\n\n                action =\n                /*#__PURE__*/\n                function () {\n                  var _ref6 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee5() {\n                    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            _context5.t0 = setList;\n                            _context5.next = 3;\n                            return addAds({\n                              image: image,\n                              url: url,\n                              title: title\n                            });\n\n                          case 3:\n                            _context5.t1 = _context5.sent.adss;\n                            (0, _context5.t0)(_context5.t1);\n\n                          case 5:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n\n                  return function action() {\n                    return _ref6.apply(this, arguments);\n                  };\n                }();\n\n                setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                  action: action,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 113\n                  },\n                  __self: this\n                }));\n                showMiniDialog(true);\n              } else {\n                showSnackBar('Заполните все поля');\n              }\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, this);\n    })),\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\")), __jsx(\"input\", {\n    accept: \"image/*\",\n    style: {\n      display: 'none'\n    },\n    id: element ? element._id : 'add',\n    type: \"file\",\n    onChange: handleChangeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })) : element !== undefined ? __jsx(\"div\", {\n    className: isMobileApp ? classes.cardM : classes.cardD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    href: element.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: isMobileApp ? classes.mediaM : classes.mediaD,\n    alt: element.title,\n    src: element.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }))) : null);\n});\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardAds);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\ads\\CardAds.js"],"names":["React","useState","Card","CardActionArea","CardContent","cardAdsStyle","connect","Button","CardActions","deleteAds","addAds","setAds","TextField","bindActionCreators","mini_dialogActions","snackbarActions","Confirmation","CardAds","memo","props","classes","element","setList","profile","user","isMobileApp","app","image","preview","setPreview","undefined","setImage","handleChangeImage","event","target","files","size","URL","createObjectURL","showSnackBar","title","setTitle","handleTitle","value","url","setUrl","handleUrl","setMiniDialog","showMiniDialog","role","cardM","cardD","_id","mediaM","mediaD","input","editElement","length","action","adss","display","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,QAA0C,mBAA1C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,kBAAZ,MAAoC,iCAApC;AACA,OAAO,KAAKC,eAAZ,MAAiC,8BAAjC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AAGA,IAAMC,OAAO,GAAGjB,KAAK,CAACkB,IAAN,CAAW,UAACC,KAAD,EAAW;AAClC,MAAMC,OAAO,GAAGf,YAAY,EAA5B;AADkC,MAE1BgB,OAF0B,GAELF,KAFK,CAE1BE,OAF0B;AAAA,MAEjBC,OAFiB,GAELH,KAFK,CAEjBG,OAFiB;AAAA,MAG1BC,OAH0B,GAGdJ,KAAK,CAACK,IAHQ,CAG1BD,OAH0B;AAAA,MAI1BE,WAJ0B,GAIVN,KAAK,CAACO,GAJI,CAI1BD,WAJ0B,EAKlC;;AALkC,kBAMNxB,QAAQ,CAACoB,OAAO,GAACA,OAAO,CAACM,KAAT,GAAe,iBAAvB,CANF;AAAA,MAM7BC,OAN6B;AAAA,MAMpBC,UANoB;;AAAA,mBAOV5B,QAAQ,CAAC6B,SAAD,CAPE;AAAA,MAO7BH,KAP6B;AAAA,MAOtBI,QAPsB;;AAQlC,MAAIC,iBAAiB,GAAI,SAArBA,iBAAqB,CAACC,KAAD,EAAW;AAChC,QAAGA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,EAAsBC,IAAtB,GAA2B,IAA3B,GAAgC,IAAhC,GAAqC,EAAxC,EAA2C;AACvCL,MAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAR;AACAN,MAAAA,UAAU,CAACQ,GAAG,CAACC,eAAJ,CAAoBL,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAApB,CAAD,CAAV;AACH,KAHD,MAGO;AACHI,MAAAA,YAAY,CAAC,sBAAD,CAAZ;AACH;AACJ,GAPD;;AARkC,mBAgBVtC,QAAQ,CAACoB,OAAO,GAACA,OAAO,CAACmB,KAAT,GAAe,EAAvB,CAhBE;AAAA,MAgB7BA,KAhB6B;AAAA,MAgBtBC,QAhBsB;;AAiBlC,MAAIC,WAAW,GAAI,SAAfA,WAAe,CAACT,KAAD,EAAW;AAC1BQ,IAAAA,QAAQ,CAACR,KAAK,CAACC,MAAN,CAAaS,KAAd,CAAR;AACH,GAFD;;AAjBkC,mBAoBd1C,QAAQ,CAACoB,OAAO,GAACA,OAAO,CAACuB,GAAT,GAAa,EAArB,CApBM;AAAA,MAoB7BA,GApB6B;AAAA,MAoBxBC,MApBwB;;AAqBlC,MAAIC,SAAS,GAAI,SAAbA,SAAa,CAACb,KAAD,EAAW;AACxBY,IAAAA,MAAM,CAACZ,KAAK,CAACC,MAAN,CAAaS,KAAd,CAAN;AACH,GAFD;;AArBkC,8BAwBQxB,KAAK,CAACL,kBAxBd;AAAA,MAwB1BiC,aAxB0B,yBAwB1BA,aAxB0B;AAAA,MAwBXC,cAxBW,yBAwBXA,cAxBW;AAAA,MAyB1BT,YAzB0B,GAyBTpB,KAAK,CAACJ,eAzBG,CAyB1BwB,YAzB0B;AA0BlC,SACM,iCACMhB,OAAO,CAAC0B,IAAR,KAAiB,OAAjB,GACI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAExB,WAAW,GAACL,OAAO,CAAC8B,KAAT,GAAe9B,OAAO,CAAC+B,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAE9B,OAAO,GAACA,OAAO,CAAC+B,GAAT,GAAa,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAE3B,WAAW,GAACL,OAAO,CAACiC,MAAT,GAAgBjC,OAAO,CAACkC,MADlD;AAEI,IAAA,GAAG,EAAE1B,OAFT;AAGI,IAAA,GAAG,EAAE,UAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAQI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,MAAC,SAAD;AACI,IAAA,KAAK,EAAC,oBADV;AAEI,IAAA,KAAK,EAAEY,KAFX;AAGI,IAAA,SAAS,EAAEpB,OAAO,CAACmC,KAHvB;AAII,IAAA,QAAQ,EAAEb,WAJd;AAKI,IAAA,UAAU,EAAE;AACR,oBAAc;AADN,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,EAUQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVR,EAWQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXR,EAYQ,MAAC,SAAD;AACI,IAAA,KAAK,EAAC,KADV;AAEI,IAAA,KAAK,EAAEE,GAFX;AAGI,IAAA,SAAS,EAAExB,OAAO,CAACmC,KAHvB;AAII,IAAA,QAAQ,EAAET,SAJd;AAKI,IAAA,UAAU,EAAE;AACR,oBAAc;AADN,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZR,CARJ,EA8BI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQzB,OAAO,KAAGS,SAAV,GACI,4BACA,MAAC,MAAD;AAAQ,IAAA,OAAO;AAAA;AAAA;AAAA;AAAA,6BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AACT0B,cAAAA,WADS,GACK;AAACJ,gBAAAA,GAAG,EAAE/B,OAAO,CAAC+B;AAAd,eADL;AAEb,kBAAGZ,KAAK,CAACiB,MAAN,GAAa,CAAb,IAAgBjB,KAAK,KAAGnB,OAAO,CAACmB,KAAnC,EAAyCgB,WAAW,CAAChB,KAAZ,GAAoBA,KAApB;AACzC,kBAAGI,GAAG,CAACa,MAAJ,GAAW,CAAX,IAAcb,GAAG,KAAGvB,OAAO,CAACuB,GAA/B,EAAmCY,WAAW,CAACZ,GAAZ,GAAkBA,GAAlB;AACnC,kBAAGjB,KAAK,KAAGG,SAAX,EAAqB0B,WAAW,CAAC7B,KAAZ,GAAoBA,KAApB;;AACf+B,cAAAA,MALO;AAAA;AAAA;AAAA;AAAA;AAAA,yCAKE;AAAA;AAAA;AAAA;AAAA;AAAA,wCACXpC,OADW;AAAA;AAAA,iCACIX,MAAM,CAAC6C,WAAD,CADV;;AAAA;AAAA,sDACyBG,IADzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF;;AAAA,gCAKPD,MALO;AAAA;AAAA;AAAA;;AAQbX,cAAAA,aAAa,CAAC,cAAD,EAAiB,MAAC,YAAD;AAAc,gBAAA,MAAM,EAAEW,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAjB,CAAb;AACAV,cAAAA,cAAc,CAAC,IAAD,CAAd;;AATa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF,EAAf;AAUG,IAAA,IAAI,EAAC,OAVR;AAUgB,IAAA,KAAK,EAAC,SAVtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADA,EAcA,MAAC,MAAD;AAAQ,IAAA,OAAO;AAAA;AAAA;AAAA;AAAA,6BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AACPU,cAAAA,MADO;AAAA;AAAA;AAAA;AAAA;AAAA,yCACE;AAAA;AAAA;AAAA;AAAA;AAAA,yCACXpC,OADW;AAAA;AAAA,iCACIb,SAAS,CAAC,CAACY,OAAO,CAAC+B,GAAT,CAAD,CADb;;AAAA;AAAA,wDAC8BO,IAD9B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF;;AAAA,gCACPD,MADO;AAAA;AAAA;AAAA;;AAIbX,cAAAA,aAAa,CAAC,cAAD,EAAiB,MAAC,YAAD;AAAc,gBAAA,MAAM,EAAEW,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAjB,CAAb;AACAV,cAAAA,cAAc,CAAC,IAAD,CAAd;;AALa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF,EAAf;AAMG,IAAA,IAAI,EAAC,OANR;AAMgB,IAAA,KAAK,EAAC,SANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAdA,CADJ,GA0BI,MAAC,MAAD;AAAQ,IAAA,OAAO;AAAA;AAAA;AAAA;AAAA,6BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,kBAAIrB,KAAK,KAAKG,SAAV,IAAuBc,GAAG,CAACa,MAAJ,GAAa,CAApC,IAAyCjB,KAAK,CAACiB,MAAN,GAAe,CAA5D,EAA+D;AAC3D1B,gBAAAA,QAAQ,CAACD,SAAD,CAAR;AACAD,gBAAAA,UAAU,CAAC,iBAAD,CAAV;AACAY,gBAAAA,QAAQ,CAAC,EAAD,CAAR;AACAI,gBAAAA,MAAM,CAAC,EAAD,CAAN;;AACMa,gBAAAA,MALqD;AAAA;AAAA;AAAA;AAAA;AAAA,2CAK5C;AAAA;AAAA;AAAA;AAAA;AAAA,2CACXpC,OADW;AAAA;AAAA,mCACIZ,MAAM,CAAC;AAACiB,8BAAAA,KAAK,EAAEA,KAAR;AAAeiB,8BAAAA,GAAG,EAAEA,GAApB;AAAyBJ,8BAAAA,KAAK,EAAEA;AAAhC,6BAAD,CADV;;AAAA;AAAA,0DACoDmB,IADpD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAL4C;;AAAA,kCAKrDD,MALqD;AAAA;AAAA;AAAA;;AAQ3DX,gBAAAA,aAAa,CAAC,cAAD,EAAiB,MAAC,YAAD;AAAc,kBAAA,MAAM,EAAEW,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAjB,CAAb;AACAV,gBAAAA,cAAc,CAAC,IAAD,CAAd;AACH,eAVD,MAUO;AACHT,gBAAAA,YAAY,CAAC,oBAAD,CAAZ;AACH;;AAbY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF,EAAf;AAeE,IAAA,IAAI,EAAC,OAfP;AAee,IAAA,KAAK,EAAC,SAfrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDA5BZ,CA9BJ,EA8EI;AACI,IAAA,MAAM,EAAC,SADX;AAEI,IAAA,KAAK,EAAE;AAAEqB,MAAAA,OAAO,EAAE;AAAX,KAFX;AAGI,IAAA,EAAE,EAAEvC,OAAO,GAACA,OAAO,CAAC+B,GAAT,GAAa,KAH5B;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,QAAQ,EAAEpB,iBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9EJ,CADJ,GAwFIX,OAAO,KAAGS,SAAV,GACI;AAAK,IAAA,SAAS,EAAEL,WAAW,GAACL,OAAO,CAAC8B,KAAT,GAAe9B,OAAO,CAAC+B,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,IAAI,EAAE9B,OAAO,CAACuB,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAEnB,WAAW,GAACL,OAAO,CAACiC,MAAT,GAAgBjC,OAAO,CAACkC,MADlD;AAEI,IAAA,GAAG,EAAEjC,OAAO,CAACmB,KAFjB;AAGI,IAAA,GAAG,EAAEnB,OAAO,CAACM,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,GAUK,IAnGf,CADN;AAuGH,CAjIe,CAAhB;;AAmIA,SAASkC,eAAT,CAA0BC,KAA1B,EAAiC;AAC7B,SAAO;AACHtC,IAAAA,IAAI,EAAEsC,KAAK,CAACtC,IADT;AAEHE,IAAAA,GAAG,EAAEoC,KAAK,CAACpC;AAFR,GAAP;AAIH;;AAED,SAASqC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHlD,IAAAA,kBAAkB,EAAED,kBAAkB,CAACC,kBAAD,EAAqBkD,QAArB,CADnC;AAEHjD,IAAAA,eAAe,EAAEF,kBAAkB,CAACE,eAAD,EAAkBiD,QAAlB;AAFhC,GAAP;AAIH;;AAED,eAAe1D,OAAO,CAACuD,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C9C,OAA7C,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport cardAdsStyle from '../../src/styleMUI/ads/cardAds'\r\nimport { connect } from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { deleteAds, addAds, setAds } from '../../src/gql/ads'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport Confirmation from '../dialog/Confirmation'\r\n\r\n\r\nconst CardAds = React.memo((props) => {\r\n    const classes = cardAdsStyle();\r\n    const { element, setList } = props;\r\n    const { profile } = props.user;\r\n    const { isMobileApp } = props.app;\r\n    //addCard\r\n    let [preview, setPreview] = useState(element?element.image:'/static/add.png');\r\n    let [image, setImage] = useState(undefined);\r\n    let handleChangeImage = ((event) => {\r\n        if(event.target.files[0].size/1024/1024<20){\r\n            setImage(event.target.files[0])\r\n            setPreview(URL.createObjectURL(event.target.files[0]))\r\n        } else {\r\n            showSnackBar('Файл слишком большой')\r\n        }\r\n    })\r\n    let [title, setTitle] = useState(element?element.title:'');\r\n    let handleTitle =  (event) => {\r\n        setTitle(event.target.value)\r\n    };\r\n    let [url, setUrl] = useState(element?element.url:'');\r\n    let handleUrl =  (event) => {\r\n        setUrl(event.target.value)\r\n    };\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    const { showSnackBar } = props.snackbarActions;\r\n    return (\r\n          <> {\r\n                profile.role === 'admin' ?\r\n                    <Card className={isMobileApp?classes.cardM:classes.cardD}>\r\n                        <label htmlFor={element?element._id:'add'}>\r\n                            <img\r\n                                className={isMobileApp?classes.mediaM:classes.mediaD}\r\n                                src={preview}\r\n                                alt={'Изменить'}\r\n                            />\r\n                        </label>\r\n                        <CardContent>\r\n                                <TextField\r\n                                    label='Имя'\r\n                                    value={title}\r\n                                    className={classes.input}\r\n                                    onChange={handleTitle}\r\n                                    inputProps={{\r\n                                        'aria-label': 'description',\r\n                                    }}\r\n                                />\r\n                                <br/>\r\n                                <br/>\r\n                                <TextField\r\n                                    label='URL'\r\n                                    value={url}\r\n                                    className={classes.input}\r\n                                    onChange={handleUrl}\r\n                                    inputProps={{\r\n                                        'aria-label': 'description',\r\n                                    }}\r\n                                />\r\n                            </CardContent>\r\n                        <CardActions>\r\n                            {\r\n                                element!==undefined?\r\n                                    <>\r\n                                    <Button onClick={async()=>{\r\n                                        let editElement = {_id: element._id}\r\n                                        if(title.length>0&&title!==element.title)editElement.title = title\r\n                                        if(url.length>0&&url!==element.url)editElement.url = url\r\n                                        if(image!==undefined)editElement.image = image\r\n                                        const action = async() => {\r\n                                            setList((await setAds(editElement)).adss)\r\n                                        }\r\n                                        setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                        showMiniDialog(true)\r\n                                    }} size='small' color='primary'>\r\n                                        Сохранить\r\n                                    </Button>\r\n                                    <Button onClick={async()=>{\r\n                                        const action = async() => {\r\n                                            setList((await deleteAds([element._id])).adss)\r\n                                        }\r\n                                        setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                        showMiniDialog(true)\r\n                                    }} size='small' color='primary'>\r\n                                        Удалить\r\n                                    </Button>\r\n                                    </>\r\n                                    :\r\n                                    <Button onClick={async()=> {\r\n                                        if (image !== undefined && url.length > 0 && title.length > 0) {\r\n                                            setImage(undefined)\r\n                                            setPreview('/static/add.png')\r\n                                            setTitle('')\r\n                                            setUrl('')\r\n                                            const action = async() => {\r\n                                                setList((await addAds({image: image, url: url, title: title})).adss)\r\n                                            }\r\n                                            setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                            showMiniDialog(true)\r\n                                        } else {\r\n                                            showSnackBar('Заполните все поля')\r\n                                        }\r\n                                    }\r\n                                    } size='small' color='primary'>\r\n                                        Добавить\r\n                                    </Button>\r\n                            }\r\n                        </CardActions>\r\n                        <input\r\n                            accept='image/*'\r\n                            style={{ display: 'none' }}\r\n                            id={element?element._id:'add'}\r\n                            type='file'\r\n                            onChange={handleChangeImage}\r\n                        />\r\n                    </Card>\r\n                    :\r\n                    element!==undefined?\r\n                        <div className={isMobileApp?classes.cardM:classes.cardD}>\r\n                            <a href={element.url}>\r\n                                <img\r\n                                    className={isMobileApp?classes.mediaM:classes.mediaD}\r\n                                    alt={element.title}\r\n                                    src={element.image}\r\n                                />\r\n                            </a>\r\n                        </div>\r\n                        :null\r\n            }</>\r\n    );\r\n})\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardAds)"]},"metadata":{},"sourceType":"module"}