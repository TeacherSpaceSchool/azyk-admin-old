{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\pages\\\\employments.js\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState, useEffect } from 'react';\nimport App from '../layouts/App';\nimport pageListStyle from '../src/styleMUI/employment/employmentList';\nimport { getEmployments } from '../src/gql/employment';\nimport CardEmployment from '../components/employment/CardEmployment';\nimport { connect } from 'react-redux';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Link from 'next/link';\nimport Router from 'next/router';\nconst Employment = React.memo(props => {\n  const {\n    profile\n  } = props.user;\n  const classes = pageListStyle();\n  const {\n    data\n  } = props;\n  let {\n    0: list,\n    1: setList\n  } = useState(data.employments);\n  const {\n    search,\n    filter,\n    sort\n  } = props.app;\n  useEffect(() => {\n    (async () => {\n      setList((await getEmployments({\n        search: search,\n        sort: sort,\n        filter: filter\n      })).employments);\n    })();\n  }, [filter, sort, search]);\n  return __jsx(App, {\n    filters: data.filterEmployment,\n    sorts: data.sortEmployment,\n    pageName: \"\\u0421\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0438\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"\\u0421\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0438\")), __jsx(\"div\", {\n    className: classes.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, list ? list.map(element => __jsx(CardEmployment, {\n    key: element._id,\n    setList: setList,\n    element: element,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })) : null), ['admin', 'организация'].includes(profile.role) ? __jsx(Link, {\n    href: \"/employment/[id]\",\n    as: `/employment/new`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: classes.fab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))) : null);\n});\n\nEmployment.getInitialProps = async function (ctx) {\n  if (!['admin', 'организация', 'менеджер'].includes(ctx.store.getState().user.profile.role)) if (ctx.res) {\n    ctx.res.writeHead(302, {\n      Location: '/'\n    });\n    ctx.res.end();\n  } else Router.push('/');\n  return {\n    data: await getEmployments({\n      search: '',\n      sort: '-updatedAt',\n      filter: ''\n    })\n  };\n};\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(Employment);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\pages\\employments.js"],"names":["Head","React","useState","useEffect","App","pageListStyle","getEmployments","CardEmployment","connect","Fab","AddIcon","Link","Router","Employment","memo","props","profile","user","classes","data","list","setList","employments","search","filter","sort","app","filterEmployment","sortEmployment","page","map","element","_id","includes","role","fab","getInitialProps","ctx","store","getState","res","writeHead","Location","end","push","mapStateToProps","state"],"mappings":"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","sourcesContent":["import Head from 'next/head';\r\nimport React, { useState, useEffect } from 'react';\r\nimport App from '../layouts/App';\r\nimport pageListStyle from '../src/styleMUI/employment/employmentList'\r\nimport {getEmployments} from '../src/gql/employment'\r\nimport CardEmployment from '../components/employment/CardEmployment'\r\nimport { connect } from 'react-redux'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Link from 'next/link';\r\nimport Router from 'next/router'\r\n\r\nconst Employment = React.memo((props) => {\r\n    const { profile } = props.user;\r\n    const classes = pageListStyle();\r\n    const { data } = props;\r\n    let [list, setList] = useState(data.employments);\r\n    const { search, filter, sort } = props.app;\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            setList((await getEmployments({search: search, sort: sort, filter: filter})).employments)\r\n        })()\r\n    },[filter, sort, search])\r\n    return (\r\n        <App filters={data.filterEmployment} sorts={data.sortEmployment} pageName='Сотрудники'>\r\n            <Head>\r\n                <title>Сотрудники</title>\r\n            </Head>\r\n            <div className={classes.page}>\r\n                {list?list.map((element)=>\r\n                    <CardEmployment key={element._id} setList={setList} element={element}/>\r\n                ):null}\r\n            </div>\r\n            {['admin', 'организация'].includes(profile.role)?\r\n                <Link href='/employment/[id]' as={`/employment/new`}>\r\n                    <Fab color='primary' aria-label='add' className={classes.fab}>\r\n                        <AddIcon />\r\n                    </Fab>\r\n                </Link>\r\n                :\r\n                null\r\n            }\r\n        </App>\r\n    )\r\n})\r\n\r\nEmployment.getInitialProps = async function(ctx) {\r\n    if(!['admin', 'организация', 'менеджер'].includes(ctx.store.getState().user.profile.role))\r\n        if(ctx.res) {\r\n            ctx.res.writeHead(302, {\r\n                Location: '/'\r\n            })\r\n            ctx.res.end()\r\n        } else\r\n            Router.push('/')\r\n    return {\r\n        data: await getEmployments({search: '', sort: '-updatedAt', filter: ''})\r\n    };\r\n};\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Employment);"]},"metadata":{},"sourceType":"module"}