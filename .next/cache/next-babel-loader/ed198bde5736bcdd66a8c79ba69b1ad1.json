{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState, useEffect } from 'react';\nimport App from '../layouts/App';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as userActions from '../redux/actions/user';\nimport { getCategorys } from '../src/gql/category';\nimport pageListStyle from '../src/styleMUI/category/categoryList';\nimport CardCategory from '../components/category/CardCategory';\nconst Index = React.memo(props => {\n  const classes = pageListStyle();\n  const {\n    data\n  } = props;\n  let {\n    0: list,\n    1: setList\n  } = useState(data.categorys);\n  const {\n    search,\n    filter,\n    sort\n  } = props.app;\n  const {\n    profile\n  } = props.user;\n  useEffect(() => {\n    (async () => {\n      setList((await getCategorys({\n        search: search,\n        sort: sort,\n        filter: filter\n      })).categorys);\n    })();\n  }, [filter, sort, search]);\n  return __jsx(App, {\n    filters: data.filterCategory,\n    sorts: data.sortCategory,\n    pageName: \"\\u0422\\u043E\\u0432\\u0430\\u0440\\u044B\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"\\u0422\\u043E\\u0432\\u0430\\u0440\\u044B\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"Azyk\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: \"Azyk\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: \"Azyk\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: \"website\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    rel: \"canonical\",\n    href: `http://${process.env.URL}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: classes.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, profile.role === 'admin' ? __jsx(React.Fragment, null, __jsx(CardCategory, {\n    setList: setList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })) : null, __jsx(CardCategory, {\n    element: {\n      image: '/static/add.png',\n      name: 'Все подкатегории',\n      _id: 'all'\n    },\n    setList: \"all\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), list ? list.map(element => element.name !== 'Не задано' ? __jsx(CardCategory, {\n    key: element._id,\n    setList: setList,\n    element: element,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }) : null) : null));\n});\n\nIndex.getInitialProps = async function () {\n  return {\n    data: await getCategorys({\n      search: '',\n      sort: '-updatedAt',\n      filter: ''\n    })\n  };\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    userActions: bindActionCreators(userActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\pages\\index.js"],"names":["Head","React","useState","useEffect","App","connect","bindActionCreators","userActions","getCategorys","pageListStyle","CardCategory","Index","memo","props","classes","data","list","setList","categorys","search","filter","sort","app","profile","user","filterCategory","sortCategory","process","env","URL","page","role","image","name","_id","map","element","getInitialProps","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import Head from 'next/head';\r\nimport React, { useState, useEffect } from 'react';\r\nimport App from '../layouts/App';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as userActions from '../redux/actions/user'\r\nimport { getCategorys } from '../src/gql/category'\r\nimport pageListStyle from '../src/styleMUI/category/categoryList'\r\nimport CardCategory from '../components/category/CardCategory'\r\n\r\nconst Index = React.memo((props) => {\r\n    const classes = pageListStyle();\r\n    const { data } = props;\r\n    let [list, setList] = useState(data.categorys);\r\n    const { search, filter, sort } = props.app;\r\n    const { profile } = props.user;\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            setList((await getCategorys({search: search, sort: sort, filter: filter})).categorys)\r\n        })()\r\n    },[filter, sort, search])\r\n    return (\r\n        <App filters={data.filterCategory} sorts={data.sortCategory} pageName='Товары'>\r\n            <Head>\r\n                <title>Товары</title>\r\n                <meta name='description' content='Azyk' />\r\n                <meta property='og:title' content='Azyk' />\r\n                <meta property='og:description' content='Azyk' />\r\n                <meta property='og:type' content='website' />\r\n                <meta property='og:image' content='' />\r\n                <link rel='canonical' href={`http://${process.env.URL}`}/>\r\n            </Head>\r\n            <div className={classes.page}>\r\n                {profile.role==='admin'?\r\n                    <>\r\n                    <CardCategory setList={setList}/>\r\n                    </>\r\n                    :\r\n                    null\r\n                }\r\n                <CardCategory element={{image: '/static/add.png', name: 'Все подкатегории', _id: 'all'}} setList='all'/>\r\n                {list?list.map((element)=>\r\n                    element.name!=='Не задано'?\r\n                        <CardCategory key={element._id} setList={setList} element={element}/>\r\n                        :\r\n                        null\r\n                ):null}\r\n            </div>\r\n        </App>\r\n    )\r\n})\r\n\r\nIndex.getInitialProps = async function() {\r\n    return {\r\n        data: await getCategorys({search: '', sort: '-updatedAt', filter: ''})\r\n    };\r\n};\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        user: state.user,\r\n        app: state.app,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n     }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);"]},"metadata":{},"sourceType":"module"}