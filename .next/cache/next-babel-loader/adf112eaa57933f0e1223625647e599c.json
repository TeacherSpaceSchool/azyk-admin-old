{"ast":null,"code":"import { gql } from 'apollo-boost';\nimport { SingletonApolloClient } from '../singleton/client';\nimport { SingletonStore } from '../singleton/store';\nexport const getAds = async () => {\n  try {\n    const client = new SingletonApolloClient().getClient();\n    let res = await client.query({\n      query: gql`\n                    query {\n                        ads {\n                            _id\n                            image\n                            url\n                            title\n                            createdAt\n                          }\n                    }`\n    });\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const getAdss = async ({\n  search: search,\n  sort: sort,\n  filter: filter\n}) => {\n  try {\n    const client = new SingletonApolloClient().getClient();\n    let res = await client.query({\n      variables: {\n        search: search,\n        sort: sort,\n        filter: filter\n      },\n      query: gql`\n                    query ($search: String!, $sort: String!, $filter: String!) {\n                        adss(search: $search, sort: $sort, filter: $filter) {\n                            _id\n                            image\n                            url\n                            title\n                            createdAt\n                          }\n                          sortAds {\n                           name\n                            field\n                          }\n                          filterAds {\n                           name\n                           value\n                          }\n                    }`\n    });\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const deleteAds = async ids => {\n  try {\n    const client = new SingletonApolloClient().getClient();\n    await client.mutate({\n      variables: {\n        _id: ids\n      },\n      mutation: gql`\n                    mutation ($_id: [ID]!) {\n                        deleteAds(_id: $_id) {\n                             data\n                        }\n                    }`\n    });\n    return await getAdss(new SingletonStore().getStore().getState().app);\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const addAds = async element => {\n  try {\n    const client = new SingletonApolloClient().getClient();\n    await client.mutate({\n      variables: element,\n      mutation: gql`\n                    mutation ($image: Upload!, $url: String!, $title: String!) {\n                        addAds(image: $image, url: $url, title: $title) {\n                             data\n                        }\n                    }`\n    });\n    let list = await getAdss(new SingletonStore().getStore().getState().app);\n    return list;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const setAds = async element => {\n  try {\n    const client = new SingletonApolloClient().getClient();\n    await client.mutate({\n      variables: element,\n      mutation: gql`\n                    mutation ($_id: ID!, $image: Upload, $url: String, $title: String) {\n                        setAds(_id: $_id, image: $image, url: $url, title: $title) {\n                             data\n                        }\n                    }`\n    });\n    let list = await getAdss(new SingletonStore().getStore().getState().app);\n    return list;\n  } catch (err) {\n    console.error(err);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}