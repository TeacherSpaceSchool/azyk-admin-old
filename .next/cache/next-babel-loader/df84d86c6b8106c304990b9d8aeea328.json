{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport drawerStyle from '../../src/styleMUI/drawer';\nimport * as appActions from '../../redux/actions/app';\nimport * as userActions from '../../redux/actions/user';\nimport Drawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ReorderIcon from '@material-ui/icons/ViewList';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport CopyrightIcon from '@material-ui/icons/Loyalty';\nimport InfoIcon from '@material-ui/icons/Info';\nimport GroupIcon from '@material-ui/icons/Group';\nimport ReceiptIcon from '@material-ui/icons/Receipt';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport ArtTrackIcon from '@material-ui/icons/ArtTrack';\nimport MoneyIcon from '@material-ui/icons/Money';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore';\nimport UnfoldLessIcon from '@material-ui/icons/UnfoldLess';\nimport { withStyles } from '@material-ui/core/styles';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nconst MyDrawer = React.memo(props => {\n  const {\n    classes,\n    category,\n    subcategory\n  } = props;\n  const {\n    drawer,\n    isMobileApp\n  } = props.app;\n  const {\n    profile,\n    authenticated\n  } = props.user;\n  const {\n    showDrawer\n  } = props.appActions;\n  let variant = isMobileApp ? 'temporary' : 'permanent';\n  const open = isMobileApp ? drawer : true;\n  const router = useRouter();\n  const {\n    0: uncoverBonus,\n    1: setUncoverBonus\n  } = useState(null);\n  return __jsx(Drawer, {\n    disableDiscovery: true,\n    variant: variant,\n    className: classes.drawer,\n    open: open,\n    onClose: () => showDrawer(false),\n    classes: {\n      paper: classes.drawerPaper\n    }\n  }, isMobileApp ? null : __jsx(\"div\", {\n    className: classes.toolbar\n  }), __jsx(Divider, null), __jsx(List, null, ['экспедитор', 'организация', 'менеджер'].includes(profile.role) ? __jsx(Link, {\n    href: \"/items/[id]\",\n    as: \"/items/all\"\n  }, __jsx(ListItem, {\n    style: {\n      background: router.pathname === '/' || router.pathname.includes('subcategory') || router.pathname.includes('item') ? '#f5f5f5' : '#ffffff'\n    },\n    button: true,\n    onClick: () => {\n      showDrawer(false);\n    }\n  }, __jsx(ListItemIcon, null, __jsx(ReorderIcon, {\n    color: \"inherit\"\n  })), __jsx(ListItemText, {\n    primary: \"\\u0422\\u043E\\u0432\\u0430\\u0440\\u044B\"\n  }))) : __jsx(React.Fragment, null, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(ListItem, {\n    style: {\n      background: router.pathname === '/' || router.pathname.includes('subcategory') || router.pathname.includes('item') ? '#f5f5f5' : '#ffffff'\n    },\n    button: true,\n    onClick: () => {\n      showDrawer(false);\n    }\n  }, __jsx(ListItemIcon, null, __jsx(ReorderIcon, {\n    color: \"inherit\"\n  })), __jsx(ListItemText, {\n    primary: \"\\u0422\\u043E\\u0432\\u0430\\u0440\\u044B\"\n  }))), category ? __jsx(React.Fragment, null, __jsx(Divider, null), __jsx(Link, {\n    href: \"/subcategory/[id]\",\n    as: `/subcategory/${category._id}`\n  }, __jsx(ListItem, {\n    style: {\n      marginLeft: 16,\n      background: '#f5f5f5'\n    },\n    button: true\n  }, __jsx(ListItemText, {\n    primary: category.name\n  }))), subcategory ? __jsx(React.Fragment, null, __jsx(Divider, null), __jsx(Link, {\n    href: \"/items/[id]\",\n    as: `/items/${subcategory._id}`\n  }, __jsx(ListItem, {\n    style: {\n      marginLeft: 32,\n      background: '#f5f5f5'\n    },\n    button: true\n  }, __jsx(ListItemText, {\n    primary: subcategory.name\n  })))) : null) : null), __jsx(Divider, null), ['admin', 'client', 'организация', 'менеджер'].includes(profile.role) || !authenticated ? __jsx(React.Fragment, null, __jsx(ListItem, {\n    style: {\n      background: router.pathname.includes('bonus') ? '#f5f5f5' : '#ffffff'\n    },\n    button: true,\n    onClick: () => {\n      setUncoverBonus(!uncoverBonus);\n    }\n  }, __jsx(ListItemIcon, null, __jsx(MoneyIcon, {\n    color: \"inherit\"\n  })), __jsx(ListItemText, {\n    primary: \"\\u0411\\u043E\\u043D\\u0443\\u0441\\u044B\"\n  }), __jsx(ListItemIcon, null, uncoverBonus ? __jsx(UnfoldMoreIcon, {\n    color: \"inherit\"\n  }) : __jsx(UnfoldLessIcon, {\n    color: \"inherit\"\n  }))), __jsx(Divider, null), uncoverBonus ? __jsx(React.Fragment, null, __jsx(Link, {\n    href: \"/bonus\"\n  }, __jsx(ListItem, {\n    style: {\n      marginLeft: 16,\n      background: router.pathname === '/bonus' ? '#f5f5f5' : '#ffffff'\n    },\n    button: true,\n    onClick: () => {\n      setUncoverBonus(!uncoverBonus);\n    }\n  }, __jsx(ListItemText, {\n    primary: ['организация', 'менеджер'].includes(profile.role) ? 'Бонусы компании' : 'Бонусы компаний'\n  }))), __jsx(Divider, null), ['admin', 'client', 'организация', 'менеджер'].includes(profile.role) ? __jsx(React.Fragment, null, __jsx(Link, {\n    href: \"/bonusclient\"\n  }, __jsx(ListItem, {\n    style: {\n      marginLeft: 16,\n      background: router.pathname === '/bonusclient' ? '#f5f5f5' : '#ffffff'\n    },\n    button: true,\n    onClick: () => {\n      setUncoverBonus(!uncoverBonus);\n    }\n  }, __jsx(ListItemText, {\n    primary: ['admin', 'организация', 'менеджер'].includes(profile.role) ? 'Бонусы клиентов' : 'Мои бонусы'\n  }))), __jsx(Divider, null)) : null) : null) : null, ['admin', 'client'].includes(profile.role) || !authenticated ? __jsx(React.Fragment, null, __jsx(Link, {\n    href: \"/ads\"\n  }, __jsx(ListItem, {\n    style: {\n      background: router.pathname === '/ads' ? '#f5f5f5' : '#ffffff'\n    },\n    button: true,\n    onClick: () => {\n      showDrawer(false);\n    }\n  }, __jsx(ListItemIcon, null, __jsx(WhatshotIcon, {\n    color: \"inherit\"\n  })), __jsx(ListItemText, {\n    primary: \"\\u0410\\u043A\\u0446\\u0438\\u0438\"\n  }))), __jsx(Divider, null)) : null, ['admin', 'организация', 'менеджер'].includes(profile.role) ? __jsx(React.Fragment, null, __jsx(Link, {\n    href: '/clients'\n  }, __jsx(ListItem, {\n    style: {\n      background: router.pathname.includes('client') && router.pathname !== '/bonusclient' ? '#f5f5f5' : '#ffffff'\n    },\n    button: true,\n    onClick: () => {\n      showDrawer(false);\n    }\n  }, __jsx(ListItemIcon, null, __jsx(GroupIcon, {\n    color: \"inherit\"\n  })), __jsx(ListItemText, {\n    primary: \"\\u041A\\u043B\\u0438\\u0435\\u043D\\u0442\\u044B\"\n  }))), __jsx(Divider, null)) : null, ['client', 'admin', 'организация', 'менеджер'].includes(profile.role) ? __jsx(React.Fragment, null, __jsx(Link, {\n    href: \"/orders\"\n  }, __jsx(ListItem, {\n    style: {\n      background: router.pathname === '/orders' ? '#f5f5f5' : '#ffffff'\n    },\n    button: true,\n    onClick: () => {\n      showDrawer(false);\n    }\n  }, __jsx(ListItemIcon, null, __jsx(ReceiptIcon, {\n    color: \"inherit\"\n  })), __jsx(ListItemText, {\n    primary: \"\\u0417\\u0430\\u043A\\u0430\\u0437\\u044B\"\n  }))), __jsx(Divider, null)) : null, ['admin', 'организация', 'менеджер', 'экспедитор'].includes(profile.role) ? __jsx(React.Fragment, null, __jsx(Link, {\n    href: \"/routes\"\n  }, __jsx(ListItem, {\n    style: {\n      background: router.pathname === '/routes' ? '#f5f5f5' : '#ffffff'\n    },\n    button: true,\n    onClick: () => {\n      showDrawer(false);\n    }\n  }, __jsx(ListItemIcon, null, __jsx(FormatListNumberedIcon, {\n    color: \"inherit\"\n  })), __jsx(ListItemText, {\n    primary: \"\\u041C\\u0430\\u0440\\u0448\\u0440\\u0443\\u0442\\u043D\\u044B\\u0435 \\u043B\\u0438\\u0441\\u0442\\u044B\"\n  }))), __jsx(Divider, null)) : null, ['экспедитор', 'организация', 'менеджер'].includes(profile.role) ? __jsx(Link, {\n    href: \"/organization/[id]\",\n    as: `/organization/${profile.organization}`\n  }, __jsx(ListItem, {\n    style: {\n      background: router.pathname.includes('organization') ? '#f5f5f5' : '#ffffff'\n    },\n    button: true,\n    onClick: () => {\n      showDrawer(false);\n    }\n  }, __jsx(ListItemIcon, null, __jsx(LocationCityIcon, {\n    color: \"inherit\"\n  })), __jsx(ListItemText, {\n    primary: \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n  }))) : __jsx(Link, {\n    href: \"/organizations\"\n  }, __jsx(ListItem, {\n    style: {\n      background: router.pathname.includes('organization') ? '#f5f5f5' : '#ffffff'\n    },\n    button: true,\n    onClick: () => {\n      showDrawer(false);\n    }\n  }, __jsx(ListItemIcon, null, __jsx(LocationCityIcon, {\n    color: \"inherit\"\n  })), __jsx(ListItemText, {\n    primary: \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438\"\n  }))), __jsx(Divider, null), ['admin', 'client'].includes(profile.role) || !authenticated ? __jsx(React.Fragment, null, __jsx(Link, {\n    href: \"/brands\"\n  }, __jsx(ListItem, {\n    style: {\n      background: router.pathname.includes('brand') ? '#f5f5f5' : '#ffffff'\n    },\n    button: true,\n    onClick: () => {\n      showDrawer(false);\n    }\n  }, __jsx(ListItemIcon, null, __jsx(CopyrightIcon, {\n    color: \"inherit\"\n  })), __jsx(ListItemText, {\n    primary: \"\\u0411\\u0440\\u0435\\u043D\\u0434\\u044B\"\n  }))), __jsx(Divider, null)) : null, ['admin', 'организация'].includes(profile.role) ? __jsx(React.Fragment, null, __jsx(Link, {\n    href: '/employments'\n  }, __jsx(ListItem, {\n    style: {\n      background: router.pathname.includes('employment') ? '#f5f5f5' : '#ffffff'\n    },\n    button: true,\n    onClick: () => {\n      showDrawer(false);\n    }\n  }, __jsx(ListItemIcon, null, __jsx(GroupIcon, {\n    color: \"inherit\"\n  })), __jsx(ListItemText, {\n    primary: \"\\u0421\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0438\"\n  }))), __jsx(Divider, null)) : null, ['admin', 'client'].includes(profile.role) || !authenticated ? __jsx(React.Fragment, null, __jsx(Link, {\n    href: \"/blog\"\n  }, __jsx(ListItem, {\n    style: {\n      background: router.pathname === '/blog' ? '#f5f5f5' : '#ffffff'\n    },\n    button: true,\n    onClick: () => {\n      showDrawer(false);\n    }\n  }, __jsx(ListItemIcon, null, __jsx(ArtTrackIcon, {\n    color: \"inherit\"\n  })), __jsx(ListItemText, {\n    primary: \"\\u0411\\u043B\\u043E\\u0433\"\n  }))), __jsx(Divider, null)) : null, __jsx(Link, {\n    href: '/contact'\n  }, __jsx(ListItem, {\n    style: {\n      background: router.pathname === '/contact' ? '#f5f5f5' : '#ffffff'\n    },\n    button: true,\n    onClick: () => {\n      showDrawer(false);\n    }\n  }, __jsx(ListItemIcon, null, __jsx(InfoIcon, {\n    color: \"inherit\"\n  })), __jsx(ListItemText, {\n    primary: \"\\u041A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u044B\"\n  }))), __jsx(Divider, null)));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    appActions: bindActionCreators(appActions, dispatch),\n    userActions: bindActionCreators(userActions, dispatch),\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(drawerStyle)(MyDrawer));","map":null,"metadata":{},"sourceType":"module"}