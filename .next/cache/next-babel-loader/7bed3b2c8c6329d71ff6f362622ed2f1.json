{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\pages\\\\clients.js\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState, useEffect } from 'react';\nimport App from '../layouts/App';\nimport pageListStyle from '../src/styleMUI/client/clientList';\nimport { getClients } from '../src/gql/client';\nimport CardClient from '../components/client/CardClient';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nconst Client = React.memo(props => {\n  const classes = pageListStyle();\n  const {\n    data\n  } = props;\n  let {\n    0: list,\n    1: setList\n  } = useState(data.clients);\n  const {\n    search,\n    filter,\n    sort\n  } = props.app;\n  useEffect(() => {\n    (async () => {\n      setList((await getClients({\n        search: search,\n        sort: sort,\n        filter: filter\n      })).clients);\n    })();\n  }, [filter, sort, search]);\n  return __jsx(App, {\n    filters: data.filterClient,\n    sorts: data.sortClient,\n    pageName: \"\\u041A\\u043B\\u0438\\u0435\\u043D\\u0442\\u044B\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"\\u041A\\u043B\\u0438\\u0435\\u043D\\u0442\\u044B\")), __jsx(\"div\", {\n    className: classes.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, list ? list.map(element => __jsx(CardClient, {\n    key: element._id,\n    setList: setList,\n    element: element,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })) : null));\n});\n\nClient.getInitialProps = async function (ctx) {\n  let role = ctx.store.getState().user.profile.role;\n  let authenticated = ctx.store.getState().user.authenticated;\n  if (authenticated && !['admin', 'организация', 'менеджер'].includes(role)) if (ctx.res) {\n    ctx.res.writeHead(302, {\n      Location: '/'\n    });\n    ctx.res.end();\n  } else Router.push('/');\n  return {\n    data: await getClients({\n      search: '',\n      sort: '-updatedAt',\n      filter: ''\n    })\n  };\n};\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(Client);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\pages\\clients.js"],"names":["Head","React","useState","useEffect","App","pageListStyle","getClients","CardClient","connect","Router","Client","memo","props","classes","data","list","setList","clients","search","filter","sort","app","filterClient","sortClient","page","map","element","_id","getInitialProps","ctx","role","store","getState","user","profile","authenticated","includes","res","writeHead","Location","end","push","mapStateToProps","state"],"mappings":"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","sourcesContent":["import Head from 'next/head';\r\nimport React, { useState, useEffect } from 'react';\r\nimport App from '../layouts/App';\r\nimport pageListStyle from '../src/styleMUI/client/clientList'\r\nimport {getClients} from '../src/gql/client'\r\nimport CardClient from '../components/client/CardClient'\r\nimport { connect } from 'react-redux'\r\nimport Router from 'next/router'\r\n\r\nconst Client = React.memo((props) => {\r\n    const classes = pageListStyle();\r\n    const { data } = props;\r\n    let [list, setList] = useState(data.clients);\r\n    const { search, filter, sort } = props.app;\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            setList((await getClients({search: search, sort: sort, filter: filter})).clients)\r\n        })()\r\n    },[filter, sort, search])\r\n    return (\r\n        <App filters={data.filterClient} sorts={data.sortClient} pageName='Клиенты'>\r\n            <Head>\r\n                <title>Клиенты</title>\r\n            </Head>\r\n            <div className={classes.page}>\r\n                {list?list.map((element)=>\r\n                    <CardClient key={element._id} setList={setList} element={element}/>\r\n                ):null}\r\n            </div>\r\n        </App>\r\n    )\r\n})\r\n\r\nClient.getInitialProps = async function(ctx) {\r\n    let role = ctx.store.getState().user.profile.role\r\n    let authenticated = ctx.store.getState().user.authenticated\r\n    if(authenticated&&!['admin', 'организация', 'менеджер'].includes(role))\r\n        if(ctx.res) {\r\n            ctx.res.writeHead(302, {\r\n                Location: '/'\r\n            })\r\n            ctx.res.end()\r\n        } else\r\n            Router.push('/')\r\n    return {\r\n        data: await getClients({search: '', sort: '-updatedAt', filter: ''})\r\n    };\r\n};\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Client);"]},"metadata":{},"sourceType":"module"}