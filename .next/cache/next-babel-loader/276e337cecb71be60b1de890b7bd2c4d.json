{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState, useEffect } from 'react';\nimport App from '../layouts/App';\nimport { connect } from 'react-redux';\nimport pageListStyle from '../src/styleMUI/favorite/favoriteList';\nimport CardItem from '../components/items/CardItem';\nimport { favorites } from '../src/gql/items';\nconst Items = React.memo(props => {\n  const classes = pageListStyle();\n  const {\n    data\n  } = props;\n  let {\n    0: list,\n    1: setList\n  } = useState(data.favorites);\n  const {\n    search\n  } = props.app;\n  const {\n    authenticated\n  } = props.user;\n  useEffect(() => {\n    (async () => {\n      if (!authenticated && localStorage.favorites) {\n        let favorites = JSON.parse(localStorage.favorites);\n        setList(favorites.filter(favorite => favorite.name.includes(search)));\n      } else setList((await favorites({\n        search: search\n      })).favorites);\n    })();\n  }, [search]);\n  useEffect(() => {\n    (async () => {\n      if (!authenticated) {\n        if (!localStorage.favorites) {\n          localStorage.favorites = _JSON$stringify([]);\n        }\n\n        setList(JSON.parse(localStorage.favorites));\n      }\n    })();\n  }, []);\n\n  let getList = async () => {\n    setList((await favorites({\n      search: search\n    })).favorites);\n  };\n\n  return __jsx(App, {\n    getList: getList,\n    pageName: \"\\u0418\\u0437\\u0431\\u0440\\u0430\\u043D\\u043D\\u043E\\u0435\"\n  }, __jsx(Head, null, __jsx(\"title\", null, \"\\u0418\\u0437\\u0431\\u0440\\u0430\\u043D\\u043D\\u043E\\u0435\")), __jsx(\"div\", {\n    className: classes.page\n  }, list ? list.map(element => __jsx(CardItem, {\n    setList: setList,\n    setFavorites: setList,\n    getList: getList,\n    key: element._id,\n    element: element\n  })) : null));\n});\n\nItems.getInitialProps = async function () {\n  return {\n    data: await favorites({\n      search: ''\n    })\n  };\n};\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(Items);","map":null,"metadata":{},"sourceType":"module"}