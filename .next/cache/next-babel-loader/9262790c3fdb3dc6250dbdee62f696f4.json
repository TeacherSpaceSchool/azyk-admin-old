{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as appActions from '../../redux/actions/app';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport Done from '@material-ui/icons/Done';\nimport Clear from '@material-ui/icons/Clear';\nimport IconButton from '@material-ui/core/IconButton';\nimport dialogContentStyle from '../../src/styleMUI/dialogContent';\nvar Confirmation = React.memo(function (props) {\n  var showMiniDialog = props.mini_dialogActions.showMiniDialog;\n  var showSnackBar = props.snackbarActions.showSnackBar;\n  var showLoad = props.appActions.showLoad;\n  var classes = props.classes,\n      action = props.action;\n  return __jsx(\"div\", {\n    className: classes.line\n  }, __jsx(IconButton, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return showMiniDialog(false);\n\n            case 3:\n              _context.next = 5;\n              return showLoad(true);\n\n            case 5:\n              _context.next = 7;\n              return action();\n\n            case 7:\n              _context.next = 9;\n              return showLoad(false);\n\n            case 9:\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              showSnackBar('Ошибка');\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    })),\n    \"aria-label\": \"Delete\"\n  }, __jsx(Done, {\n    className: classes.button\n  })), __jsx(IconButton, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              showMiniDialog(false);\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })),\n    \"aria-label\": \"Cancel\"\n  }, __jsx(Clear, {\n    className: classes.button\n  })));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    mini_dialog: state.mini_dialog\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    appActions: bindActionCreators(appActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(Confirmation));","map":null,"metadata":{},"sourceType":"module"}