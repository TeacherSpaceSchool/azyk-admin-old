{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nvar _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\pages\\\\client\\\\[id].js\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState, useRef, useEffect } from 'react';\nimport App from '../../layouts/App';\nimport { connect } from 'react-redux';\nimport clientStyle from '../../src/styleMUI/client/client';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as userActions from '../../redux/actions/user';\nimport { getClient, onoffClient, setClient, addClient } from '../../src/gql/client';\nimport Remove from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { urlMain } from '../../redux/constants/other';\nimport Confirmation from '../../components/dialog/Confirmation';\nimport Geo from '../../components/dialog/Geo';\nimport { useRouter } from 'next/router';\nimport { pdDatePicker } from '../../src/lib';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport Router from 'next/router';\nconst Client = React.memo(props => {\n  const {\n    profile\n  } = props.user;\n  const classes = clientStyle();\n  const {\n    data\n  } = props;\n  const {\n    isMobileApp\n  } = props.app;\n  const {\n    showSnackBar\n  } = props.snackbarActions;\n  let {\n    0: status,\n    1: setStatus\n  } = useState(data.client && data.client.user ? data.client.user.status : '');\n  let {\n    0: name,\n    1: setName\n  } = useState(data.client && data.client.name ? data.client.name : '');\n  let {\n    0: email,\n    1: setEmail\n  } = useState(data.client && data.client.email ? data.client.email : '');\n  let {\n    0: phone,\n    1: setPhone\n  } = useState(data.client && data.client.phone ? data.client.phone : []);\n\n  let addPhone = () => {\n    phone = [...phone, ''];\n    setPhone(phone);\n  };\n\n  let editPhone = (event, idx) => {\n    phone[idx] = event.target.value;\n    setPhone([...phone]);\n  };\n\n  let deletePhone = idx => {\n    phone.splice(idx, 1);\n    setPhone([...phone]);\n  };\n\n  let {\n    0: login,\n    1: setLogin\n  } = useState(data.client && data.client.user ? data.client.user.login : ''); //привести к геолокации\n\n  if (data.client.address.length > 0 && !_Array$isArray(data.client.address[0])) data.client.address.map(addres => [addres]);\n  let {\n    0: address,\n    1: setAddress\n  } = useState(data.client && data.client.address ? data.client.address : []);\n  let {\n    0: birthday,\n    1: setBirthday\n  } = useState(data.client && data.client.birthday ? pdDatePicker(new Date(data.client.birthday)) : pdDatePicker(new Date()));\n  let {\n    0: city,\n    1: setCity\n  } = useState(data.client && data.client.city ? data.client.city : '');\n  let {\n    0: type,\n    1: setType\n  } = useState(data.client && data.client.type ? data.client.type : 'торговая точка');\n\n  let handleType = event => {\n    setType(event.target.value);\n  };\n\n  const types = ['частное лицо', 'торговая точка'];\n  let {\n    0: newAddress,\n    1: setNewAddress\n  } = useState('');\n\n  let addAddress = () => {\n    address = [...address, [newAddress]];\n    setAddress(address);\n    setNewAddress('');\n  };\n\n  let editAddress = (event, idx) => {\n    address[idx][0] = event.target.value;\n    setAddress([...address]);\n  };\n\n  let editAddressName = (event, idx) => {\n    address[idx][2] = event.target.value;\n    setAddress([...address]);\n  };\n\n  let deleteAddress = idx => {\n    address.splice(idx, 1);\n    setAddress([...address]);\n  };\n\n  let setAddressGeo = (geo, idx) => {\n    address[idx][1] = geo;\n    setAddress([...address]);\n  };\n\n  let {\n    0: info,\n    1: setInfo\n  } = useState(data.client && data.client.info ? data.client.info : '');\n  let {\n    0: preview,\n    1: setPreview\n  } = useState(data.client ? data.client.image : '');\n  let {\n    0: image,\n    1: setImage\n  } = useState(undefined);\n\n  let handleChangeImage = event => {\n    if (event.target.files[0].size / 1024 / 1024 < 20) {\n      setImage(event.target.files[0]);\n      setPreview(URL.createObjectURL(event.target.files[0]));\n    } else {\n      showSnackBar('Файл слишком большой');\n    }\n  };\n\n  let {\n    0: patent,\n    1: setPatent\n  } = useState(undefined);\n\n  let handleChangePatent = event => {\n    if (event.target.files[0].size / 1024 / 1024 < 20) {\n      setPatent(event.target.files[0]);\n    } else {\n      showSnackBar('Файл слишком большой');\n    }\n  };\n\n  let patentUrl = data.client ? data.client.patent : '';\n  let patentRef = useRef(null);\n  let {\n    0: passport,\n    1: setPassport\n  } = useState(undefined);\n\n  let handleChangePassport = event => {\n    if (event.target.files[0].size / 1024 / 1024 < 20) {\n      setPassport(event.target.files[0]);\n    } else {\n      showSnackBar('Файл слишком большой');\n    }\n  };\n\n  let passportUrl = data.client ? data.client.passport : '';\n  let passportRef = useRef(null);\n  let {\n    0: certificate,\n    1: setCertificate\n  } = useState(undefined);\n\n  let handleChangeCertificate = event => {\n    if (event.target.files[0].size / 1024 / 1024 < 20) {\n      setCertificate(event.target.files[0]);\n    } else {\n      showSnackBar('Файл слишком большой');\n    }\n  };\n\n  let certificateUrl = data.client ? data.client.certificate : '';\n  let certificateRef = useRef(null);\n  const {\n    setMiniDialog,\n    showMiniDialog\n  } = props.mini_dialogActions;\n  const {\n    logout\n  } = props.userActions;\n  let {\n    0: newPass,\n    1: setNewPass\n  } = useState('');\n\n  let handleNewPass = event => {\n    setNewPass(event.target.value);\n  };\n\n  let {\n    0: hide,\n    1: setHide\n  } = useState('password');\n\n  let handleHide = () => {\n    setHide(!hide);\n  };\n\n  const router = useRouter();\n  useEffect(() => {\n    if (name.length === 0 || city.length === 0 || phone.length === 0 || address.length === 0 || address[0].length === 0) {\n      showSnackBar('Обязательно заполните адрес, имя и номер телефона');\n    }\n  }, []);\n  return __jsx(App, {\n    filters: data.filterSubCategory,\n    sorts: data.sortSubCategory,\n    pageName: data.client ? data.client.name : 'Ничего не найдено',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, router.query.id === 'new' ? 'Добавить' : data.client ? data.client.name : 'Ничего не найдено'), __jsx(\"meta\", {\n    name: \"description\",\n    content: info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: data.client ? data.client.name : 'Ничего не найдено',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: \"website\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: preview ? preview : '/static/add.png',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `${urlMain}/client/${router.query.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    rel: \"canonical\",\n    href: `${urlMain}/client/${router.query.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  })), __jsx(Card, {\n    className: classes.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, __jsx(CardContent, {\n    className: isMobileApp ? classes.column : classes.row,\n    style: isMobileApp ? {} : {\n      justifyContent: 'start',\n      alignItems: 'flex-start'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, data.client ? (router.query.id === 'new' || data.client.organization && data.client.organization._id === profile.organization) && ['организация', 'менеджер', 'агент'].includes(profile.role) || profile.role === 'admin' || data.client.user && profile._id === data.client.user._id ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"contained-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: classes.media,\n    src: preview ? preview : '/static/add.png',\n    alt: 'Добавить',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  })), type === 'торговая точка' ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.line,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.doc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"C\\u0432\\u0438\\u0434\\u0435\\u0442\\u0435\\u043B\\u044C\\u0441\\u0442\\u0432\\u043E:\\xA0\"), certificateUrl && certificateUrl.length > 0 ? __jsx(\"a\", {\n    href: certificateUrl,\n    download: true,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.docUrl,\n    style: {\n      color: 'indigo'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C\")) : null, \"\\xA0\", __jsx(\"div\", {\n    className: classes.docUrl,\n    style: {\n      color: certificate || certificateUrl && certificateUrl.length > 0 ? '#ffb300' : 'red'\n    },\n    onClick: () => {\n      certificateRef.current.click();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, certificate || certificateUrl && certificateUrl.length > 0 ? 'Изменить' : 'Добавить')), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.doc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"\\u041F\\u0430\\u0441\\u043F\\u043E\\u0440\\u0442:\\xA0\"), passportUrl && passportUrl.length > 0 ? __jsx(\"a\", {\n    href: passportUrl,\n    download: true,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.docUrl,\n    style: {\n      color: 'indigo'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C\")) : null, \"\\xA0\", __jsx(\"div\", {\n    className: classes.docUrl,\n    style: {\n      color: passport || passportUrl && passportUrl.length > 0 ? '#ffb300' : 'red'\n    },\n    onClick: () => {\n      passportRef.current.click();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, passport || passportUrl && passportUrl.length > 0 ? 'Изменить' : 'Добавить')), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.doc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, \"\\u041F\\u0430\\u0442\\u0435\\u043D\\u0442:\\xA0\"), patentUrl && patentUrl.length > 0 ? __jsx(\"a\", {\n    href: patentUrl,\n    download: true,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.docUrl,\n    style: {\n      color: 'indigo'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C\")) : null, \"\\xA0\", __jsx(\"div\", {\n    className: classes.docUrl,\n    style: {\n      color: patent || patentUrl && patentUrl.length > 0 ? '#ffb300' : 'red'\n    },\n    onClick: () => {\n      patentRef.current.click();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, patent || patentUrl && patentUrl.length > 0 ? 'Изменить' : 'Добавить'))) : null), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, __jsx(TextField, {\n    label: \"\\u0418\\u043C\\u044F\",\n    value: name,\n    className: classes.input,\n    onChange: event => {\n      setName(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }), router.query.id === 'new' || data.client.organization ? null : __jsx(React.Fragment, null, __jsx(TextField, {\n    label: \"\\u041B\\u043E\\u0433\\u0438\\u043D\",\n    value: login,\n    className: classes.input,\n    onChange: event => {\n      setLogin(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }), __jsx(Input, {\n    placeholder: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    type: hide ? 'password' : 'text',\n    value: newPass,\n    onChange: handleNewPass,\n    className: classes.input,\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, __jsx(IconButton, {\n      \"aria-label\": \"Toggle password visibility\",\n      onClick: handleHide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, hide ? __jsx(VisibilityOff, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }) : __jsx(Visibility, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  })), __jsx(FormControl, {\n    className: classes.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, \"\\u0422\\u0438\\u043F \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\"), __jsx(Select, {\n    value: type,\n    onChange: handleType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, types.map(element => __jsx(MenuItem, {\n    key: element,\n    value: element,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, element)))), __jsx(TextField, {\n    className: classes.input,\n    label: \"\\u0414\\u0435\\u043D\\u044C \\u0440\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u0435\",\n    type: \"date\",\n    InputLabelProps: {\n      shrink: true\n    },\n    value: birthday,\n    inputProps: {\n      'aria-label': 'description'\n    },\n    onChange: event => setBirthday(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }), __jsx(TextField, {\n    className: classes.input,\n    label: \"\\u0413\\u043E\\u0440\\u043E\\u0434\",\n    type: \"text\",\n    InputLabelProps: {\n      shrink: true\n    },\n    value: city,\n    inputProps: {\n      'aria-label': 'description'\n    },\n    onChange: event => setCity(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }), phone ? phone.map((element, idx) => __jsx(\"div\", {\n    key: idx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    className: classes.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D. \\u0424\\u043E\\u0440\\u043C\\u0430\\u0442: +996555780861\"), __jsx(Input, {\n    placeholder: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D. \\u0424\\u043E\\u0440\\u043C\\u0430\\u0442: +996555780861\",\n    value: element,\n    className: classes.input,\n    onChange: event => {\n      editPhone(event, idx);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, __jsx(IconButton, {\n      onClick: () => {\n        deletePhone(idx);\n      },\n      \"aria-label\": \"toggle password visibility\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, __jsx(Remove, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  })))) : null, __jsx(Button, {\n    onClick: async () => {\n      addPhone();\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346\n    },\n    __self: this\n  }), address ? address.map((element, idx) => __jsx(\"div\", {\n    key: idx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  }, type === 'торговая точка' ? __jsx(FormControl, {\n    className: classes.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352\n    },\n    __self: this\n  }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u0430\"), __jsx(Input, {\n    placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\\u0430\",\n    value: element[2],\n    className: classes.input,\n    onChange: event => {\n      editAddressName(event, idx);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, __jsx(IconButton, {\n      onClick: () => {\n        deleteAddress(idx);\n      },\n      \"aria-label\": \"toggle password visibility\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, __jsx(Remove, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353\n    },\n    __self: this\n  })) : null, __jsx(FormControl, {\n    className: classes.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379\n    },\n    __self: this\n  }, \"\\u0410\\u0434\\u0440\\u0435\\u0441\", type === 'торговая точка' ? ' магазина' : ''), __jsx(Input, {\n    placeholder: \"\\u0410\\u0434\\u0440\\u0435\\u0441\",\n    value: element[0],\n    className: classes.input,\n    onChange: event => {\n      editAddress(event, idx);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    endAdornment: type === 'торговая точка' ? null : __jsx(InputAdornment, {\n      position: \"end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, __jsx(IconButton, {\n      onClick: () => {\n        deleteAddress(idx);\n      },\n      \"aria-label\": \"toggle password visibility\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, __jsx(Remove, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: classes.geo,\n    style: {\n      color: element[1] ? '#ffb300' : 'red'\n    },\n    onClick: () => {\n      setMiniDialog('Геолокация', __jsx(Geo, {\n        change: true,\n        geo: element[1],\n        setAddressGeo: setAddressGeo,\n        idx: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }), true);\n      showMiniDialog(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  }, element[1] ? 'Изменить геолокацию' : 'Задайте геолокацию'))) : __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418\n    },\n    __self: this\n  }), __jsx(Button, {\n    onClick: async () => {\n      addAddress();\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419\n    },\n    __self: this\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0430\\u0434\\u0440\\u0435\\u0441\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425\n    },\n    __self: this\n  }), __jsx(TextField, {\n    label: \"email\",\n    value: email,\n    className: classes.input,\n    onChange: event => {\n      setEmail(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427\n    },\n    __self: this\n  }), __jsx(TextField, {\n    multiline: true,\n    label: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\",\n    value: info,\n    className: classes.input,\n    onChange: event => {\n      setInfo(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446\n    },\n    __self: this\n  }, data.client.organization && profile.organization === data.client.organization._id && ['организация', 'менеджер', 'агент'].includes(profile.role) || profile.role === 'admin' || data.client.user && profile._id === data.client.user._id ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: async () => {\n      if (name.length > 0 && address.length > 0 && address[0].length > 0 && phone.length > 0) {\n        let editElement = {\n          _id: data.client._id\n        };\n        if (image) editElement.image = image;\n        if (passport) editElement.passport = passport;\n        if (patent) editElement.patent = patent;\n        if (certificate) editElement.certificate = certificate;\n        if (name && name.length > 0 && name !== data.client.name) editElement.name = name;\n        editElement.address = address;\n        if (email && email.length > 0 && email !== data.client.email) editElement.email = email;\n        if (login && login.length > 0 && data.client.user.login !== login) editElement.login = login;\n        editElement.phone = phone;\n        if (info && info.length > 0 && info !== data.client.info) editElement.info = info;\n        if (city && city.length > 0 && city !== data.client.city) editElement.city = city;\n        if (type && type.length > 0 && type !== data.client.type) editElement.type = type;\n        if (birthday && birthday !== data.client.birthday) editElement.birthday = new Date(birthday);\n        if (newPass && newPass.length > 0) editElement.newPass = newPass;\n\n        const action = async () => {\n          await setClient(editElement);\n        };\n\n        setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n          action: action,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 471\n          },\n          __self: this\n        }));\n        showMiniDialog(true);\n      } else {\n        showSnackBar('Заполните поля: имя, адрес и телефон');\n      }\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451\n    },\n    __self: this\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), profile.role === 'admin' ? __jsx(Button, {\n    onClick: async () => {\n      const action = async () => {\n        await onoffClient([data.client._id]);\n        setStatus(status === 'active' ? 'deactive' : 'active');\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481\n    },\n    __self: this\n  }, status === 'active' ? 'Отключить' : 'Включить') : data.client.user && profile._id === data.client.user._id ? __jsx(Button, {\n    onClick: () => {\n      const action = async () => {\n        logout(true);\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493\n    },\n    __self: this\n  }, \"\\u0412\\u044B\\u0439\\u0442\\u0438\") : null) : router.query.id === 'new' && ['организация', 'менеджер', 'агент'].includes(profile.role) ? __jsx(Button, {\n    onClick: async () => {\n      if (name.length > 0 && address.length > 0 && city.length > 0 && phone.length > 0) {\n        let editElement = {};\n        if (image !== undefined) editElement.image = image;\n        if (passport !== undefined) editElement.passport = passport;\n        if (patent !== undefined) editElement.patent = patent;\n        if (certificate !== undefined) editElement.certificate = certificate;\n        if (name.length > 0) editElement.name = name;\n        editElement.address = address;\n        if (email.length > 0) editElement.email = email;\n        editElement.phone = phone;\n        if (info.length > 0) editElement.info = info;\n        if (city.length > 0) editElement.city = city;\n        if (type && type.length > 0) editElement.type = type;\n        editElement.birthday = new Date(birthday);\n\n        const action = async () => {\n          await addClient(editElement);\n          Router.push('/clients');\n        };\n\n        setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n          action: action,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 527\n          },\n          __self: this\n        }));\n        showMiniDialog(true);\n      } else {\n        showSnackBar('Заполните поля: имя, адрес, город и телефон');\n      }\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508\n    },\n    __self: this\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\") : null))) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: classes.media,\n    src: preview,\n    alt: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547\n    },\n    __self: this\n  }), ['admin', 'организация', 'менеджер'].includes(profile.role) && certificateUrl && certificateUrl.length > 0 ? __jsx(\"a\", {\n    href: certificateUrl,\n    download: true,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.docUrl,\n    style: {\n      color: 'indigo'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555\n    },\n    __self: this\n  }, \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u0441\\u0435\\u0440\\u0442\\u0438\\u0444\\u0438\\u043A\\u0430\\u0442\")) : null, ['admin', 'организация', 'менеджер'].includes(profile.role) && passportUrl && passportUrl.length > 0 ? __jsx(\"a\", {\n    href: passportUrl,\n    download: true,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.docUrl,\n    style: {\n      color: 'indigo'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564\n    },\n    __self: this\n  }, \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u043F\\u0430\\u0441\\u043F\\u043E\\u0440\\u0442\")) : null, ['admin', 'организация', 'менеджер'].includes(profile.role) && patentUrl && patentUrl.length > 0 ? __jsx(\"a\", {\n    href: patentUrl,\n    download: true,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.docUrl,\n    style: {\n      color: 'indigo'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573\n    },\n    __self: this\n  }, \"\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u043F\\u0430\\u0442\\u0435\\u043D\\u0442\")) : null), __jsx(\"div\", {\n    style: {\n      width: isMobileApp ? '100%' : 'calc(100% - 300px)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581\n    },\n    __self: this\n  }, name), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585\n    },\n    __self: this\n  }, \"\\u0410\\u0434\\u0440\\u0435\\u0441:\\xA0\"), __jsx(\"div\", {\n    className: classes.column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588\n    },\n    __self: this\n  }, address ? address.map((element, idx) => __jsx(React.Fragment, null, type === 'торговая точка' ? __jsx(\"div\", {\n    className: classes.value,\n    key: idx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592\n    },\n    __self: this\n  }, element[2]) : null, __jsx(\"div\", {\n    className: classes.value,\n    key: idx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597\n    },\n    __self: this\n  }, element[0]), __jsx(\"div\", {\n    className: classes.geo,\n    style: {\n      color: element[1] ? '#ffb300' : 'red'\n    },\n    onClick: () => {\n      if (element[1]) {\n        setMiniDialog('Геолокация', __jsx(Geo, {\n          geo: element[1],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 602\n          },\n          __self: this\n        }), true);\n        showMiniDialog(true);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600\n    },\n    __self: this\n  }, element[1] ? 'Посмотреть геолокацию' : 'Геолокация не задана'))) : null)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618\n    },\n    __self: this\n  }, \"E-mail:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621\n    },\n    __self: this\n  }, email)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626\n    },\n    __self: this\n  }, \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630\n    },\n    __self: this\n  }, phone ? phone.map((element, idx) => __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.value,\n    key: idx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633\n    },\n    __self: this\n  }, element))) : null))), __jsx(\"div\", {\n    className: classes.info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641\n    },\n    __self: this\n  }, info))) : 'Ничего не найдено')), __jsx(\"input\", {\n    accept: \"image/*\",\n    style: {\n      display: 'none'\n    },\n    id: \"contained-button-file\",\n    type: \"file\",\n    onChange: handleChangeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    ref: passportRef,\n    style: {\n      display: 'none'\n    },\n    id: \"input-passport\",\n    type: \"file\",\n    onChange: handleChangePassport,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    ref: certificateRef,\n    style: {\n      display: 'none'\n    },\n    id: \"input-certificate\",\n    type: \"file\",\n    onChange: handleChangeCertificate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665\n    },\n    __self: this\n  }), __jsx(\"input\", {\n    ref: patentRef,\n    style: {\n      display: 'none'\n    },\n    id: \"input-patent\",\n    type: \"file\",\n    onChange: handleChangePatent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672\n    },\n    __self: this\n  }));\n});\n\nClient.getInitialProps = async function (ctx) {\n  return {\n    data: _objectSpread({}, ctx.query.id === 'new' ? {\n      client: {\n        name: '',\n        email: '',\n        phone: [],\n        address: [],\n        info: '',\n        image: '/static/add.png',\n        reiting: 0,\n        city: '',\n        type: '',\n        birthday: null,\n        user: null,\n        patent: null,\n        passport: null,\n        certificate: null\n      }\n    } : await getClient({\n      _id: ctx.query.id\n    }))\n  };\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    userActions: bindActionCreators(userActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Client);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\pages\\client\\[id].js"],"names":["Head","React","useState","useRef","useEffect","App","connect","clientStyle","Card","CardContent","Input","Button","bindActionCreators","mini_dialogActions","userActions","getClient","onoffClient","setClient","addClient","Remove","IconButton","InputAdornment","Visibility","VisibilityOff","TextField","FormControl","InputLabel","urlMain","Confirmation","Geo","useRouter","pdDatePicker","MenuItem","Select","snackbarActions","Router","Client","memo","props","profile","user","classes","data","isMobileApp","app","showSnackBar","status","setStatus","client","name","setName","email","setEmail","phone","setPhone","addPhone","editPhone","event","idx","target","value","deletePhone","splice","login","setLogin","address","length","map","addres","setAddress","birthday","setBirthday","Date","city","setCity","type","setType","handleType","types","newAddress","setNewAddress","addAddress","editAddress","editAddressName","deleteAddress","setAddressGeo","geo","info","setInfo","preview","setPreview","image","setImage","undefined","handleChangeImage","files","size","URL","createObjectURL","patent","setPatent","handleChangePatent","patentUrl","patentRef","passport","setPassport","handleChangePassport","passportUrl","passportRef","certificate","setCertificate","handleChangeCertificate","certificateUrl","certificateRef","setMiniDialog","showMiniDialog","logout","newPass","setNewPass","handleNewPass","hide","setHide","handleHide","router","filterSubCategory","sortSubCategory","query","id","page","column","row","justifyContent","alignItems","organization","_id","includes","role","media","line","doc","docUrl","color","current","click","input","element","shrink","editElement","action","push","width","nameField","display","getInitialProps","ctx","reiting","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import Head from 'next/head';\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport App from '../../layouts/App';\r\nimport { connect } from 'react-redux'\r\nimport clientStyle from '../../src/styleMUI/client/client'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Input from '@material-ui/core/Input';\r\nimport Button from '@material-ui/core/Button';\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as userActions from '../../redux/actions/user'\r\nimport { getClient, onoffClient, setClient, addClient } from '../../src/gql/client'\r\nimport Remove from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { urlMain } from '../../redux/constants/other'\r\nimport Confirmation from '../../components/dialog/Confirmation'\r\nimport Geo from '../../components/dialog/Geo'\r\nimport { useRouter } from 'next/router'\r\nimport { pdDatePicker } from '../../src/lib'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport Router from 'next/router'\r\n\r\nconst Client = React.memo((props) => {\r\n    const { profile } = props.user;\r\n    const classes = clientStyle();\r\n    const { data } = props;\r\n    const { isMobileApp } = props.app;\r\n    const { showSnackBar } = props.snackbarActions;\r\n    let [status, setStatus] = useState(data.client&&data.client.user?data.client.user.status:'');\r\n    let [name, setName] = useState(data.client&&data.client.name?data.client.name:'');\r\n    let [email, setEmail] = useState(data.client&&data.client.email?data.client.email:'');\r\n    let [phone, setPhone] = useState(data.client&&data.client.phone?data.client.phone:[]);\r\n    let addPhone = ()=>{\r\n        phone = [...phone, '']\r\n        setPhone(phone)\r\n    };\r\n    let editPhone = (event, idx)=>{\r\n        phone[idx] = event.target.value\r\n        setPhone([...phone])\r\n    };\r\n    let deletePhone = (idx)=>{\r\n        phone.splice(idx, 1);\r\n        setPhone([...phone])\r\n    };\r\n    let [login, setLogin] = useState(data.client&&data.client.user?data.client.user.login:'');\r\n\r\n    //привести к геолокации\r\n    if(data.client.address.length>0&&!Array.isArray(data.client.address[0])) data.client.address.map((addres)=>[addres])\r\n\r\n    let [address, setAddress] = useState(data.client&&data.client.address?data.client.address:[]);\r\n    let [birthday, setBirthday] = useState(data.client&&data.client.birthday?pdDatePicker(new Date(data.client.birthday)):pdDatePicker(new Date()));\r\n    let [city, setCity] = useState(data.client&&data.client.city?data.client.city:'');\r\n    let [type, setType] = useState(data.client&&data.client.type?data.client.type:'торговая точка');\r\n    let handleType =  (event) => {\r\n        setType(event.target.value)\r\n    };\r\n    const types = ['частное лицо', 'торговая точка']\r\n\r\n    let [newAddress, setNewAddress] = useState('');\r\n    let addAddress = ()=>{\r\n        address = [...address, [newAddress]]\r\n        setAddress(address)\r\n        setNewAddress('')\r\n    };\r\n    let editAddress = (event, idx)=>{\r\n        address[idx][0] = event.target.value\r\n        setAddress([...address])\r\n    };\r\n    let editAddressName = (event, idx)=>{\r\n        address[idx][2] = event.target.value\r\n        setAddress([...address])\r\n    };\r\n    let deleteAddress = (idx)=>{\r\n        address.splice(idx, 1);\r\n        setAddress([...address])\r\n    };\r\n    let setAddressGeo = (geo, idx)=>{\r\n        address[idx][1] = geo\r\n        setAddress([...address])\r\n    };\r\n\r\n    let [info, setInfo] = useState(data.client&&data.client.info?data.client.info:'');\r\n    let [preview, setPreview] = useState(data.client?data.client.image:'');\r\n    let [image, setImage] = useState(undefined);\r\n    let handleChangeImage = ((event) => {\r\n        if(event.target.files[0].size/1024/1024<20){\r\n            setImage(event.target.files[0])\r\n            setPreview(URL.createObjectURL(event.target.files[0]))\r\n        } else {\r\n            showSnackBar('Файл слишком большой')\r\n        }\r\n    })\r\n    let [patent , setPatent] = useState(undefined);\r\n    let handleChangePatent = ((event) => {\r\n        if(event.target.files[0].size/1024/1024<20){\r\n            setPatent(event.target.files[0])\r\n        } else {\r\n            showSnackBar('Файл слишком большой')\r\n        }\r\n    })\r\n    let patentUrl =data.client?data.client.patent:'';\r\n    let patentRef = useRef(null);\r\n    let [passport, setPassport] = useState(undefined);\r\n    let handleChangePassport = ((event) => {\r\n        if(event.target.files[0].size/1024/1024<20){\r\n            setPassport(event.target.files[0])\r\n        } else {\r\n            showSnackBar('Файл слишком большой')\r\n        }\r\n    })\r\n    let passportUrl = data.client?data.client.passport:'';\r\n    let passportRef = useRef(null);\r\n    let [certificate, setCertificate] = useState(undefined);\r\n    let handleChangeCertificate = ((event) => {\r\n        if(event.target.files[0].size/1024/1024<20){\r\n            setCertificate(event.target.files[0])\r\n        } else {\r\n            showSnackBar('Файл слишком большой')\r\n        }\r\n    })\r\n    let certificateUrl = data.client?data.client.certificate:'';\r\n    let certificateRef = useRef(null);\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    const { logout } = props.userActions;\r\n    let [newPass, setNewPass] = useState('');\r\n    let handleNewPass =  (event) => {\r\n        setNewPass(event.target.value)\r\n    };\r\n    let [hide, setHide] = useState('password');\r\n    let handleHide =  () => {\r\n        setHide(!hide)\r\n    };\r\n    const router = useRouter()\r\n    useEffect(()=>{\r\n        if(name.length===0||city.length===0||phone.length===0||address.length===0||address[0].length===0) {\r\n            showSnackBar('Обязательно заполните адрес, имя и номер телефона')\r\n        }\r\n    },[])\r\n    return (\r\n        <App filters={data.filterSubCategory} sorts={data.sortSubCategory} pageName={data.client?data.client.name:'Ничего не найдено'}>\r\n            <Head>\r\n                <title>{router.query.id==='new'?'Добавить':data.client?data.client.name:'Ничего не найдено'}</title>\r\n                <meta name='description' content={info}/>\r\n                <meta property='og:title' content={data.client?data.client.name:'Ничего не найдено'} />\r\n                <meta property='og:description' content={info} />\r\n                <meta property='og:type' content='website' />\r\n                <meta property='og:image' content={preview?preview:'/static/add.png'} />\r\n                <meta property=\"og:url\" content={`${urlMain}/client/${router.query.id}`} />\r\n                <link rel='canonical' href={`${urlMain}/client/${router.query.id}`}/>\r\n            </Head>\r\n            <Card className={classes.page}>\r\n                <CardContent className={isMobileApp?classes.column:classes.row} style={isMobileApp?{}:{justifyContent: 'start', alignItems: 'flex-start'}}>\r\n                    {data.client?\r\n                        ((router.query.id==='new'||(data.client.organization&&data.client.organization._id===profile.organization))&&['организация', 'менеджер', 'агент'].includes(profile.role))||profile.role==='admin'||(data.client.user&&profile._id===data.client.user._id)?\r\n                                <>\r\n                                <div className={classes.column}>\r\n                                    <label htmlFor='contained-button-file'>\r\n                                        <img\r\n                                            className={classes.media}\r\n                                            src={preview?preview:'/static/add.png'}\r\n                                            alt={'Добавить'}\r\n                                        />\r\n                                    </label>\r\n                                    {\r\n                                        type==='торговая точка'?\r\n                                            <>\r\n                                            <div className={classes.line}>\r\n                                                <div className={classes.doc}>\r\n                                                    Cвидетельство:&nbsp;\r\n                                                </div>\r\n                                                {\r\n                                                    certificateUrl&&certificateUrl.length>0?\r\n                                                        <a href={certificateUrl} download target='_blank'>\r\n                                                            <div className={classes.docUrl} style={{color: 'indigo'}}>\r\n                                                                Скачать\r\n                                                            </div>\r\n                                                        </a>\r\n                                                        :null\r\n                                                }\r\n                                                &nbsp;\r\n                                                <div className={classes.docUrl} style={{color: certificate||(certificateUrl&&certificateUrl.length>0)?'#ffb300':'red'}} onClick={()=>{certificateRef.current.click()}}>\r\n                                                    {certificate||(certificateUrl&&certificateUrl.length>0)?'Изменить':'Добавить'}\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                            <div  className={classes.row}>\r\n                                                <div className={classes.doc}>\r\n                                                    Паспорт:&nbsp;\r\n                                                </div>\r\n                                                {\r\n                                                    passportUrl&&passportUrl.length>0?\r\n                                                        <a href={passportUrl} download target='_blank'>\r\n                                                            <div className={classes.docUrl} style={{color: 'indigo'}}>\r\n                                                                Скачать\r\n                                                            </div>\r\n                                                        </a>\r\n                                                        :null\r\n                                                }\r\n                                                &nbsp;\r\n                                                <div className={classes.docUrl} style={{color: passport||(passportUrl&&passportUrl.length>0)?'#ffb300':'red'}} onClick={()=>{passportRef.current.click()}}>\r\n                                                    {passport||(passportUrl&&passportUrl.length>0)?'Изменить':'Добавить'}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div  className={classes.row}>\r\n                                                <div className={classes.doc}>\r\n                                                    Патент:&nbsp;\r\n                                                </div>\r\n                                                {\r\n                                                    patentUrl&&patentUrl.length>0?\r\n                                                        <a href={patentUrl} download target='_blank'>\r\n                                                            <div className={classes.docUrl} style={{color: 'indigo'}}>\r\n                                                                Скачать\r\n                                                            </div>\r\n                                                        </a>\r\n                                                        :null\r\n                                                }\r\n                                                &nbsp;\r\n                                                <div className={classes.docUrl} style={{color: patent||(patentUrl&&patentUrl.length>0)?'#ffb300':'red'}} onClick={()=>{patentRef.current.click()}}>\r\n                                                    {patent||(patentUrl&&patentUrl.length>0)?'Изменить':'Добавить'}\r\n                                                </div>\r\n                                            </div>\r\n                                            </>\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                </div>\r\n                                <div>\r\n                                        <TextField\r\n                                            label='Имя'\r\n                                            value={name}\r\n                                            className={classes.input}\r\n                                            onChange={(event)=>{setName(event.target.value)}}\r\n                                            inputProps={{\r\n                                                'aria-label': 'description',\r\n                                            }}\r\n                                        />\r\n                                    {\r\n                                        router.query.id==='new'||data.client.organization?\r\n                                            null\r\n                                            :\r\n                                            <>\r\n                                            <TextField\r\n                                                label='Логин'\r\n                                                value={login}\r\n                                                className={classes.input}\r\n                                                onChange={(event)=>{setLogin(event.target.value)}}\r\n                                                inputProps={{\r\n                                                    'aria-label': 'description',\r\n                                                }}\r\n                                            />\r\n                                            <Input\r\n                                                placeholder='Новый пароль'\r\n                                                type={hide ? 'password' : 'text' }\r\n                                                value={newPass}\r\n                                                onChange={handleNewPass}\r\n                                                className={classes.input}\r\n                                                endAdornment={\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton aria-label=\"Toggle password visibility\" onClick={handleHide}>\r\n                                                            {hide ? <VisibilityOff />:<Visibility />  }\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                }\r\n                                            />\r\n                                            </>\r\n                                    }\r\n                                    <FormControl className={classes.input}>\r\n                                        <InputLabel>Тип клиента</InputLabel>\r\n                                        <Select value={type} onChange={handleType}>\r\n                                            {types.map((element)=>\r\n                                                <MenuItem key={element} value={element}>{element}</MenuItem>\r\n                                            )}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <TextField\r\n                                        className={classes.input}\r\n                                        label='День рождение'\r\n                                        type='date'\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        value={birthday}\r\n                                        inputProps={{\r\n                                            'aria-label': 'description',\r\n                                        }}\r\n                                        onChange={ event => setBirthday(event.target.value) }\r\n                                    />\r\n                                    <TextField\r\n                                        className={classes.input}\r\n                                        label='Город'\r\n                                        type='text'\r\n                                        InputLabelProps={{\r\n                                            shrink: true,\r\n                                        }}\r\n                                        value={city}\r\n                                        inputProps={{\r\n                                            'aria-label': 'description',\r\n                                        }}\r\n                                        onChange={ event => setCity(event.target.value) }\r\n                                    />\r\n                                    <br/>\r\n                                    <br/>\r\n                                    {phone?phone.map((element, idx)=>\r\n                                        <div key={idx}>\r\n                                            <FormControl className={classes.input}>\r\n                                                <InputLabel>Телефон. Формат: +996555780861</InputLabel>\r\n                                                <Input\r\n                                                    placeholder='Телефон. Формат: +996555780861'\r\n                                                    value={element}\r\n                                                    className={classes.input}\r\n                                                    onChange={(event)=>{editPhone(event, idx)}}\r\n                                                    inputProps={{\r\n                                                        'aria-label': 'description',\r\n                                                    }}\r\n                                                    endAdornment={\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            <IconButton\r\n                                                                onClick={()=>{\r\n                                                                    deletePhone(idx)\r\n                                                                }}\r\n                                                                aria-label='toggle password visibility'\r\n                                                            >\r\n                                                                <Remove/>\r\n                                                            </IconButton>\r\n                                                        </InputAdornment>\r\n                                                    }\r\n                                                />\r\n                                            </FormControl>\r\n                                        </div>\r\n                                    ): null}\r\n                                    <Button onClick={async()=>{\r\n                                        addPhone()\r\n                                    }} size='small' color='primary'>\r\n                                        Добавить телефон\r\n                                    </Button>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    {address?address.map((element, idx)=>\r\n                                        <div key={idx}>\r\n                                            {\r\n                                                type==='торговая точка'?\r\n                                                    <FormControl className={classes.input}>\r\n                                                        <InputLabel>Название магазина</InputLabel>\r\n                                                        <Input\r\n                                                            placeholder='Название магазина'\r\n                                                            value={element[2]}\r\n                                                            className={classes.input}\r\n                                                            onChange={(event)=>{editAddressName(event, idx)}}\r\n                                                            inputProps={{\r\n                                                                'aria-label': 'description',\r\n                                                            }}\r\n                                                            endAdornment={\r\n                                                                <InputAdornment position=\"end\">\r\n                                                                    <IconButton\r\n                                                                        onClick={()=>{\r\n                                                                            deleteAddress(idx)\r\n                                                                        }}\r\n                                                                        aria-label='toggle password visibility'\r\n                                                                    >\r\n                                                                        <Remove/>\r\n                                                                    </IconButton>\r\n                                                                </InputAdornment>\r\n                                                            }\r\n                                                        />\r\n                                                    </FormControl>\r\n                                                    :\r\n                                                    null\r\n                                            }\r\n                                            <FormControl className={classes.input}>\r\n                                                <InputLabel>Адрес{type==='торговая точка'?' магазина':''}</InputLabel>\r\n                                                <Input\r\n                                                    placeholder='Адрес'\r\n                                                    value={element[0]}\r\n                                                    className={classes.input}\r\n                                                    onChange={(event)=>{editAddress(event, idx)}}\r\n                                                    inputProps={{\r\n                                                        'aria-label': 'description',\r\n                                                    }}\r\n                                                    endAdornment={\r\n                                                        type==='торговая точка'?\r\n                                                            null\r\n                                                            :\r\n                                                            <InputAdornment position=\"end\">\r\n                                                                <IconButton\r\n                                                                    onClick={()=>{\r\n                                                                        deleteAddress(idx)\r\n                                                                    }}\r\n                                                                    aria-label='toggle password visibility'\r\n                                                                >\r\n                                                                    <Remove/>\r\n                                                                </IconButton>\r\n                                                            </InputAdornment>\r\n                                                    }\r\n                                                />\r\n                                            </FormControl>\r\n                                            <div className={classes.geo} style={{color: element[1]?'#ffb300':'red'}} onClick={()=>{\r\n                                                setMiniDialog('Геолокация', <Geo change={true} geo={element[1]} setAddressGeo={setAddressGeo} idx={idx}/>, true)\r\n                                                showMiniDialog(true)\r\n                                            }}>\r\n                                                {\r\n                                                    element[1]?\r\n                                                        'Изменить геолокацию'\r\n                                                        :\r\n                                                        'Задайте геолокацию'\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    ):\r\n                                        <br/>}\r\n                                    <Button onClick={async()=>{\r\n                                        addAddress()\r\n                                    }} size='small' color='primary'>\r\n                                        Добавить адрес\r\n                                    </Button>\r\n                                    <br/>\r\n                                    <br/>\r\n\r\n                                    <TextField\r\n                                        label='email'\r\n                                        value={email}\r\n                                        className={classes.input}\r\n                                        onChange={(event)=>{setEmail(event.target.value)}}\r\n                                        inputProps={{\r\n                                            'aria-label': 'description',\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        multiline={true}\r\n                                        label='Информация'\r\n                                        value={info}\r\n                                        className={classes.input}\r\n                                        onChange={(event)=>{setInfo(event.target.value)}}\r\n                                        inputProps={{\r\n                                            'aria-label': 'description',\r\n                                        }}\r\n                                    />\r\n                                    <div className={classes.row}>\r\n                                        {\r\n                                            ((data.client.organization&&profile.organization===data.client.organization._id)&&['организация', 'менеджер', 'агент'].includes(profile.role))\r\n                                            ||profile.role==='admin'||(data.client.user&&profile._id===data.client.user._id)?\r\n                                                <>\r\n                                                <Button onClick={async()=>{\r\n                                                    if(name.length>0&&address.length>0&&address[0].length>0&&phone.length>0) {\r\n                                                        let editElement = {_id: data.client._id}\r\n                                                        if (image) editElement.image = image\r\n                                                        if (passport) editElement.passport = passport\r\n                                                        if (patent) editElement.patent = patent\r\n                                                        if (certificate) editElement.certificate = certificate\r\n                                                        if (name && name.length > 0 && name !== data.client.name) editElement.name = name\r\n                                                        editElement.address = address\r\n                                                        if (email && email.length > 0 && email !== data.client.email) editElement.email = email\r\n                                                        if (login && login.length > 0 && data.client.user.login !== login) editElement.login = login\r\n                                                        editElement.phone = phone\r\n                                                        if (info && info.length > 0 && info !== data.client.info) editElement.info = info\r\n                                                        if (city && city.length > 0 && city !== data.client.city) editElement.city = city\r\n                                                        if (type && type.length > 0 && type !== data.client.type) editElement.type = type\r\n                                                        if (birthday && birthday !== data.client.birthday) editElement.birthday = new Date(birthday)\r\n                                                        if (newPass && newPass.length > 0) editElement.newPass = newPass\r\n                                                        const action = async () => {\r\n                                                            await setClient(editElement)\r\n                                                        }\r\n                                                        setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                        showMiniDialog(true)\r\n                                                    }\r\n                                                    else {\r\n                                                        showSnackBar('Заполните поля: имя, адрес и телефон')\r\n                                                    }\r\n                                                }} size='small' color='primary'>\r\n                                                    Сохранить\r\n                                                </Button>\r\n                                                {profile.role==='admin'?\r\n                                                    <Button onClick={async()=>{\r\n                                                        const action = async() => {\r\n                                                            await onoffClient([data.client._id])\r\n                                                            setStatus(status==='active'?'deactive':'active')\r\n                                                        }\r\n                                                        setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                        showMiniDialog(true)\r\n                                                    }} size='small' color='primary'>\r\n                                                        {status==='active'?'Отключить':'Включить'}\r\n                                                    </Button>\r\n                                                    :\r\n                                                    data.client.user&&profile._id===data.client.user._id?\r\n                                                        <Button onClick={()=>{\r\n                                                            const action = async() => {\r\n                                                                logout(true)\r\n                                                            }\r\n                                                            setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                            showMiniDialog(true)\r\n                                                        }} size='small' color='primary'>\r\n                                                            Выйти\r\n                                                        </Button>\r\n                                                        :\r\n                                                        null\r\n                                                }\r\n                                                </>\r\n                                                :\r\n                                                router.query.id==='new'&&['организация', 'менеджер', 'агент'].includes(profile.role)?\r\n                                                    <Button onClick={async()=>{\r\n                                                        if(name.length>0&&address.length>0&&city.length>0&&phone.length>0){\r\n                                                            let editElement = {}\r\n                                                            if(image!==undefined)editElement.image = image\r\n                                                            if(passport!==undefined)editElement.passport = passport\r\n                                                            if(patent!==undefined)editElement.patent = patent\r\n                                                            if(certificate!==undefined)editElement.certificate = certificate\r\n                                                            if(name.length>0)editElement.name = name\r\n                                                            editElement.address = address\r\n                                                            if(email.length>0)editElement.email = email\r\n                                                            editElement.phone = phone\r\n                                                            if(info.length>0)editElement.info = info\r\n                                                            if(city.length>0)editElement.city = city\r\n                                                            if(type&&type.length>0)editElement.type = type\r\n                                                            editElement.birthday = new Date(birthday)\r\n                                                            const action = async() => {\r\n                                                                await addClient(editElement)\r\n                                                                Router.push('/clients')\r\n                                                            }\r\n                                                            setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                            showMiniDialog(true)\r\n                                                        }\r\n                                                        else {\r\n                                                            showSnackBar('Заполните поля: имя, адрес, город и телефон')\r\n                                                        }\r\n                                                    }} size='small' color='primary'>\r\n                                                        Добавить\r\n                                                    </Button>\r\n                                                    :\r\n                                                    null\r\n\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                                :\r\n                                <>\r\n\r\n                                <div className={classes.column}>\r\n                                    <img\r\n                                        className={classes.media}\r\n                                        src={preview}\r\n                                        alt={name}\r\n                                    />\r\n                                    {\r\n                                        ['admin', 'организация', 'менеджер'].includes(profile.role)&&certificateUrl&&certificateUrl.length>0?\r\n                                            <a href={certificateUrl} download target='_blank'>\r\n                                                <div className={classes.docUrl} style={{color: 'indigo'}}>\r\n                                                    Скачать сертификат\r\n                                                </div>\r\n                                            </a>\r\n                                            :null\r\n                                    }\r\n                                    {\r\n                                        ['admin', 'организация', 'менеджер'].includes(profile.role)&&passportUrl&&passportUrl.length>0?\r\n                                            <a href={passportUrl} download target='_blank'>\r\n                                                <div className={classes.docUrl} style={{color: 'indigo'}}>\r\n                                                    Скачать паспорт\r\n                                                </div>\r\n                                            </a>\r\n                                            :null\r\n                                    }\r\n                                    {\r\n                                        ['admin', 'организация', 'менеджер'].includes(profile.role)&&patentUrl&&patentUrl.length>0?\r\n                                            <a href={patentUrl} download target='_blank'>\r\n                                                <div className={classes.docUrl} style={{color: 'indigo'}}>\r\n                                                    Скачать патент\r\n                                                </div>\r\n                                            </a>\r\n                                            :null\r\n                                    }\r\n                                </div>\r\n                                <div style={{width: isMobileApp?'100%':'calc(100% - 300px)'}}>\r\n                                    <div className={classes.name}>\r\n                                        {name}\r\n                                    </div>\r\n                                    <div className={classes.row}>\r\n                                        <div className={classes.nameField}>\r\n                                            Адрес:&nbsp;\r\n                                        </div>\r\n                                        <div className={classes.column}>\r\n                                            {address?address.map((element, idx)=>\r\n                                                <>\r\n                                                {type==='торговая точка'?\r\n                                                    <div className={classes.value} key={idx}>\r\n                                                        {element[2]}\r\n                                                    </div>\r\n                                                    :null\r\n                                                }\r\n                                                <div className={classes.value} key={idx}>\r\n                                                    {element[0]}\r\n                                                </div>\r\n                                                <div className={classes.geo} style={{color: element[1]?'#ffb300':'red'}} onClick={()=>{\r\n                                                    if(element[1]) {\r\n                                                        setMiniDialog('Геолокация', <Geo geo={element[1]}/>, true)\r\n                                                        showMiniDialog(true)\r\n                                                    }\r\n                                                }}>\r\n                                                    {\r\n                                                        element[1]?\r\n                                                            'Посмотреть геолокацию'\r\n                                                            :\r\n                                                            'Геолокация не задана'\r\n                                                    }\r\n                                                </div>\r\n                                                </>\r\n                                            ):null}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.row}>\r\n                                        <div className={classes.nameField}>\r\n                                            E-mail:&nbsp;\r\n                                        </div>\r\n                                        <div className={classes.value}>\r\n                                            {email}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.row}>\r\n                                        <div className={classes.nameField}>\r\n                                            Телефон:&nbsp;\r\n                                        </div>\r\n                                        <div className={classes.value}>\r\n                                            <div className={classes.column}>\r\n                                                {phone?phone.map((element, idx)=>\r\n                                                    <>\r\n                                                    <div className={classes.value} key={idx}>\r\n                                                        {element}\r\n                                                    </div>\r\n                                                    </>\r\n                                                ):null}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.info}>\r\n                                        {info}\r\n                                    </div>\r\n                                </div>\r\n                                </>\r\n                            :\r\n                            'Ничего не найдено'\r\n                            }\r\n                        </CardContent>\r\n                </Card>\r\n            <input\r\n                accept='image/*'\r\n                style={{ display: 'none' }}\r\n                id='contained-button-file'\r\n                type='file'\r\n                onChange={handleChangeImage}\r\n            />\r\n            <input\r\n                ref={passportRef}\r\n                style={{ display: 'none' }}\r\n                id='input-passport'\r\n                type='file'\r\n                onChange={handleChangePassport}\r\n            />\r\n            <input\r\n                ref={certificateRef}\r\n                style={{ display: 'none' }}\r\n                id='input-certificate'\r\n                type='file'\r\n                onChange={handleChangeCertificate}\r\n            />\r\n            <input\r\n                ref={patentRef}\r\n                style={{ display: 'none' }}\r\n                id='input-patent'\r\n                type='file'\r\n                onChange={handleChangePatent}\r\n            />\r\n        </App>\r\n    )\r\n})\r\n\r\nClient.getInitialProps = async function(ctx) {\r\n    return {\r\n        data: {...(ctx.query.id==='new'?\r\n            {\r\n                client:\r\n                    {\r\n                        name: '',\r\n                        email: '',\r\n                        phone: [],\r\n                        address: [],\r\n                        info: '',\r\n                        image: '/static/add.png',\r\n                        reiting: 0,\r\n                        city: '',\r\n                        type: '',\r\n                        birthday: null,\r\n                        user: null,\r\n                        patent: null,\r\n                        passport: null,\r\n                        certificate: null,\r\n                    }\r\n            }\r\n        :\r\n            await getClient({_id: ctx.query.id}))}\r\n    };\r\n};\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Client);"]},"metadata":{},"sourceType":"module"}