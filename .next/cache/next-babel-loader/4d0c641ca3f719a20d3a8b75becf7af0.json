{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport cardItemStyle from '../../src/styleMUI/item/cardItem';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport AddShoppingCart from '@material-ui/icons/AddShoppingCart';\nimport Star from '@material-ui/icons/Star';\nimport Link from 'next/link';\nimport { onoffItem, deleteItem, favoriteItem } from '../../src/gql/items';\nimport { addBasket } from '../../src/gql/basket';\nimport Button from '@material-ui/core/Button';\nimport Confirmation from '../dialog/Confirmation';\nimport { getCountBasket } from '../../src/gql/basket';\nvar CardItem = React.memo(function (props) {\n  var classes = cardItemStyle();\n  var element = props.element,\n      setList = props.setList,\n      subCategory = props.subCategory,\n      getList = props.getList,\n      setFavorites = props.setFavorites;\n  var _props$user = props.user,\n      profile = _props$user.profile,\n      authenticated = _props$user.authenticated;\n\n  var _useState = useState(element !== undefined ? element.status : ''),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  var _useState2 = useState(element !== undefined && element.favorite !== undefined ? element.favorite : []),\n      favorite = _useState2[0],\n      setFavorite = _useState2[1];\n\n  var _props$mini_dialogAct = props.mini_dialogActions,\n      setMiniDialog = _props$mini_dialogAct.setMiniDialog,\n      showMiniDialog = _props$mini_dialogAct.showMiniDialog;\n  var showSnackBar = props.snackbarActions.showSnackBar;\n\n  var _useState3 = useState(false),\n      basket = _useState3[0],\n      setBasket = _useState3[1];\n\n  useEffect(function () {\n    if (!authenticated) {\n      if (localStorage.favorites == undefined) localStorage.favorites = _JSON$stringify([]);else {\n        var favorites = JSON.parse(localStorage.favorites);\n\n        for (var i = 0; i < favorites.length; i++) {\n          if (favorites[i]._id == element._id) setFavorite(true);\n        }\n      }\n      if (localStorage.basket == undefined) localStorage.basket = _JSON$stringify([]);else {\n        var _basket = JSON.parse(localStorage.basket);\n\n        for (var _i = 0; _i < _basket.length; _i++) {\n          if (_basket[_i].item._id == element._id) setBasket(true);\n        }\n      }\n    } else {\n      setBasket(element.basket.includes(profile._id));\n    }\n  }, []);\n  return __jsx(Card, {\n    className: classes.card\n  }, __jsx(CardContent, {\n    className: classes.column\n  }, __jsx(\"div\", {\n    className: classes.chipList\n  }, element.latest ? __jsx(\"div\", {\n    className: classes.chip,\n    style: {\n      color: 'white',\n      background: 'green'\n    }\n  }, \"\\u041D\\u043E\\u0432\\u0438\\u043D\\u043A\\u0430\") : null, element.hit ? __jsx(\"div\", {\n    className: classes.chip,\n    style: {\n      color: 'black',\n      background: 'yellow'\n    }\n  }, \"\\u0425\\u0438\\u0442\") : null), __jsx(Link, {\n    href: \"/item/[id]\",\n    as: \"/item/\".concat(element !== undefined ? element._id : 'new')\n  }, __jsx(\"img\", {\n    className: classes.media,\n    src: element.image,\n    alt: element.info\n  })), __jsx(Link, {\n    href: \"/item/[id]\",\n    as: \"/item/\".concat(element !== undefined ? element._id : 'new')\n  }, __jsx(\"div\", {\n    className: classes.name\n  }, element.name)), __jsx(Link, {\n    href: \"/item/[id]\",\n    as: \"/item/\".concat(element !== undefined ? element._id : 'new')\n  }, __jsx(\"div\", {\n    className: classes.row\n  }, element.stock === 0 || element.stock === undefined ? __jsx(\"div\", {\n    className: classes.price\n  }, \"\".concat(element.price, \" \\u0441\\u043E\\u043C\")) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.crossedPrice\n  }, \"\".concat(element.price)), __jsx(\"div\", {\n    className: classes.stockPrice\n  }, \"\".concat(element.stock, \" \\u0441\\u043E\\u043C\"))))), ['admin', 'организация', 'менеджер'].includes(profile.role) ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return onoffItem([element._id]);\n\n                        case 2:\n                          setStatus(status === 'active' ? 'deactive' : 'active');\n\n                        case 3:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function action() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action\n              }));\n              showMiniDialog(true);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })),\n    size: \"small\",\n    color: \"primary\"\n  }, status === 'active' ? 'Отключить' : 'Включить'), 'admin' === profile.role ? __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref4 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee3() {\n                  var list;\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.next = 2;\n                          return deleteItem([element._id], subCategory);\n\n                        case 2:\n                          list = _context3.sent.items;\n                          setList(list);\n\n                        case 4:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function action() {\n                  return _ref4.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action\n              }));\n              showMiniDialog(true);\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    })),\n    size: \"small\",\n    color: \"primary\"\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\") : null) : profile.role === 'client' || !authenticated ? __jsx(AddShoppingCart, {\n    style: {\n      color: basket ? '#ffb300' : '#e1e1e1'\n    },\n    className: classes.button,\n    onClick: function onClick() {\n      if (profile.role === 'client') addBasket({\n        item: element._id,\n        count: 1\n      });else if (!authenticated) {\n        var _basket2 = JSON.parse(localStorage.basket);\n\n        var index = -1;\n\n        for (var i = 0; i < _basket2.length; i++) {\n          if (_basket2[i].item._id == element._id) index = i;\n        }\n\n        if (index === -1) _basket2.push({\n          item: element,\n          count: 1\n        });\n        localStorage.basket = _JSON$stringify(_basket2);\n      }\n      showSnackBar('Товар добавлен в корзину');\n      setBasket(true);\n      getCountBasket();\n    }\n  }) : null, profile.role === 'client' || !authenticated ? __jsx(Star, {\n    className: classes.buttonToggle,\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6() {\n      var index, favorites, i, action;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(profile.role === 'client')) {\n                _context6.next = 7;\n                break;\n              }\n\n              _context6.next = 3;\n              return favoriteItem([element._id]);\n\n            case 3:\n              index = favorite.indexOf(profile._id);\n\n              if (index === -1) {\n                favorite.push(profile._id);\n                setFavorite(_toConsumableArray(favorite));\n                if (getList !== undefined) getList();\n              }\n\n              _context6.next = 8;\n              break;\n\n            case 7:\n              if (!authenticated) {\n                favorites = JSON.parse(localStorage.favorites);\n                index = -1;\n\n                for (i = 0; i < favorites.length; i++) {\n                  if (favorites[i]._id == element._id) index = i;\n                }\n\n                if (index === -1) {\n                  favorites.push(element);\n                  setFavorite(true);\n                  localStorage.favorites = _JSON$stringify(favorites);\n                  if (setFavorites) setFavorites(favorites);\n                }\n              }\n\n            case 8:\n              if (index !== -1) {\n                action =\n                /*#__PURE__*/\n                function () {\n                  var _ref6 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee5() {\n                    var _favorites;\n\n                    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            if (profile.role === 'client') {\n                              favorite.splice(index, 1);\n                              setFavorite(_toConsumableArray(favorite));\n                              if (getList !== undefined) getList();\n                            } else if (!authenticated) {\n                              _favorites = JSON.parse(localStorage.favorites);\n\n                              _favorites.splice(index, 1);\n\n                              setFavorite(false);\n                              localStorage.favorites = _JSON$stringify(_favorites);\n                              if (setFavorites) setFavorites(_favorites);\n                            }\n\n                          case 1:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n\n                  return function action() {\n                    return _ref6.apply(this, arguments);\n                  };\n                }();\n\n                setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                  action: action\n                }));\n                showMiniDialog(true);\n              }\n\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    })),\n    style: {\n      color: !authenticated && favorite === true || profile.role == 'client' && favorite.includes(profile._id) ? '#ffb300' : '#e1e1e1'\n    }\n  }) : null));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardItem);","map":null,"metadata":{},"sourceType":"module"}