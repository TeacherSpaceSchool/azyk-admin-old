{"ast":null,"code":"var __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState, useEffect } from 'react';\nimport App from '../../layouts/App';\nimport { connect } from 'react-redux';\nimport pageListStyle from '../../src/styleMUI/item/itemList';\nimport CardItem from '../../components/items/CardItem';\nimport { useRouter } from 'next/router';\nimport { getItems } from '../../src/gql/items';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Link from 'next/link';\nconst Items = React.memo(props => {\n  const classes = pageListStyle();\n  const {\n    data\n  } = props;\n  const router = useRouter();\n  let {\n    0: list,\n    1: setList\n  } = useState(data.items);\n  const {\n    search,\n    filter,\n    sort\n  } = props.app;\n  const {\n    profile\n  } = props.user;\n  useEffect(() => {\n    (async () => {\n      setList((await getItems({\n        subCategory: router.query.id,\n        search: search,\n        sort: sort,\n        filter: filter\n      })).items);\n    })();\n  }, [filter, sort, search]);\n  return __jsx(App, {\n    filters: data.filterItem,\n    sorts: data.sortItem,\n    pageName: router.query.id === 'all' ? 'Все' : data.subCategory !== null ? data.subCategory.name : 'Ничего не найдено'\n  }, __jsx(Head, null, __jsx(\"title\", null, router.query.id === 'all' ? 'Все' : data.subCategory !== null ? data.subCategory.name : 'Ничего не найдено')), __jsx(\"div\", {\n    className: classes.page\n  }, list ? list.map(element => __jsx(CardItem, {\n    setList: setList,\n    key: element._id,\n    element: element,\n    subCategory: router.query.id === 'all' ? 'all' : data.subCategory._id\n  })) : null), profile.role === 'admin' || profile.role === 'организация' || profile.role === 'менеджер' ? __jsx(Link, {\n    href: \"/item/[id]\",\n    as: `/item/new`\n  }, __jsx(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: classes.fab\n  }, __jsx(AddIcon, null))) : null);\n});\n\nItems.getInitialProps = async function (ctx) {\n  return {\n    data: await getItems({\n      subCategory: ctx.query.id,\n      search: '',\n      sort: '-updatedAt',\n      filter: ''\n    })\n  };\n};\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(Items);","map":null,"metadata":{},"sourceType":"module"}