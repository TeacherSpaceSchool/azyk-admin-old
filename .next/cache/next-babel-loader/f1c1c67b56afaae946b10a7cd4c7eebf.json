{"ast":null,"code":"import { gql } from 'apollo-boost';\nimport { SingletonApolloClient } from '../singleton/client';\nimport { SingletonStore } from '../singleton/store';\nexport const getRoutes = async ({\n  search,\n  sort,\n  filter,\n  date\n}) => {\n  try {\n    const client = new SingletonApolloClient().getClient();\n    let res = await client.query({\n      variables: {\n        search: search,\n        sort: sort,\n        filter: filter,\n        date: date\n      },\n      query: gql`\n                    query ($search: String!, $sort: String!, $filter: String!, $date: String!) {\n                        routes(search: $search, sort: $sort, filter: $filter, date: $date) {\n                            _id\n                            createdAt\n                            invoices\n                                {\n                                    _id\n                                    createdAt\n                                    orders \n                                        { \n                                            _id\n                                            createdAt\n                                            item\n                                                {\n                                                    image\n                                                    _id\n                                                    name    \n                                                    organization\n                                                        {_id name}\n                                                }\n                                            count\n                                            allPrice\n                                            status\n                                         }\n                                    client \n                                        { \n                                            _id\n                                            name\n                                            email\n                                            phone\n                                            user \n                                                {_id } \n                                        }\n                                    allPrice\n                                    info\n                                    address\n                                    paymentMethod\n                                    number\n                                    confirmationForwarder\n                                    confirmationClient\n                                }\n                            employment\n                                { \n                                    _id\n                                    createdAt\n                                    name\n                                    email\n                                    phone\n                                    user \n                                        {_id role status }\n                                    organization \n                                        {_id name}\n                                }\n                            status\n                            dateStart\n                            dateEnd\n                            number\n                        }\n                        sortRoute {\n                            name\n                            field\n                        }\n                        filterRoute {\n                           name\n                           value\n                        }\n                    }`\n    });\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const getRoute = async ({\n  _id\n}) => {\n  try {\n    const client = new SingletonApolloClient().getClient();\n    let res = await client.query({\n      variables: {\n        _id: _id\n      },\n      query: gql`\n                    query ($_id: ID!) {\n                        route(_id: $_id) {\n                            _id\n                            createdAt\n                            invoices\n                                {\n                                    _id\n                                    createdAt\n                                    orders \n                                        { \n                                            _id\n                                            createdAt\n                                            item\n                                                {\n                                                    image\n                                                    _id\n                                                    name    \n                                                    organization\n                                                        {_id name}\n                                                }\n                                            count\n                                            allPrice\n                                            status\n                                         }\n                                    client \n                                        { \n                                            _id\n                                            name\n                                            email\n                                            phone\n                                            user \n                                                {_id } \n                                        }\n                                    allPrice\n                                    info\n                                    address\n                                    paymentMethod\n                                    number\n                                    confirmationForwarder\n                                    confirmationClient\n                                }\n                            employment\n                                { \n                                    _id\n                                    createdAt\n                                    name\n                                    email\n                                    phone\n                                    user \n                                        {_id role status }\n                                    organization \n                                        {_id name}\n                                }\n                            status\n                            dateStart\n                            dateEnd\n                            number\n                        }\n                    }`\n    });\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const deleteRoute = async ids => {\n  try {\n    const client = new SingletonApolloClient().getClient();\n    await client.mutate({\n      variables: {\n        _id: ids\n      },\n      mutation: gql`\n                    mutation ($_id: [ID]!) {\n                        deleteRoute(_id: $_id) {\n                             data\n                        }\n                    }`\n    });\n    return await getRoutes(new SingletonStore().getStore().getState().app);\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const addRoute = async element => {\n  try {\n    const client = new SingletonApolloClient().getClient();\n    await client.mutate({\n      variables: element,\n      mutation: gql`\n                    mutation ($invoices: [ID]!, $employment: ID!, $dateStart: Date!) {\n                        addRoute(invoices: $invoices, employment: $employment, dateStart: $dateStart) {\n                             data\n                        }\n                    }`\n    });\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const setRoute = async element => {\n  try {\n    const client = new SingletonApolloClient().getClient();\n    await client.mutate({\n      variables: element,\n      mutation: gql`\n                    mutation ($_id: ID!, $invoices: [ID], $employment: ID, $cancelInvoices: [ID], $dateStart: Date) {\n                        setRoute(_id: $_id, invoices: $invoices, employment: $employment, cancelInvoices: $cancelInvoices, dateStart: $dateStart) {\n                             data\n                        }\n                    }`\n    });\n  } catch (err) {\n    console.error(err);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}