{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n                    mutation ($_id: ID!, $image: Upload, $url: String, $title: String) {\\n                        setAds(_id: $_id, image: $image, url: $url, title: $title) {\\n                             data\\n                        }\\n                    }\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n                    mutation ($image: Upload!, $url: String!, $title: String!) {\\n                        addAds(image: $image, url: $url, title: $title) {\\n                             data\\n                        }\\n                    }\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n                    mutation ($_id: [ID]!) {\\n                        deleteAds(_id: $_id) {\\n                             data\\n                        }\\n                    }\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n                    query ($search: String!, $sort: String!, $filter: String!) {\\n                        adss(search: $search, sort: $sort, filter: $filter) {\\n                            _id\\n                            image\\n                            url\\n                            title\\n                            createdAt\\n                          }\\n                          sortAds {\\n                           name\\n                            field\\n                          }\\n                          filterAds {\\n                           name\\n                           value\\n                          }\\n                    }\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n                    query {\\n                        ads {\\n                            _id\\n                            image\\n                            url\\n                            title\\n                            createdAt\\n                          }\\n                    }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from 'apollo-boost';\nimport { SingletonApolloClient } from '../singleton/client';\nimport { SingletonStore } from '../singleton/store';\nimport { readDataGQL } from './index';\nexport var getAds =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var client, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            client = new SingletonApolloClient().getClient();\n            _context.next = 4;\n            return client.query({\n              query: gql(_templateObject())\n            });\n\n          case 4:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res.data);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function getAds() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getAdss =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(_ref2) {\n    var search, sort, filter, client, res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            search = _ref2.search, sort = _ref2.sort, filter = _ref2.filter;\n            _context2.prev = 1;\n            client = new SingletonApolloClient().getClient();\n            _context2.next = 5;\n            return client.query({\n              variables: {\n                search: search,\n                sort: sort,\n                filter: filter\n              },\n              query: gql(_templateObject2())\n            });\n\n          case 5:\n            res = _context2.sent;\n            return _context2.abrupt(\"return\", res.data);\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.error(_context2.t0);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 9]]);\n  }));\n\n  return function getAdss(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var deleteAds =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(ids) {\n    var client;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            client = new SingletonApolloClient().getClient();\n            _context3.next = 4;\n            return client.mutate({\n              variables: {\n                _id: ids\n              },\n              mutation: gql(_templateObject3())\n            });\n\n          case 4:\n            _context3.next = 6;\n            return getAdss(new SingletonStore().getStore().getState().app);\n\n          case 6:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error(_context3.t0);\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 9]]);\n  }));\n\n  return function deleteAds(_x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var addAds =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(element) {\n    var client, list;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            client = new SingletonApolloClient().getClient();\n            _context4.next = 4;\n            return client.mutate({\n              variables: element,\n              mutation: gql(_templateObject4())\n            });\n\n          case 4:\n            _context4.next = 6;\n            return getAdss(new SingletonStore().getStore().getState().app);\n\n          case 6:\n            list = _context4.sent;\n            return _context4.abrupt(\"return\", list);\n\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.error(_context4.t0);\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 10]]);\n  }));\n\n  return function addAds(_x3) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var setAds =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(element) {\n    var client, list;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            client = new SingletonApolloClient().getClient();\n            _context5.next = 4;\n            return client.mutate({\n              variables: element,\n              mutation: gql(_templateObject5())\n            });\n\n          case 4:\n            _context5.next = 6;\n            return getAdss(new SingletonStore().getStore().getState().app);\n\n          case 6:\n            list = _context5.sent;\n            return _context5.abrupt(\"return\", list);\n\n          case 10:\n            _context5.prev = 10;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.error(_context5.t0);\n\n          case 13:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 10]]);\n  }));\n\n  return function setAds(_x4) {\n    return _ref6.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\src\\gql\\ads.js"],"names":["gql","SingletonApolloClient","SingletonStore","readDataGQL","getAds","client","getClient","query","res","data","console","error","getAdss","search","sort","filter","variables","deleteAds","ids","mutate","_id","mutation","getStore","getState","app","addAds","element","list","setAds"],"mappings":"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","sourcesContent":["import { gql } from 'apollo-boost';\r\nimport { SingletonApolloClient } from '../singleton/client';\r\nimport { SingletonStore } from '../singleton/store';\r\nimport { readDataGQL } from './index';\r\n\r\nexport const getAds = async()=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        let res = await client\r\n            .query({\r\n                query: gql`\r\n                    query {\r\n                        ads {\r\n                            _id\r\n                            image\r\n                            url\r\n                            title\r\n                            createdAt\r\n                          }\r\n                    }`,\r\n            })\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const getAdss = async({search: search, sort: sort, filter: filter})=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        let res = await client\r\n            .query({\r\n                variables: {search: search, sort: sort, filter: filter},\r\n                query: gql`\r\n                    query ($search: String!, $sort: String!, $filter: String!) {\r\n                        adss(search: $search, sort: $sort, filter: $filter) {\r\n                            _id\r\n                            image\r\n                            url\r\n                            title\r\n                            createdAt\r\n                          }\r\n                          sortAds {\r\n                           name\r\n                            field\r\n                          }\r\n                          filterAds {\r\n                           name\r\n                           value\r\n                          }\r\n                    }`,\r\n            })\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const deleteAds = async(ids)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: {_id: ids},\r\n            mutation : gql`\r\n                    mutation ($_id: [ID]!) {\r\n                        deleteAds(_id: $_id) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        return await getAdss(new SingletonStore().getStore().getState().app)\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const addAds = async(element)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: element,\r\n            mutation : gql`\r\n                    mutation ($image: Upload!, $url: String!, $title: String!) {\r\n                        addAds(image: $image, url: $url, title: $title) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        let list = await getAdss(new SingletonStore().getStore().getState().app)\r\n        return list\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const setAds = async(element)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: element,\r\n            mutation : gql`\r\n                    mutation ($_id: ID!, $image: Upload, $url: String, $title: String) {\r\n                        setAds(_id: $_id, image: $image, url: $url, title: $title) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        let list = await getAdss(new SingletonStore().getStore().getState().app)\r\n        return list\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}