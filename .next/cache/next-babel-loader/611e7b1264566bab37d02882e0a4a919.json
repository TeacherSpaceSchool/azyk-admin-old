{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as appActions from '../../redux/actions/app';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport Done from '@material-ui/icons/Done';\nimport Clear from '@material-ui/icons/Clear';\nimport IconButton from '@material-ui/core/IconButton';\nimport dialogContentStyle from '../../src/styleMUI/dialogContent';\nconst Confirmation = React.memo(props => {\n  const {\n    showMiniDialog\n  } = props.mini_dialogActions;\n  const {\n    showSnackBar\n  } = props.snackbarActions;\n  const {\n    showLoad\n  } = props.appActions;\n  const {\n    classes,\n    action\n  } = props;\n  return __jsx(\"div\", {\n    className: classes.line\n  }, __jsx(IconButton, {\n    onClick: async () => {\n      try {\n        await showMiniDialog(false);\n        await showLoad(true);\n        await action();\n        await showLoad(false);\n      } catch (err) {\n        showSnackBar('Ошибка');\n      }\n    },\n    \"aria-label\": \"Delete\"\n  }, __jsx(Done, {\n    className: classes.button\n  })), __jsx(IconButton, {\n    onClick: async () => {\n      showMiniDialog(false);\n    },\n    \"aria-label\": \"Cancel\"\n  }, __jsx(Clear, {\n    className: classes.button\n  })));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    mini_dialog: state.mini_dialog\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    appActions: bindActionCreators(appActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(Confirmation));","map":null,"metadata":{},"sourceType":"module"}