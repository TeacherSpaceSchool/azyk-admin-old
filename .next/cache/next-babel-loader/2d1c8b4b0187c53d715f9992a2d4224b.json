{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\pages\\\\item\\\\[id].js\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState, useEffect } from 'react';\nimport App from '../../layouts/App';\nimport { connect } from 'react-redux';\nimport { getSubCategorys } from '../../src/gql/subcategory';\nimport { getEmployment } from '../../src/gql/employment';\nimport { getOrganizations } from '../../src/gql/organization';\nimport { getItem, addItem, setItem, onoffItem, deleteItem, favoriteItem } from '../../src/gql/items';\nimport { addBasket } from '../../src/gql/basket';\nimport { checkInt } from '../../src/lib';\nimport itemStyle from '../../src/styleMUI/item/item';\nimport { useRouter } from 'next/router';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { FacebookShareButton, VKShareButton, OKShareButton, WhatsappShareButton, TelegramShareButton, FacebookIcon, VKIcon, OKIcon, TelegramIcon, WhatsappIcon } from 'react-share';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Switch from '@material-ui/core/Switch';\nimport Router from 'next/router';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport Star from '@material-ui/icons/Star';\nimport TextField from '@material-ui/core/TextField';\nimport Confirmation from '../../components/dialog/Confirmation';\nimport { urlMain } from '../../redux/constants/other';\nimport DeliveryDays from '../../components/dialog/DeliveryDays';\nimport { getCountBasket } from '../../src/gql/basket';\nconst Item = React.memo(props => {\n  const classes = itemStyle();\n  const {\n    data\n  } = props;\n  const router = useRouter();\n  const {\n    isMobileApp\n  } = props.app;\n  const {\n    profile,\n    authenticated\n  } = props.user;\n  let {\n    0: stock,\n    1: setStock\n  } = useState(data.item !== null ? data.item.stock : '');\n  let {\n    0: name,\n    1: setName\n  } = useState(data.item !== null ? data.item.name : '');\n  let {\n    0: info,\n    1: setInfo\n  } = useState(data.item !== null ? data.item.info : '');\n  let {\n    0: price,\n    1: setPrice\n  } = useState(data.item !== null ? data.item.price : '');\n  let {\n    0: deliveryDays,\n    1: setDeliveryDays\n  } = useState(data.item !== null ? data.item.deliveryDays : []);\n  let {\n    0: subCategory,\n    1: setSubCategory\n  } = useState(data.item !== null ? data.item.subCategory : {});\n  let {\n    0: status,\n    1: setStatus\n  } = useState(data.item !== null ? data.item.status : '');\n\n  let handleSubCategory = event => {\n    setSubCategory({\n      _id: event.target.value,\n      name: event.target.name\n    });\n  };\n\n  let {\n    0: organization,\n    1: setOrganization\n  } = useState(data.item !== null ? data.item.organization : {});\n\n  let handleOrganization = event => {\n    setOrganization({\n      _id: event.target.value,\n      name: event.target.name\n    });\n  };\n\n  let {\n    0: hit,\n    1: setHit\n  } = useState(data.item !== null ? data.item.hit : false);\n  let {\n    0: latest,\n    1: setLatest\n  } = useState(data.item !== null ? data.item.latest : false);\n  let {\n    0: preview,\n    1: setPreview\n  } = useState(data.item !== null ? data.item.image : '');\n  let {\n    0: image,\n    1: setImage\n  } = useState(undefined);\n  let {\n    0: employment,\n    1: setEmployment\n  } = useState({\n    organization: ''\n  });\n\n  let handleChangeImage = event => {\n    setImage(event.target.files[0]);\n    setPreview(URL.createObjectURL(event.target.files[0]));\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (['организация', 'менеджер', 'экспедитор'].includes(profile.role)) {\n        let employment = (await getEmployment({\n          _id: profile._id\n        })).employment;\n        setOrganization(employment.organization);\n        setEmployment(employment);\n      }\n    })();\n  }, [profile]);\n  useEffect(() => {\n    if (!authenticated) {\n      if (localStorage.favorites == undefined) localStorage.favorites = _JSON$stringify([]);else if (data.item !== null) {\n        let favorites = JSON.parse(localStorage.favorites);\n\n        for (let i = 0; i < favorites.length; i++) {\n          if (favorites[i]._id == data.item._id) setFavorite(true);\n        }\n      }\n      if (localStorage.basket == undefined) localStorage.basket = _JSON$stringify([]);\n    }\n  }, []); //BUY\n\n  let {\n    0: count,\n    1: setCount\n  } = useState(0);\n\n  let increment = () => {\n    count += 1;\n    setCount(count);\n  };\n\n  let decrement = () => {\n    if (count > 0) count -= 1;\n    setCount(count);\n  };\n\n  const {\n    setMiniDialog,\n    showMiniDialog\n  } = props.mini_dialogActions;\n  const {\n    showSnackBar\n  } = props.snackbarActions;\n  let {\n    0: favorite,\n    1: setFavorite\n  } = useState(data.item !== null && data.item.favorite !== undefined ? data.item.favorite : []);\n  console.log(data.item.subCategory);\n  return __jsx(App, {\n    subcategory: data.item.subCategory ? data.item.subCategory : undefined,\n    category: data.item.subCategory ? data.item.subCategory.category : undefined,\n    filters: data.filterItem,\n    sorts: data.sortItem,\n    pageName: data.item !== null ? router.query.id === 'new' ? 'Добавить' : data.item.name : 'Ничего не найдено',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, data.item !== null ? router.query.id === 'new' ? 'Добавить' : data.item.name : 'Ничего не найдено'), __jsx(\"meta\", {\n    name: \"description\",\n    content: data.item !== null ? data.item.info : 'Ничего не найдено',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: data.item !== null ? router.query.id === 'new' ? 'Добавить' : data.item.name : 'Ничего не найдено',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: data.item !== null ? data.item.info : 'Ничего не найдено',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: \"website\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: preview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `${urlMain}/item/${router.query.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    rel: \"canonical\",\n    href: `${urlMain}/item/${router.query.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  })), __jsx(Card, {\n    className: classes.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, __jsx(CardContent, {\n    className: isMobileApp ? classes.column : classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, profile.role === 'admin' || ['менеджер', 'организация'].includes(profile.role) && data.item.organization._id === employment.organization._id ? data.item !== null || router.query.id === 'new' ? __jsx(React.Fragment, null, __jsx(\"label\", {\n    htmlFor: \"contained-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: isMobileApp ? classes.mediaM : classes.mediaD,\n    src: preview,\n    alt: 'Добавить',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: classes.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(TextField, {\n    label: \"\\u0418\\u043C\\u044F\",\n    value: name,\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    onChange: event => {\n      setName(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: classes.price,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, __jsx(TextField, {\n    label: \"\\u0426\\u0435\\u043D\\u0430\",\n    value: price,\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    onChange: event => {\n      setPrice(checkInt(event.target.value));\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: classes.price,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, __jsx(TextField, {\n    label: \"\\u0421\\u043A\\u0438\\u0434\\u043A\\u0430\",\n    value: stock,\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    onChange: event => {\n      setStock(checkInt(event.target.value));\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  })), profile.role === 'admin' ? __jsx(FormControl, {\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"), __jsx(Select, {\n    value: organization._id,\n    onChange: handleOrganization,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, data.organizations.map(element => __jsx(MenuItem, {\n    key: element._id,\n    value: element._id,\n    ola: element.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, element.name)))) : __jsx(Input, {\n    value: organization.name,\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    inputProps: {\n      'aria-label': 'description',\n      readOnly: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }), __jsx(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: () => {\n      setMiniDialog('Дни поставки', __jsx(DeliveryDays, {\n        deliveryDays: deliveryDays,\n        setDeliveryDays: setDeliveryDays,\n        edit: profile.role === 'admin' || ['менеджер', 'организация'].includes(profile.role) && data.item.organization._id === employment.organization._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"\\u0414\\u043D\\u0438 \\u043F\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0438 \\u0434\\u043B\\u044F \\u0442\\u043E\\u0440\\u0433\\u043E\\u0432\\u044B\\u0445 \\u0442\\u043E\\u0447\\u0435\\u043A\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), __jsx(FormControl, {\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"\\u041F\\u043E\\u0434\\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\"), __jsx(Select, {\n    value: subCategory._id,\n    onChange: handleSubCategory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, data.subCategorys.map(element => __jsx(MenuItem, {\n    key: element._id,\n    value: element._id,\n    ola: element.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, element.name)))), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }), profile.role === 'admin' ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      checked: hit,\n      onChange: () => {\n        setHit(!hit);\n      },\n      color: \"primary\",\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }),\n    label: \"\\u041F\\u043E\\u043F\\u0443\\u043B\\u044F\\u0440\\u043D\\u043E\\u0435\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }), __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      checked: latest,\n      onChange: () => {\n        setLatest(!latest);\n      },\n      color: \"primary\",\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }),\n    label: \"\\u041D\\u043E\\u0432\\u0438\\u043D\\u043A\\u0430\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  })), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  })) : null, __jsx(TextField, {\n    multiline: true,\n    label: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\",\n    value: info,\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    onChange: event => {\n      setInfo(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, router.query.id === 'new' ? __jsx(Button, {\n    onClick: async () => {\n      if (name.length > 0 && price > 0 && subCategory._id != undefined && organization._id != undefined) {\n        const action = async () => {\n          await addItem({\n            name: name,\n            stock: stock,\n            image: image,\n            info: info,\n            price: price,\n            subCategory: subCategory._id,\n            hit: hit,\n            latest: latest,\n            organization: organization._id,\n            deliveryDays: deliveryDays\n          }, subCategory._id);\n          Router.push(`/items/${subCategory._id}`);\n        };\n\n        setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n          action: action,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }));\n        showMiniDialog(true);\n      } else {\n        showSnackBar('Заполните все поля');\n      }\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\") : __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: async () => {\n      let editElement = {\n        _id: data.item._id\n      };\n      if (stock > 0 && stock !== data.item.stock) editElement.stock = stock;\n      if (name.length > 0 && name !== data.item.name) editElement.name = name;\n      if (image !== undefined) editElement.image = image;\n      if (info.length > 0 && info !== data.item.info) editElement.info = info;\n      if (price > 0 && price !== data.item.price) editElement.price = price;\n      if (hit !== data.item.hit) editElement.hit = hit;\n      if (latest !== data.item.latest) editElement.latest = latest;\n      if (organization._id !== data.item.organization._id) editElement.organization = organization._id;\n      if (subCategory._id !== data.item.subCategory._id) editElement.subCategory = subCategory._id;\n      if (deliveryDays) editElement.deliveryDays = deliveryDays;\n\n      const action = async () => {\n        await setItem(editElement, subCategory._id); //Router.push(`/items/${subCategory._id}`)\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), __jsx(Button, {\n    onClick: async () => {\n      const action = async () => {\n        await onoffItem([data.item._id]);\n        setStatus(status === 'active' ? 'deactive' : 'active');\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, status === 'active' ? 'Отключить' : 'Включить'), profile.role === 'admin' ? __jsx(Button, {\n    onClick: async () => {\n      const action = async () => {\n        await deleteItem([data.item._id], subCategory._id);\n        Router.push(`/items/${subCategory._id}`);\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\") : null)))) : 'Ничего не найдено' : data.item === null || router.query.id === 'new' ? 'Ничего не найдено' : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.divImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: isMobileApp ? classes.mediaM : classes.mediaD,\n    src: data.item.image,\n    alt: data.item.info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343\n    },\n    __self: this\n  }), profile.role === 'client' || !authenticated ? __jsx(Star, {\n    className: classes.buttonToggle,\n    onClick: async () => {\n      let index;\n\n      if (profile.role === 'client') {\n        await favoriteItem([data.item._id]);\n        index = favorite.indexOf(profile._id);\n\n        if (index === -1) {\n          favorite.push(profile._id);\n          setFavorite([...favorite]);\n        }\n      } else if (!authenticated) {\n        let favorites = JSON.parse(localStorage.favorites);\n        index = -1;\n\n        for (let i = 0; i < favorites.length; i++) {\n          if (favorites[i]._id == data.item._id) index = i;\n        }\n\n        if (index === -1) {\n          favorites.push(data.item);\n          setFavorite(true);\n          localStorage.favorites = _JSON$stringify(favorites);\n        }\n      }\n\n      if (index !== -1) {\n        const action = async () => {\n          if (profile.role === 'client') {\n            favorite.splice(index, 1);\n            setFavorite([...favorite]);\n          } else if (!authenticated) {\n            let favorites = JSON.parse(localStorage.favorites);\n            favorites.splice(index, 1);\n            setFavorite(false);\n            localStorage.favorites = _JSON$stringify(favorites);\n          }\n        };\n\n        setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n          action: action,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387\n          },\n          __self: this\n        }));\n        showMiniDialog(true);\n      }\n    },\n    style: {\n      color: !authenticated && favorite === true || profile.role == 'client' && favorite.includes(profile._id) ? '#ffb300' : '#e1e1e1'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350\n    },\n    __self: this\n  }) : null), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395\n    },\n    __self: this\n  }, isMobileApp ? __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398\n    },\n    __self: this\n  }) : null, __jsx(\"h1\", {\n    className: classes.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402\n    },\n    __self: this\n  }, data.item.name), __jsx(\"div\", {\n    className: classes.share,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405\n    },\n    __self: this\n  }, data.item.organization.name), __jsx(\"div\", {\n    className: classes.deliveryDays,\n    onClick: () => {\n      setMiniDialog('Дни поставки', __jsx(DeliveryDays, {\n        deliveryDays: deliveryDays,\n        setDeliveryDays: setDeliveryDays,\n        edit: profile.role === 'admin' || ['менеджер', 'организация'].includes(profile.role) && data.item.organization._id === employment.organization._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408\n    },\n    __self: this\n  }, \"\\u0414\\u043D\\u0438 \\u043F\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0438 \\u0434\\u043B\\u044F \\u0442\\u043E\\u0440\\u0433\\u043E\\u0432\\u044B\\u0445 \\u0442\\u043E\\u0447\\u0435\\u043A\"), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415\n    },\n    __self: this\n  }, data.item.stock === 0 || data.item.stock === undefined ? __jsx(\"div\", {\n    className: classes.price,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418\n    },\n    __self: this\n  }, data.item.price, \"\\xA0\\u0441\\u043E\\u043C\") : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.stockPrice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423\n    },\n    __self: this\n  }, data.item.stock, \"\\xA0\\u0441\\u043E\\u043C\"), __jsx(\"div\", {\n    className: classes.crossedPrice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426\n    },\n    __self: this\n  }, data.item.price, \"\\xA0\\u0441\\u043E\\u043C\"))), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432\n    },\n    __self: this\n  }), ['агент', 'client'].includes(profile.role) || !authenticated ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: isMobileApp ? classes.column : classes.rowCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.counter,\n    style: isMobileApp ? {\n      marginBottom: 20\n    } : {\n      marginRight: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.counterbtn,\n    onClick: decrement,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438\n    },\n    __self: this\n  }, \"\\u2013\"), __jsx(\"input\", {\n    type: \"text\",\n    className: classes.counternmbr,\n    value: count,\n    onChange: event => {\n      setCount(isNaN(event.target.value) || event.target.value.length === 0 ? 0 : _parseInt(event.target.value));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.counterbtn,\n    onClick: increment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442\n    },\n    __self: this\n  }, \"+\")), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: () => {\n      if (['агент', 'client'].includes(profile.role)) addBasket({\n        item: data.item._id,\n        count: count > 0 ? count : 1\n      });else if (!authenticated) {\n        let basket = JSON.parse(localStorage.basket);\n        let index = -1;\n\n        for (let i = 0; i < basket.length; i++) {\n          if (basket[i].item._id == data.item._id) index = i;\n        }\n\n        if (index === -1) basket.push({\n          item: data.item,\n          count: count\n        });\n        localStorage.basket = _JSON$stringify(basket);\n      }\n      showSnackBar('Товар добавлен в корзину');\n      getCountBasket();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444\n    },\n    __self: this\n  }, \"\\u0412 \\u041A\\u041E\\u0420\\u0417\\u0418\\u041D\\u0423\")), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.share,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470\n    },\n    __self: this\n  }, \"\\u041F\\u043E\\u0434\\u0435\\u043B\\u0438\\u0442\\u044C\\u0441\\u044F:\"), __jsx(\"div\", {\n    className: classes.rowCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473\n    },\n    __self: this\n  }, __jsx(FacebookShareButton, {\n    url: process.browser ? window.location.href.toString() : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474\n    },\n    __self: this\n  }, __jsx(FacebookIcon, {\n    size: 32,\n    round: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477\n    },\n    __self: this\n  })), \"\\xA0 \\xA0\", __jsx(VKShareButton, {\n    url: process.browser ? window.location.href : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483\n    },\n    __self: this\n  }, __jsx(VKIcon, {\n    size: 32,\n    round: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484\n    },\n    __self: this\n  })), \"\\xA0 \\xA0\", __jsx(OKShareButton, {\n    url: process.browser ? window.location.href : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490\n    },\n    __self: this\n  }, __jsx(OKIcon, {\n    size: 32,\n    round: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491\n    },\n    __self: this\n  })), \"\\xA0 \\xA0\", __jsx(WhatsappShareButton, {\n    url: process.browser ? window.location.href : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497\n    },\n    __self: this\n  }, __jsx(WhatsappIcon, {\n    size: 32,\n    round: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498\n    },\n    __self: this\n  })), \"\\xA0 \\xA0\", __jsx(TelegramShareButton, {\n    url: process.browser ? window.location.href : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504\n    },\n    __self: this\n  }, __jsx(TelegramIcon, {\n    size: 32,\n    round: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505\n    },\n    __self: this\n  })))) : null)))), __jsx(\"input\", {\n    accept: \"image/*\",\n    style: {\n      display: 'none'\n    },\n    id: \"contained-button-file\",\n    type: \"file\",\n    onChange: handleChangeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524\n    },\n    __self: this\n  }));\n});\n\nItem.getInitialProps = async function (ctx) {\n  return {\n    data: _objectSpread({}, ctx.query.id !== 'new' ? await getItem({\n      _id: ctx.query.id\n    }) : {\n      item: {\n        image: '/static/add.png',\n        stock: 0,\n        name: '',\n        info: '',\n        price: 0,\n        subCategory: {\n          _id: ''\n        },\n        organization: {\n          _id: ''\n        },\n        hit: false,\n        latest: false,\n        deliveryDays: ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс']\n      }\n    }, (await getOrganizations({\n      search: '',\n      sort: 'name',\n      filter: ''\n    })), (await getSubCategorys({\n      category: 'all',\n      search: '',\n      sort: 'name',\n      filter: ''\n    })))\n  };\n};\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\pages\\item\\[id].js"],"names":["Head","React","useState","useEffect","App","connect","getSubCategorys","getEmployment","getOrganizations","getItem","addItem","setItem","onoffItem","deleteItem","favoriteItem","addBasket","checkInt","itemStyle","useRouter","Card","CardContent","FormControlLabel","FacebookShareButton","VKShareButton","OKShareButton","WhatsappShareButton","TelegramShareButton","FacebookIcon","VKIcon","OKIcon","TelegramIcon","WhatsappIcon","Button","Input","InputLabel","MenuItem","FormControl","Select","Switch","Router","bindActionCreators","mini_dialogActions","snackbarActions","Star","TextField","Confirmation","urlMain","DeliveryDays","getCountBasket","Item","memo","props","classes","data","router","isMobileApp","app","profile","authenticated","user","stock","setStock","item","name","setName","info","setInfo","price","setPrice","deliveryDays","setDeliveryDays","subCategory","setSubCategory","status","setStatus","handleSubCategory","event","_id","target","value","organization","setOrganization","handleOrganization","hit","setHit","latest","setLatest","preview","setPreview","image","setImage","undefined","employment","setEmployment","handleChangeImage","files","URL","createObjectURL","includes","role","localStorage","favorites","JSON","parse","i","length","setFavorite","basket","count","setCount","increment","decrement","setMiniDialog","showMiniDialog","showSnackBar","favorite","console","log","category","filterItem","sortItem","query","id","page","column","row","mediaM","mediaD","inputM","inputD","organizations","map","element","readOnly","subCategorys","action","push","editElement","divImage","buttonToggle","index","indexOf","splice","color","share","stockPrice","crossedPrice","rowCenter","counter","marginBottom","marginRight","counterbtn","counternmbr","isNaN","button","process","browser","window","location","href","toString","display","getInitialProps","ctx","search","sort","filter","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import Head from 'next/head';\r\nimport React, { useState, useEffect } from 'react';\r\nimport App from '../../layouts/App';\r\nimport { connect } from 'react-redux'\r\nimport { getSubCategorys } from '../../src/gql/subcategory'\r\nimport { getEmployment } from '../../src/gql/employment'\r\nimport { getOrganizations } from '../../src/gql/organization'\r\nimport { getItem, addItem, setItem, onoffItem, deleteItem, favoriteItem } from '../../src/gql/items'\r\nimport { addBasket } from '../../src/gql/basket'\r\nimport { checkInt } from '../../src/lib'\r\nimport itemStyle from '../../src/styleMUI/item/item'\r\nimport { useRouter } from 'next/router'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport {\r\n    FacebookShareButton,\r\n    VKShareButton,\r\n    OKShareButton,\r\n    WhatsappShareButton,\r\n    TelegramShareButton,\r\n    FacebookIcon,\r\n    VKIcon,\r\n    OKIcon,\r\n    TelegramIcon,\r\n    WhatsappIcon,\r\n} from 'react-share';\r\nimport Button from '@material-ui/core/Button';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Router from 'next/router'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport Star from '@material-ui/icons/Star';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Confirmation from '../../components/dialog/Confirmation'\r\nimport { urlMain } from '../../redux/constants/other'\r\nimport DeliveryDays from '../../components/dialog/DeliveryDays';\r\nimport { getCountBasket } from '../../src/gql/basket'\r\n\r\n\r\nconst Item = React.memo((props) => {\r\n    const classes = itemStyle();\r\n    const { data } = props;\r\n    const router = useRouter()\r\n    const { isMobileApp } = props.app;\r\n    const { profile, authenticated } = props.user;\r\n    let [stock, setStock] = useState(data.item!==null?data.item.stock:'');\r\n    let [name, setName] = useState(data.item!==null?data.item.name:'');\r\n    let [info, setInfo] = useState(data.item!==null?data.item.info:'');\r\n    let [price, setPrice] = useState(data.item!==null?data.item.price:'');\r\n    let [deliveryDays, setDeliveryDays] = useState(data.item!==null?data.item.deliveryDays:[]);\r\n    let [subCategory, setSubCategory] = useState(data.item!==null?data.item.subCategory:{});\r\n    let [status, setStatus] = useState(data.item!==null?data.item.status:'');\r\n    let handleSubCategory =  (event) => {\r\n        setSubCategory({_id: event.target.value, name: event.target.name})\r\n    };\r\n    let [organization, setOrganization] = useState(data.item!==null?data.item.organization:{});\r\n    let handleOrganization =  (event) => {\r\n        setOrganization({_id: event.target.value, name: event.target.name})\r\n    };\r\n    let [hit, setHit] = useState(data.item!==null?data.item.hit:false);\r\n    let [latest, setLatest] = useState(data.item!==null?data.item.latest:false);\r\n    let [preview, setPreview] = useState(data.item!==null?data.item.image:'');\r\n    let [image, setImage] = useState(undefined);\r\n    let [employment, setEmployment] = useState({organization: ''});\r\n    let handleChangeImage = ((event) => {\r\n        setImage(event.target.files[0])\r\n        setPreview(URL.createObjectURL(event.target.files[0]))\r\n    })\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            if(['организация', 'менеджер', 'экспедитор'].includes(profile.role)){\r\n                let employment = (await getEmployment({_id: profile._id})).employment\r\n                setOrganization(employment.organization)\r\n                setEmployment(employment)\r\n            }\r\n        })()\r\n    },[profile])\r\n    useEffect(()=>{\r\n        if(!authenticated){\r\n            if(localStorage.favorites==undefined)\r\n                localStorage.favorites = JSON.stringify([])\r\n            else if(data.item!==null){\r\n                let favorites = JSON.parse(localStorage.favorites)\r\n                for(let i=0; i<favorites.length; i++){\r\n                    if(favorites[i]._id == data.item._id)\r\n                        setFavorite(true)\r\n                }\r\n            }\r\n            if(localStorage.basket==undefined)\r\n                localStorage.basket = JSON.stringify([])\r\n        }\r\n    },[])\r\n    //BUY\r\n    let [count, setCount] = useState(0);\r\n    let increment = ()=>{\r\n        count+=1\r\n        setCount(count)\r\n    }\r\n    let decrement = ()=>{\r\n        if(count>0)\r\n            count-=1\r\n            setCount(count)\r\n    }\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    const { showSnackBar } = props.snackbarActions;\r\n    let [favorite, setFavorite] = useState(data.item!==null&&data.item.favorite!==undefined?data.item.favorite:[]);\r\n    console.log(data.item.subCategory)\r\n    return (\r\n        <App subcategory={data.item.subCategory?data.item.subCategory:undefined} category={data.item.subCategory?data.item.subCategory.category:undefined} filters={data.filterItem} sorts={data.sortItem} pageName={data.item!==null?router.query.id==='new'?'Добавить':data.item.name:'Ничего не найдено'}>\r\n            <Head>\r\n                <title>{data.item!==null?router.query.id==='new'?'Добавить':data.item.name:'Ничего не найдено'}</title>\r\n                <meta name='description' content={data.item!==null?data.item.info:'Ничего не найдено'} />\r\n                <meta property='og:title' content={data.item!==null?router.query.id==='new'?'Добавить':data.item.name:'Ничего не найдено'} />\r\n                <meta property='og:description' content={data.item!==null?data.item.info:'Ничего не найдено'} />\r\n                <meta property='og:type' content='website' />\r\n                <meta property='og:image' content={preview} />\r\n                <meta property=\"og:url\" content={`${urlMain}/item/${router.query.id}`} />\r\n                <link rel='canonical' href={`${urlMain}/item/${router.query.id}`}/>\r\n            </Head>\r\n            <Card className={classes.page}>\r\n                    <CardContent className={isMobileApp?classes.column:classes.row}>\r\n                        {\r\n                            profile.role==='admin'||(['менеджер', 'организация'].includes(profile.role)&&data.item.organization._id===employment.organization._id)?\r\n                                data.item!==null||router.query.id==='new'?\r\n                                    <>\r\n                                    <label htmlFor='contained-button-file'>\r\n                                        <img\r\n                                            className={isMobileApp?classes.mediaM:classes.mediaD}\r\n                                            src={preview}\r\n                                            alt={'Добавить'}\r\n                                        />\r\n                                    </label>\r\n                                    <div>\r\n                                        <h1 className={classes.name}>\r\n                                            <TextField\r\n                                                label='Имя'\r\n                                                value={name}\r\n                                                className={isMobileApp?classes.inputM:classes.inputD}\r\n                                                onChange={(event)=>{setName(event.target.value)}}\r\n                                                inputProps={{\r\n                                                    'aria-label': 'description',\r\n                                                }}\r\n                                            />\r\n                                        </h1>\r\n                                            <div className={classes.price}>\r\n                                                <TextField\r\n                                                    label='Цена'\r\n                                                    value={price}\r\n                                                    className={isMobileApp?classes.inputM:classes.inputD}\r\n                                                    onChange={(event)=>{setPrice(checkInt(event.target.value))}}\r\n                                                    inputProps={{\r\n                                                        'aria-label': 'description',\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            <div className={classes.price}>\r\n                                                <TextField\r\n                                                    label='Скидка'\r\n                                                    value={stock}\r\n                                                    className={isMobileApp?classes.inputM:classes.inputD}\r\n                                                    onChange={(event)=>{setStock(checkInt(event.target.value))}}\r\n                                                    inputProps={{\r\n                                                        'aria-label': 'description',\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                        {profile.role==='admin'?\r\n                                            <FormControl className={isMobileApp?classes.inputM:classes.inputD}>\r\n                                                <InputLabel>Организация</InputLabel>\r\n                                                <Select value={organization._id}onChange={handleOrganization}>\r\n                                                    {data.organizations.map((element)=>\r\n                                                        <MenuItem key={element._id} value={element._id} ola={element.name}>{element.name}</MenuItem>\r\n                                                    )}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            :\r\n                                            <Input\r\n                                                value={organization.name}\r\n                                                className={isMobileApp?classes.inputM:classes.inputD}\r\n                                                inputProps={{\r\n                                                    'aria-label': 'description',\r\n                                                    readOnly: true,\r\n                                                }}\r\n                                            />\r\n                                        }\r\n                                        <br/>\r\n                                        <Button size='small' color='primary' onClick={()=>{\r\n                                            setMiniDialog('Дни поставки', <DeliveryDays deliveryDays={deliveryDays} setDeliveryDays={setDeliveryDays} edit={profile.role==='admin'||(['менеджер', 'организация'].includes(profile.role)&&data.item.organization._id===employment.organization._id)}/>)\r\n                                            showMiniDialog(true)\r\n                                        }}>\r\n                                            Дни поставки для торговых точек\r\n                                        </Button>\r\n                                        <br/>\r\n                                        <br/>\r\n                                        <FormControl className={isMobileApp?classes.inputM:classes.inputD}>\r\n                                            <InputLabel>Подкатегория</InputLabel>\r\n                                            <Select value={subCategory._id}onChange={handleSubCategory}>\r\n                                                {data.subCategorys.map((element)=>\r\n                                                    <MenuItem key={element._id} value={element._id} ola={element.name}>{element.name}</MenuItem>\r\n                                                )}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                        <br/>\r\n                                        {\r\n                                            profile.role==='admin'?\r\n                                                <>\r\n                                                <div className={classes.row}>\r\n                                                    <FormControlLabel\r\n                                                        control={\r\n                                                            <Switch\r\n                                                                checked={hit}\r\n                                                                onChange={()=>{setHit(!hit)}}\r\n                                                                color=\"primary\"\r\n                                                                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                                            />\r\n                                                        }\r\n                                                        label='Популярное'\r\n                                                    />\r\n                                                    <FormControlLabel\r\n                                                        control={\r\n                                                            <Switch\r\n                                                                checked={latest}\r\n                                                                onChange={()=>{setLatest(!latest)}}\r\n                                                                color=\"primary\"\r\n                                                                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                                                            />\r\n                                                        }\r\n                                                        label='Новинка'\r\n                                                    />\r\n                                                </div>\r\n                                                <br/>\r\n                                                </>:null\r\n                                        }\r\n                                        <TextField\r\n                                            multiline={true}\r\n                                            label='Информация'\r\n                                            value={info}\r\n                                            className={isMobileApp?classes.inputM:classes.inputD}\r\n                                            onChange={(event)=>{setInfo(event.target.value)}}\r\n                                            inputProps={{\r\n                                                'aria-label': 'description',\r\n                                            }}\r\n                                        />\r\n                                        <br/>\r\n                                        <div className={classes.row}>\r\n                                            {\r\n                                                router.query.id==='new'?\r\n                                                    <Button onClick={async()=>{\r\n                                                        if (name.length>0&&price>0&&subCategory._id!=undefined&&organization._id!=undefined) {\r\n                                                            const action = async() => {\r\n                                                                await addItem({\r\n                                                                    name: name,\r\n                                                                    stock: stock,\r\n                                                                    image: image,\r\n                                                                    info: info,\r\n                                                                    price: price,\r\n                                                                    subCategory: subCategory._id,\r\n                                                                    hit: hit,\r\n                                                                    latest: latest,\r\n                                                                    organization: organization._id,\r\n                                                                    deliveryDays: deliveryDays,\r\n                                                                }, subCategory._id)\r\n                                                                Router.push(`/items/${subCategory._id}`)\r\n                                                            }\r\n                                                            setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                            showMiniDialog(true)\r\n                                                        } else {\r\n                                                            showSnackBar('Заполните все поля')\r\n                                                        }\r\n                                                    }} size='small' color='primary'>\r\n                                                        Добавить\r\n                                                    </Button>\r\n                                                    :\r\n                                                    <>\r\n                                                    <Button onClick={async()=>{\r\n                                                        let editElement = {_id: data.item._id}\r\n                                                        if(stock>0&&stock!==data.item.stock)editElement.stock = stock\r\n                                                        if(name.length>0&&name!==data.item.name)editElement.name = name\r\n                                                        if(image!==undefined)editElement.image = image\r\n                                                        if(info.length>0&&info!==data.item.info)editElement.info = info\r\n                                                        if(price>0&&price!==data.item.price)editElement.price = price\r\n                                                        if(hit!==data.item.hit)editElement.hit = hit\r\n                                                        if(latest!==data.item.latest)editElement.latest = latest\r\n                                                        if(organization._id!==data.item.organization._id)editElement.organization = organization._id\r\n                                                        if(subCategory._id!==data.item.subCategory._id)editElement.subCategory = subCategory._id\r\n                                                        if(deliveryDays)editElement.deliveryDays = deliveryDays\r\n                                                        const action = async() => {\r\n                                                            await setItem(editElement, subCategory._id)\r\n                                                            //Router.push(`/items/${subCategory._id}`)\r\n                                                        }\r\n                                                        setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                        showMiniDialog(true)\r\n                                                    }} size='small' color='primary'>\r\n                                                        Сохранить\r\n                                                    </Button>\r\n                                                    <Button onClick={async()=>{\r\n                                                        const action = async() => {\r\n                                                            await onoffItem([data.item._id])\r\n                                                            setStatus(status==='active'?'deactive':'active')\r\n                                                        }\r\n                                                        setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                        showMiniDialog(true)\r\n                                                    }} size='small' color='primary'>\r\n                                                        {status==='active'?'Отключить':'Включить'}\r\n                                                    </Button>\r\n                                                    {\r\n                                                        profile.role==='admin'?\r\n                                                            <Button onClick={async()=>{\r\n                                                                const action = async() => {\r\n                                                                    await deleteItem([data.item._id], subCategory._id)\r\n                                                                    Router.push(`/items/${subCategory._id}`)\r\n                                                                }\r\n                                                                setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                                showMiniDialog(true)\r\n                                                            }} size='small' color='primary'>\r\n                                                                Удалить\r\n                                                            </Button>\r\n                                                            :\r\n                                                            null\r\n                                                    }\r\n                                                    </>\r\n                                            }\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    </>\r\n                                    :\r\n                                    'Ничего не найдено'\r\n\r\n                                :\r\n                                data.item===null||router.query.id==='new'?\r\n                                    'Ничего не найдено'\r\n                                    :\r\n                                    <>\r\n                                    <div className={classes.divImage}>\r\n                                        <img\r\n                                            className={isMobileApp?classes.mediaM:classes.mediaD}\r\n                                            src={data.item.image}\r\n                                            alt={data.item.info}\r\n                                        />\r\n                                        {\r\n                                            profile.role==='client'||!authenticated?\r\n                                                <Star className={classes.buttonToggle} onClick={async ()=>{\r\n                                                    let index\r\n                                                    if(profile.role==='client') {\r\n                                                        await favoriteItem([data.item._id])\r\n                                                        index = favorite.indexOf(profile._id)\r\n                                                        if (index === -1) {\r\n                                                            favorite.push(profile._id)\r\n                                                            setFavorite([...favorite])\r\n                                                        }\r\n                                                    }\r\n                                                    else if(!authenticated) {\r\n                                                        let favorites = JSON.parse(localStorage.favorites);\r\n                                                        index = -1\r\n                                                        for(let i=0; i<favorites.length; i++){\r\n                                                            if(favorites[i]._id == data.item._id)\r\n                                                                index = i\r\n                                                        }\r\n                                                        if(index===-1){\r\n                                                            favorites.push(data.item)\r\n                                                            setFavorite(true)\r\n                                                            localStorage.favorites = JSON.stringify(favorites)\r\n                                                        }\r\n                                                    }\r\n\r\n                                                    if (index !== -1) {\r\n                                                        const action = async() => {\r\n                                                            if(profile.role==='client') {\r\n                                                                favorite.splice(index, 1)\r\n                                                                setFavorite([...favorite])\r\n                                                            }\r\n                                                            else if(!authenticated) {\r\n                                                                let favorites = JSON.parse(localStorage.favorites);\r\n                                                                favorites.splice(index, 1)\r\n                                                                setFavorite(false)\r\n                                                                localStorage.favorites = JSON.stringify(favorites)\r\n                                                            }\r\n                                                        }\r\n                                                        setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                        showMiniDialog(true)\r\n                                                    }\r\n                                                }} style={{color: (!authenticated&&favorite===true)||(profile.role=='client'&&favorite.includes(profile._id))?'#ffb300':'#e1e1e1'}}  />\r\n                                                :\r\n                                                null\r\n                                        }\r\n                                    </div>\r\n                                    <div>\r\n                                        {\r\n                                            isMobileApp?\r\n                                                <br/>\r\n                                                :\r\n                                                null\r\n                                        }\r\n                                        <h1 className={classes.name}>\r\n                                            {data.item.name}\r\n                                        </h1>\r\n                                        <div className={classes.share}>\r\n                                            {data.item.organization.name}\r\n                                        </div>\r\n                                        <div className={classes.deliveryDays} onClick={()=>{\r\n                                            setMiniDialog('Дни поставки', <DeliveryDays deliveryDays={deliveryDays} setDeliveryDays={setDeliveryDays} edit={profile.role==='admin'||(['менеджер', 'организация'].includes(profile.role)&&data.item.organization._id===employment.organization._id)}/>)\r\n                                            showMiniDialog(true)\r\n                                        }}>\r\n                                            Дни поставки для торговых точек\r\n                                        </div>\r\n                                        <br/>\r\n                                        <div className={classes.row}>\r\n                                            {\r\n                                                data.item.stock===0||data.item.stock===undefined?\r\n                                                    <div className={classes.price}>\r\n                                                        {data.item.price}&nbsp;сом\r\n                                                    </div>\r\n                                                    :\r\n                                                    <>\r\n                                                    <div className={classes.stockPrice}>\r\n                                                        {data.item.stock}&nbsp;сом\r\n                                                    </div>\r\n                                                    <div className={classes.crossedPrice}>\r\n                                                        {data.item.price}&nbsp;сом\r\n                                                    </div>\r\n                                                    </>\r\n                                            }\r\n                                        </div>\r\n                                        <br/>\r\n                                        {\r\n                                            ['агент', 'client'].includes(profile.role)||!authenticated?\r\n                                                <>\r\n                                                <div className={isMobileApp?classes.column:classes.rowCenter}>\r\n                                                    <div className={classes.counter} style={isMobileApp?{marginBottom: 20}:{marginRight: 20}}>\r\n                                                        <div className={classes.counterbtn} onClick={decrement}>–</div>\r\n                                                        <input type='text' className={classes.counternmbr} value={count} onChange={(event)=>{\r\n                                                            setCount(isNaN(event.target.value)||event.target.value.length===0?0:parseInt(event.target.value))\r\n                                                        }}/>\r\n                                                        <div className={classes.counterbtn} onClick={increment}>+</div>\r\n                                                    </div>\r\n                                                    <Button\r\n                                                        variant='contained'\r\n                                                        color='primary'\r\n                                                        className={classes.button}\r\n                                                        onClick={()=>{\r\n                                                            if(['агент', 'client'].includes(profile.role))\r\n                                                                addBasket({item: data.item._id, count: count>0?count:1})\r\n                                                            else if(!authenticated) {\r\n                                                                let basket = JSON.parse(localStorage.basket);\r\n                                                                let index = -1\r\n                                                                for(let i=0; i<basket.length; i++){\r\n                                                                    if(basket[i].item._id == data.item._id)\r\n                                                                        index = i\r\n                                                                }\r\n                                                                if(index===-1)\r\n                                                                    basket.push({item: data.item, count: count})\r\n                                                                localStorage.basket = JSON.stringify(basket)\r\n                                                            }\r\n                                                            showSnackBar('Товар добавлен в корзину')\r\n                                                            getCountBasket()\r\n                                                        }}\r\n                                                    >\r\n                                                        В КОРЗИНУ\r\n                                                    </Button>\r\n                                                </div>\r\n                                                <br/>\r\n                                                <div className={classes.share}>\r\n                                                    Поделиться:\r\n                                                </div>\r\n                                                <div className={classes.rowCenter}>\r\n                                                    <FacebookShareButton\r\n                                                        url={process.browser?window.location.href.toString():''}\r\n                                                    >\r\n                                                        <FacebookIcon\r\n                                                            size={32}\r\n                                                            round />\r\n                                                    </FacebookShareButton>\r\n                                                    &nbsp;\r\n                                                    &nbsp;\r\n                                                    <VKShareButton url={process.browser?window.location.href:''}>\r\n                                                        <VKIcon\r\n                                                            size={32}\r\n                                                            round />\r\n                                                    </VKShareButton>\r\n                                                    &nbsp;\r\n                                                    &nbsp;\r\n                                                    <OKShareButton url={process.browser?window.location.href:''}>\r\n                                                        <OKIcon\r\n                                                            size={32}\r\n                                                            round />\r\n                                                    </OKShareButton>\r\n                                                    &nbsp;\r\n                                                    &nbsp;\r\n                                                    <WhatsappShareButton url={process.browser?window.location.href:''}>\r\n                                                        <WhatsappIcon\r\n                                                            size={32}\r\n                                                            round />\r\n                                                    </WhatsappShareButton>\r\n                                                    &nbsp;\r\n                                                    &nbsp;\r\n                                                    <TelegramShareButton url={process.browser?window.location.href:''}>\r\n                                                        <TelegramIcon\r\n                                                            size={32}\r\n                                                            round />\r\n                                                    </TelegramShareButton>\r\n                                                </div>\r\n                                                </>\r\n                                                :\r\n                                                null\r\n\r\n                                        }\r\n                                    </div>\r\n                                    </>\r\n                        }\r\n\r\n\r\n\r\n\r\n                    </CardContent>\r\n            </Card>\r\n            <input\r\n                accept='image/*'\r\n                style={{ display: 'none' }}\r\n                id='contained-button-file'\r\n                type='file'\r\n                onChange={handleChangeImage}\r\n            />\r\n        </App>\r\n    )\r\n})\r\n\r\nItem.getInitialProps = async function(ctx) {\r\n    return {\r\n        data: {\r\n            ...ctx.query.id!=='new'?await getItem({_id: ctx.query.id}):{\r\n                    item:{\r\n                        image: '/static/add.png',\r\n                        stock: 0,\r\n                        name: '',\r\n                        info: '',\r\n                        price: 0,\r\n                        subCategory: {_id: ''},\r\n                        organization: {_id: ''},\r\n                        hit: false,\r\n                        latest: false,\r\n                        deliveryDays: ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс']\r\n                    }\r\n                },\r\n            ...await getOrganizations({search: '', sort: 'name', filter: ''}),\r\n            ...await getSubCategorys({category: 'all', search: '', sort: 'name', filter: ''})\r\n        }\r\n    };\r\n};\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Item);"]},"metadata":{},"sourceType":"module"}