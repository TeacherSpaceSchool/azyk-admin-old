{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport dialogContentStyle from '../../src/styleMUI/dialogContent';\nconst DeliveryDays = React.memo(props => {\n  const {\n    classes,\n    deliveryDays,\n    setDeliveryDays,\n    edit\n  } = props;\n  const {\n    isMobileApp\n  } = props.app;\n  const {\n    showMiniDialog\n  } = props.mini_dialogActions;\n  let {\n    0: deliveryDaysEdit,\n    1: setDeliveryDaysEdit\n  } = useState(deliveryDays);\n\n  let handleDeliveryDaysEdit = day => {\n    if (edit) {\n      let indexarray = deliveryDaysEdit.indexOf(day);\n      if (indexarray === -1) deliveryDaysEdit.push(day);else deliveryDaysEdit.splice(indexarray, 1);\n      setDeliveryDaysEdit([...deliveryDaysEdit]);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: classes.main\n  }, __jsx(\"div\", {\n    className: classes.mainLine\n  }, __jsx(Chip, {\n    label: \"\\u041F\\u043D\",\n    className: classes.chip,\n    color: deliveryDaysEdit.includes('Пн') ? 'primary' : 'inherit',\n    onClick: () => {\n      handleDeliveryDaysEdit('Пн');\n    }\n  }), __jsx(Chip, {\n    label: \"\\u0412\\u0442\",\n    className: classes.chip,\n    color: deliveryDaysEdit.includes('Вт') ? 'primary' : 'inherit',\n    onClick: () => {\n      handleDeliveryDaysEdit('Вт');\n    }\n  }), __jsx(Chip, {\n    label: \"\\u0421\\u0440\",\n    className: classes.chip,\n    color: deliveryDaysEdit.includes('Ср') ? 'primary' : 'inherit',\n    onClick: () => {\n      handleDeliveryDaysEdit('Ср');\n    }\n  }), __jsx(Chip, {\n    label: \"\\u0427\\u0442\",\n    className: classes.chip,\n    color: deliveryDaysEdit.includes('Чт') ? 'primary' : 'inherit',\n    onClick: () => {\n      handleDeliveryDaysEdit('Чт');\n    }\n  }), __jsx(Chip, {\n    label: \"\\u041F\\u0442\",\n    className: classes.chip,\n    color: deliveryDaysEdit.includes('Пт') ? 'primary' : 'inherit',\n    onClick: () => {\n      handleDeliveryDaysEdit('Пт');\n    }\n  }), __jsx(Chip, {\n    label: \"\\u0421\\u0431\",\n    className: classes.chip,\n    color: deliveryDaysEdit.includes('Сб') ? 'primary' : 'inherit',\n    onClick: () => {\n      handleDeliveryDaysEdit('Сб');\n    }\n  }), __jsx(Chip, {\n    label: \"\\u0412\\u0441\",\n    className: classes.chip,\n    color: deliveryDaysEdit.includes('Вс') ? 'primary' : 'inherit',\n    onClick: () => {\n      handleDeliveryDaysEdit('Вс');\n    }\n  })), __jsx(\"br\", null), __jsx(\"div\", null, edit ? __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: async () => {\n      await setDeliveryDays(deliveryDaysEdit);\n      showMiniDialog(false);\n    },\n    className: classes.button\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\") : null, __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => {\n      showMiniDialog(false);\n    },\n    className: classes.button\n  }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\")));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    mini_dialog: state.mini_dialog,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(DeliveryDays));","map":null,"metadata":{},"sourceType":"module"}