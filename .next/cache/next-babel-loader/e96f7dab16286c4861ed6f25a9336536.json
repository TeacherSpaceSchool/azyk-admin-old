{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField';\nimport cardOrganizationStyle from '../../src/styleMUI/bonus/cardBonus';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport Button from '@material-ui/core/Button';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport { setBonus } from '../../src/gql/bonus';\nimport Confirmation from '../../components/dialog/Confirmation';\nimport { checkInt } from '../../src/lib';\nconst CardBonus = React.memo(props => {\n  const classes = cardOrganizationStyle();\n  const {\n    element,\n    setList\n  } = props;\n  const {\n    isMobileApp\n  } = props.app;\n  const {\n    profile\n  } = props.user;\n  const {\n    setMiniDialog,\n    showMiniDialog\n  } = props.mini_dialogActions;\n  let {\n    0: target,\n    1: setTarget\n  } = useState(element ? element.target : 0);\n  let {\n    0: bonus1,\n    1: setBonus1\n  } = useState(element ? element.bonus : 0);\n  return __jsx(Card, {\n    className: isMobileApp ? classes.cardM : classes.cardD\n  }, __jsx(CardActionArea, null, __jsx(CardContent, {\n    className: classes.line\n  }, __jsx(Link, {\n    href: \"/organization/[id]\",\n    as: `/organization/${element.organization._id}`\n  }, __jsx(\"img\", {\n    className: classes.media,\n    src: element.organization.image,\n    alt: element.organization.name\n  })), __jsx(\"div\", null, __jsx(\"h3\", {\n    className: isMobileApp ? classes.inputM : classes.inputD\n  }, element.organization.name), __jsx(\"br\", null), ['организация', 'менеджер', 'admin'].includes(profile.role) ? __jsx(React.Fragment, null, __jsx(TextField, {\n    style: {\n      width: '100%'\n    },\n    label: \"\\u0426\\u0435\\u043B\\u044C\",\n    value: target,\n    className: classes.input,\n    onChange: event => {\n      setTarget(checkInt(event.target.value));\n    },\n    inputProps: {\n      'aria-label': 'description'\n    }\n  }), __jsx(\"br\", null), __jsx(TextField, {\n    style: {\n      width: '100%'\n    },\n    label: \"\\u0411\\u043E\\u043D\\u0443\\u0441\",\n    value: bonus1,\n    className: classes.input,\n    onChange: event => {\n      setBonus1(checkInt(event.target.value));\n    },\n    inputProps: {\n      'aria-label': 'description'\n    }\n  }), __jsx(\"br\", null)) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"\\u0426\\u0435\\u043B\\u044C:\\xA0\"), __jsx(\"div\", {\n    className: classes.value\n  }, element.target, \"\\xA0\\u0441\\u043E\\u043C\")), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"\\u0411\\u043E\\u043D\\u0443\\u0441:\\xA0\"), __jsx(\"div\", {\n    className: classes.value\n  }, element.bonus, \"\\xA0\\u0441\\u043E\\u043C\")))))), ['организация', 'менеджер', 'admin'].includes(profile.role) ? __jsx(CardActions, null, __jsx(Button, {\n    onClick: async () => {\n      const action = async () => {\n        const list = (await setBonus({\n          _id: element._id,\n          target: target,\n          bonus: bonus1\n        })).bonuses;\n        setList(list);\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\"\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\")) : null);\n});\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardBonus);","map":null,"metadata":{},"sourceType":"module"}