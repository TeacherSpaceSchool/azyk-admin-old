{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\n\n/* eslint-disable no-extra-boolean-cast */\nimport { urlGQL } from '../redux/constants/other';\nimport { ApolloClient } from 'apollo-client';\nimport fetch from 'node-fetch';\nimport { getJWT } from './lib';\nimport { setContext } from 'apollo-link-context';\nimport { ApolloLink } from 'apollo-link';\nimport { createUploadLink } from 'apollo-upload-client';\nexport var getClientGqlSsr = function getClientGqlSsr(req) {\n  var uploadLink = createUploadLink({\n    uri: urlGQL,\n    fetch: fetch,\n    credentials: 'include'\n  });\n  var authLink = setContext(function (_, _ref) {\n    var headers = _ref.headers;\n    return {\n      headers: _objectSpread({}, headers, {\n        authorization: getJWT(req.headers.cookie) ? \"Bearer \".concat(getJWT(req.headers.cookie)) : ''\n      })\n    };\n  });\n  var link = ApolloLink.from([authLink, uploadLink]);\n  return new ApolloClient({\n    ssrMode: true,\n    link: link\n  });\n};","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\src\\getClientGQL.js"],"names":["urlGQL","ApolloClient","fetch","getJWT","setContext","ApolloLink","createUploadLink","getClientGqlSsr","req","uploadLink","uri","credentials","authLink","_","headers","authorization","cookie","link","from","ssrMode"],"mappings":";;AAAA;AACA,SAASA,MAAT,QAAuB,0BAAvB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,UAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAS;AAChC,MAAMC,UAAU,GAAGH,gBAAgB,CAAC;AAChCI,IAAAA,GAAG,EAAEV,MAD2B;AAEhCE,IAAAA,KAAK,EAAEA,KAFyB;AAGhCS,IAAAA,WAAW,EAAE;AAHmB,GAAD,CAAnC;AAKA,MAAMC,QAAQ,GAAGR,UAAU,CAAC,UAACS,CAAD,QAAoB;AAAA,QAAdC,OAAc,QAAdA,OAAc;AAC5C,WAAO;AACHA,MAAAA,OAAO,oBACAA,OADA;AAEHC,QAAAA,aAAa,EAAEZ,MAAM,CAACK,GAAG,CAACM,OAAJ,CAAYE,MAAb,CAAN,oBAAuCb,MAAM,CAACK,GAAG,CAACM,OAAJ,CAAYE,MAAb,CAA7C,IAAsE;AAFlF;AADJ,KAAP;AAMH,GAP0B,CAA3B;AAQA,MAAMC,IAAI,GAAGZ,UAAU,CAACa,IAAX,CAAgB,CACzBN,QADyB,EAEzBH,UAFyB,CAAhB,CAAb;AAIJ,SAAO,IAAIR,YAAJ,CAAiB;AAChBkB,IAAAA,OAAO,EAAE,IADO;AAEhBF,IAAAA,IAAI,EAAEA;AAFU,GAAjB,CAAP;AAKC,CAvBE","sourcesContent":["/* eslint-disable no-extra-boolean-cast */\r\nimport { urlGQL } from '../redux/constants/other';\r\nimport { ApolloClient } from 'apollo-client';\r\nimport fetch from 'node-fetch';\r\nimport { getJWT } from './lib'\r\nimport { setContext } from 'apollo-link-context';\r\nimport { ApolloLink  } from 'apollo-link';\r\nimport { createUploadLink } from 'apollo-upload-client'\r\n\r\nexport const getClientGqlSsr = (req) => {\r\n        const uploadLink = createUploadLink({\r\n            uri: urlGQL,\r\n            fetch: fetch,\r\n            credentials: 'include'\r\n        });\r\n        const authLink = setContext((_, { headers }) => {\r\n            return {\r\n                headers: {\r\n                    ...headers,\r\n                    authorization: getJWT(req.headers.cookie) ? `Bearer ${getJWT(req.headers.cookie)}` : '',\r\n                }\r\n            }\r\n        });\r\n        const link = ApolloLink.from([\r\n            authLink,\r\n            uploadLink\r\n        ]);\r\n    return new ApolloClient({\r\n            ssrMode: true,\r\n            link: link,\r\n\r\n        })\r\n    }"]},"metadata":{},"sourceType":"module"}