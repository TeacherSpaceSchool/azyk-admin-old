{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar regexpUA = /(Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile|iOS|Mobile)/;\nexport var checkMobile = function checkMobile(ua) {\n  return regexpUA.exec(ua) !== null;\n};\nvar regexpAuth = /(\\s)?jwt=(\\S)+(;)?/;\nexport var checkAuth = function checkAuth(auth) {\n  return regexpAuth.exec(auth) !== null;\n};\nexport var getJWT = function getJWT(auth) {\n  var res = regexpAuth.exec(auth);\n  return res !== null ? res[0].trim().replace('jwt=', '') : undefined;\n};\nexport var checkInt = function checkInt(_int) {\n  return isNaN(_parseInt(_int)) ? 0 : _parseInt(_int);\n};\nexport var pdDDMMYYYY = function pdDDMMYYYY(date) {\n  date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\n  date = _JSON$stringify(date).split('-');\n  date = date[2].split('T')[0] + '.' + date[1] + '.' + date[0].replace('\"', '');\n  return date;\n};\nexport var pdDDMMYY = function pdDDMMYY(date) {\n  date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\n  date = _JSON$stringify(date).split('-');\n  date = date[2].split('T')[0] + '.' + date[1] + '.' + date[0].replace('\"', '').substring(2, 4);\n  return date;\n};\nexport var pdDatePicker = function pdDatePicker(date) {\n  date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\n  date = _JSON$stringify(date).split('-');\n  date = date[0].replace('\"', '') + '-' + date[1] + '-' + date[2].split('T')[0];\n  return date;\n};\nexport var pdDDMMYYHHMM = function pdDDMMYYHHMM(date) {\n  date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\n  date = _JSON$stringify(date).split('-');\n  date = date[2].split('T')[0] + '.' + date[1] + '.' + date[0].replace('\"', '').substring(2, 4) + ' ' + date[2].split('T')[1].split(':')[0] + ':' + date[2].split('T')[1].split(':')[1];\n  return date;\n};","map":null,"metadata":{},"sourceType":"module"}