{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nconst MyDialog = React.memo(props => {\n  const {\n    title,\n    child,\n    show\n  } = props.mini_dialog;\n  const {\n    showMiniDialog\n  } = props.mini_dialogActions;\n  return __jsx(Dialog, {\n    open: show,\n    onClose: () => {\n      showMiniDialog(false);\n    },\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\"\n  }, __jsx(DialogTitle, {\n    onClose: () => {\n      showMiniDialog(false);\n    }\n  }, title), __jsx(DialogContent, null, child));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    mini_dialog: state.mini_dialog\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyDialog);","map":null,"metadata":{},"sourceType":"module"}