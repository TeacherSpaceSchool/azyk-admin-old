{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport cardOrganizationStyle from '../../src/styleMUI/client/cardClient';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport Button from '@material-ui/core/Button';\nimport dynamic from 'next/dynamic';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport { onoffClient } from '../../src/gql/client';\nimport CardActions from '@material-ui/core/CardActions';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nconst Confirmation = dynamic(() => import('../../components/dialog/Confirmation'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/dialog/Confirmation')],\n    modules: ['../../components/dialog/Confirmation']\n  }\n});\nconst CardOrganization = React.memo(props => {\n  const classes = cardOrganizationStyle();\n  const {\n    element\n  } = props;\n  const {\n    isMobileApp\n  } = props.app;\n  const {\n    profile\n  } = props.user;\n  const {\n    setMiniDialog,\n    showMiniDialog\n  } = props.mini_dialogActions;\n  let {\n    0: status,\n    1: setStatus\n  } = useState(element.user.status);\n  return __jsx(Card, {\n    className: isMobileApp ? classes.cardM : classes.cardD\n  }, __jsx(CardActionArea, null, __jsx(Link, {\n    href: \"/client/[id]\",\n    as: `/client/${element.user._id}`\n  }, __jsx(CardContent, {\n    className: classes.line\n  }, __jsx(\"label\", {\n    htmlFor: \"contained-button-file\"\n  }, __jsx(LazyLoadImage, {\n    effect: \"blur\",\n    className: classes.media,\n    src: element.image,\n    alt: element.name\n  })), __jsx(\"div\", null, __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"\\u0418\\u043C\\u044F:\\xA0\"), __jsx(\"div\", {\n    className: classes.value\n  }, element.name)), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D:\\xA0\"), __jsx(\"div\", {\n    className: classes.value\n  }, element.user.phone)), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"\\u0410\\u0434\\u0440\\u0435\\u0441:\\xA0\"), __jsx(\"div\", null, element.address.map((addres, idx) => __jsx(\"div\", {\n    key: idx,\n    className: classes.value\n  }, addres)))))))), __jsx(CardActions, null, profile.role === 'admin' ? __jsx(Button, {\n    onClick: async () => {\n      const action = async () => {\n        await onoffClient([element._id]);\n        setStatus(status === 'active' ? 'deactive' : 'active');\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\"\n  }, status === 'active' ? 'Отключить' : 'Включить') : null));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardOrganization);","map":null,"metadata":{},"sourceType":"module"}