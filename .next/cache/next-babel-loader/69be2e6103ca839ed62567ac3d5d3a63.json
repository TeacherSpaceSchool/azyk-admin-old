{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState, useEffect } from 'react';\nimport App from '../layouts/App';\nimport { connect } from 'react-redux';\nimport pageListStyle from '../src/styleMUI/basket/basket';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../redux/actions/mini_dialog';\nimport * as snackbarActions from '../redux/actions/snackbar';\nimport { getBasket, setBasket, deleteBasket } from '../src/gql/basket';\nimport { getClient } from '../src/gql/client';\nimport Router from 'next/router';\nimport BuyBasket from '../components/dialog/BuyBasket';\nimport Sign from '../components/dialog/Sign';\nimport Confirmation from '../components/dialog/Confirmation';\nimport { urlMain } from '../redux/constants/other';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { getBonusesClient } from '../src/gql/bonusclient';\nconst Basket = React.memo(props => {\n  const {\n    authenticated\n  } = props.user;\n  const classes = pageListStyle();\n  const {\n    setMiniDialog,\n    showMiniDialog\n  } = props.mini_dialogActions;\n  const {\n    showSnackBar\n  } = props.snackbarActions;\n  const {\n    data\n  } = props;\n  let {\n    0: list,\n    1: setList\n  } = useState(data.baskets);\n  let {\n    0: organization,\n    1: setOrganization\n  } = useState({});\n  let {\n    0: bonus,\n    1: setBonus\n  } = useState({});\n\n  let handleOrganization = event => {\n    setOrganization(organizations[organizations.findIndex(element => element._id === event.target.value)]);\n  };\n\n  let {\n    0: organizations,\n    1: setOrganizations\n  } = useState([]);\n  let {\n    0: allPrice,\n    1: setAllPrice\n  } = useState(0);\n  const {\n    isMobileApp\n  } = props.app;\n\n  let increment = idx => {\n    list[idx].count += 1;\n    setBasketChange(idx, list[idx].count);\n    setList([...list]);\n  };\n\n  let decrement = idx => {\n    if (list[idx].count > 1) {\n      list[idx].count -= 1;\n      setBasketChange(idx, list[idx].count);\n      setList([...list]);\n    }\n  };\n\n  let setBasketChange = (idx, count) => {\n    if (authenticated) setBasket({\n      _id: list[idx]._id,\n      count: count\n    });else {\n      let list = JSON.parse(localStorage.basket);\n      list[idx].count = count;\n      localStorage.basket = _JSON$stringify(list);\n    }\n  };\n\n  let removeBasketChange = async idx => {\n    const action = async () => {\n      if (authenticated) {\n        setList((await deleteBasket([list[idx]._id])).baskets);\n      } else {\n        let list = JSON.parse(localStorage.basket);\n        list.splice(idx, 1);\n        localStorage.basket = _JSON$stringify(list);\n        setList(list);\n      }\n    };\n\n    setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n      action: action\n    }));\n    showMiniDialog(true);\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (!authenticated) {\n        if (localStorage.basket == undefined) {\n          localStorage.basket = _JSON$stringify([]);\n        }\n\n        setList(JSON.parse(localStorage.basket));\n      }\n    })();\n  }, []);\n  useEffect(() => {\n    (async () => {\n      organizations = [];\n\n      for (let i = 0; i < list.length; i++) {\n        if (organizations.findIndex(element => element._id === list[i].item.organization._id) === -1) {\n          organizations.push(list[i].item.organization);\n        }\n      }\n\n      setOrganizations([...organizations]);\n      if (organizations.length > 0) setOrganization(organizations[0]);\n    })();\n  }, [list]);\n  useEffect(() => {\n    calculateAllPrice();\n    bonus = {};\n\n    for (let i = 0; i < data.bonusesClient.length; i++) {\n      if (organization._id === data.bonusesClient[i].bonus.organization._id) {\n        bonus = data.bonusesClient[i];\n      }\n    }\n\n    setBonus(bonus);\n  }, [list, organization]);\n\n  let getList = async () => {\n    setList((await getBasket()).baskets);\n  };\n\n  let calculateAllPrice = async () => {\n    let allPrice = 0;\n\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].item.organization._id === organization._id) allPrice += (list[i].item.stock === 0 || list[i].item.stock === undefined ? list[i].item.price : list[i].item.stock) * list[i].count;\n    }\n\n    setAllPrice(allPrice);\n  }; //привести к геолокации\n\n\n  if (data.client && !_Array$isArray(data.client.address[0])) data.client.address.map(addres => [addres]);\n  return __jsx(App, {\n    getList: getList,\n    pageName: \"\\u041A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0430\"\n  }, __jsx(Head, null, __jsx(\"title\", null, \"\\u041A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0430\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"\\u0410\\u0437\\u044B\\u043A \\u2013 \\u044D\\u0442\\u043E \\u043E\\u043D\\u043B\\u0430\\u0439\\u043D \\u043F\\u043B\\u0430\\u0442\\u0444\\u043E\\u0440\\u043C\\u0430 \\u0434\\u043B\\u044F \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432 \\u043E\\u043F\\u0442\\u043E\\u043C, \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u043D\\u043D\\u0430\\u044F \\u0441\\u043F\\u0435\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E \\u0434\\u043B\\u044F \\u043C\\u0430\\u043B\\u043E\\u0433\\u043E \\u0438 \\u0441\\u0440\\u0435\\u0434\\u043D\\u0435\\u0433\\u043E \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\\u0430.  \\u041E\\u043D\\u0430 \\u043E\\u0431\\u044A\\u0435\\u0434\\u0438\\u043D\\u044F\\u0435\\u0442 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u0435\\u0439 \\u0438 \\u0442\\u043E\\u0440\\u0433\\u043E\\u0432\\u044B\\u0435 \\u0442\\u043E\\u0447\\u043A\\u0438 \\u043D\\u0430\\u043F\\u0440\\u044F\\u043C\\u0443\\u044E, \\u0441\\u043E\\u043A\\u0440\\u0430\\u0449\\u0430\\u044F \\u0440\\u0430\\u0441\\u0445\\u043E\\u0434\\u044B \\u0438 \\u043F\\u043E\\u0432\\u044B\\u0448\\u0430\\u044F \\u043F\\u0440\\u043E\\u0434\\u0430\\u0436\\u0438. \\u0410\\u0437\\u044B\\u043A \\u043F\\u0440\\u0435\\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043B\\u044F\\u0435\\u0442 \\u0441\\u0432\\u043E\\u0438\\u043C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\\u043C \\u043C\\u043E\\u0449\\u043D\\u044B\\u0435 \\u0442\\u0435\\u0445\\u043D\\u043E\\u043B\\u043E\\u0433\\u0438\\u0438 \\u0434\\u043B\\u044F \\u043C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\u0438 \\u0440\\u0430\\u0437\\u0432\\u0438\\u0442\\u0438\\u044F \\u0441\\u0432\\u043E\\u0435\\u0433\\u043E \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\\u0430.\"\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: \"\\u041A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0430\"\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: \"\\u0410\\u0437\\u044B\\u043A \\u2013 \\u044D\\u0442\\u043E \\u043E\\u043D\\u043B\\u0430\\u0439\\u043D \\u043F\\u043B\\u0430\\u0442\\u0444\\u043E\\u0440\\u043C\\u0430 \\u0434\\u043B\\u044F \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432 \\u043E\\u043F\\u0442\\u043E\\u043C, \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u043D\\u043D\\u0430\\u044F \\u0441\\u043F\\u0435\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E \\u0434\\u043B\\u044F \\u043C\\u0430\\u043B\\u043E\\u0433\\u043E \\u0438 \\u0441\\u0440\\u0435\\u0434\\u043D\\u0435\\u0433\\u043E \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\\u0430.  \\u041E\\u043D\\u0430 \\u043E\\u0431\\u044A\\u0435\\u0434\\u0438\\u043D\\u044F\\u0435\\u0442 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u0435\\u0439 \\u0438 \\u0442\\u043E\\u0440\\u0433\\u043E\\u0432\\u044B\\u0435 \\u0442\\u043E\\u0447\\u043A\\u0438 \\u043D\\u0430\\u043F\\u0440\\u044F\\u043C\\u0443\\u044E, \\u0441\\u043E\\u043A\\u0440\\u0430\\u0449\\u0430\\u044F \\u0440\\u0430\\u0441\\u0445\\u043E\\u0434\\u044B \\u0438 \\u043F\\u043E\\u0432\\u044B\\u0448\\u0430\\u044F \\u043F\\u0440\\u043E\\u0434\\u0430\\u0436\\u0438. \\u0410\\u0437\\u044B\\u043A \\u043F\\u0440\\u0435\\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043B\\u044F\\u0435\\u0442 \\u0441\\u0432\\u043E\\u0438\\u043C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\\u043C \\u043C\\u043E\\u0449\\u043D\\u044B\\u0435 \\u0442\\u0435\\u0445\\u043D\\u043E\\u043B\\u043E\\u0433\\u0438\\u0438 \\u0434\\u043B\\u044F \\u043C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\u0438 \\u0440\\u0430\\u0437\\u0432\\u0438\\u0442\\u0438\\u044F \\u0441\\u0432\\u043E\\u0435\\u0433\\u043E \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\\u0430.\"\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: \"website\"\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: `${urlMain}/static/512x512.png`\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `${urlMain}/basket`\n  }), __jsx(\"link\", {\n    rel: \"canonical\",\n    href: `${urlMain}/basket`\n  })), isMobileApp ? __jsx(\"div\", {\n    className: classes.column,\n    style: {\n      width: 'calc(100% - 16px)',\n      margin: 8\n    }\n  }, __jsx(Card, {\n    className: classes.page\n  }, __jsx(CardContent, {\n    className: classes.column,\n    style: isMobileApp ? {} : {\n      justifyContent: 'start',\n      alignItems: 'flex-start'\n    }\n  }, __jsx(FormControl, {\n    className: classes.input\n  }, __jsx(InputLabel, null, \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"), __jsx(Select, {\n    value: organization._id,\n    onChange: handleOrganization\n  }, organizations.map(element => __jsx(MenuItem, {\n    key: element._id,\n    value: element._id\n  }, element.name)))))), list.map((row, idx) => {\n    if (row.item.organization._id === organization._id) return __jsx(Card, {\n      className: classes.page,\n      key: idx\n    }, __jsx(CardContent, {\n      className: classes.column,\n      style: isMobileApp ? {} : {\n        justifyContent: 'start',\n        alignItems: 'flex-start'\n      }\n    }, __jsx(\"div\", {\n      className: classes.itemM\n    }, __jsx(\"div\", {\n      className: classes.divImage\n    }, __jsx(\"img\", {\n      className: classes.mediaM,\n      src: row.item.image\n    }), __jsx(IconButton, {\n      onClick: () => {\n        removeBasketChange(idx);\n      },\n      color: \"primary\",\n      className: classes.cancelM\n    }, __jsx(CancelIcon, {\n      style: {\n        height: 40,\n        width: 40\n      }\n    }))), __jsx(\"br\", null), __jsx(\"div\", {\n      className: classes.nameM\n    }, row.item.name), __jsx(\"br\", null), __jsx(\"div\", {\n      className: classes.counter,\n      style: isMobileApp ? {\n        marginBottom: 20\n      } : {\n        marginRight: 20\n      }\n    }, __jsx(\"div\", {\n      className: classes.counterbtn,\n      onClick: () => {\n        decrement(idx);\n      }\n    }, \"\\u2013\"), __jsx(\"input\", {\n      type: \"text\",\n      className: classes.counternmbr,\n      value: row.count,\n      onChange: event => {\n        list[idx].count = isNaN(event.target.value) || event.target.value.length === 0 ? 0 : _parseInt(event.target.value);\n        setBasketChange(idx, list[idx].count);\n        setList([...list]);\n      }\n    }), __jsx(\"div\", {\n      className: classes.counterbtn,\n      onClick: () => {\n        increment(idx);\n      }\n    }, \"+\")), __jsx(\"div\", null, __jsx(\"div\", {\n      className: classes.row\n    }, __jsx(\"div\", {\n      className: classes.nameField\n    }, \"\\u0426\\u0435\\u043D\\u0430\"), __jsx(\"div\", {\n      className: classes.value\n    }, `${row.item.stock === 0 || row.item.stock === undefined ? row.item.price : row.item.stock} сом`)), __jsx(\"div\", {\n      className: classes.row\n    }, __jsx(\"div\", {\n      className: classes.nameField\n    }, \"\\u0418\\u0442\\u043E\\u0433\\u043E\"), __jsx(\"div\", {\n      className: classes.value\n    }, `${(row.item.stock === 0 || row.item.stock === undefined ? row.item.price : row.item.stock) * row.count} сом`))))));\n  }), __jsx(\"div\", {\n    style: {\n      height: 70\n    }\n  })) : __jsx(React.Fragment, null, __jsx(Card, {\n    className: classes.page\n  }, __jsx(CardContent, {\n    className: classes.column,\n    style: isMobileApp ? {} : {\n      justifyContent: 'start',\n      alignItems: 'flex-start'\n    }\n  }, __jsx(Table, {\n    \"aria-label\": \"simple table\"\n  }, __jsx(TableHead, null, __jsx(TableRow, null, __jsx(TableCell, null, __jsx(FormControl, {\n    className: classes.input\n  }, __jsx(InputLabel, null, \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"), __jsx(Select, {\n    value: organization._id,\n    onChange: handleOrganization\n  }, organizations.map(element => __jsx(MenuItem, {\n    key: element._id,\n    value: element._id,\n    ola: element.name\n  }, element.name))))), __jsx(TableCell, {\n    align: \"left\"\n  }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"), __jsx(TableCell, {\n    align: \"left\"\n  }, \"\\u0426\\u0435\\u043D\\u0430\"), __jsx(TableCell, {\n    align: \"left\"\n  }, \"\\u0418\\u0442\\u043E\\u0433\\u043E\"), __jsx(TableCell, {\n    align: \"center\"\n  }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"))), __jsx(TableBody, null, list.map((row, idx) => {\n    if (row.item.organization._id === organization._id) return __jsx(TableRow, {\n      key: idx\n    }, __jsx(TableCell, {\n      component: \"th\",\n      scope: \"row\"\n    }, __jsx(\"div\", {\n      className: classes.row\n    }, __jsx(\"img\", {\n      className: classes.mediaD,\n      src: row.item.image\n    }), __jsx(\"div\", {\n      className: classes.nameD\n    }, row.item.name))), __jsx(TableCell, {\n      align: \"left\"\n    }, __jsx(\"div\", {\n      className: classes.counterD,\n      style: isMobileApp ? {\n        marginBottom: 20\n      } : {\n        marginRight: 20\n      }\n    }, __jsx(\"div\", {\n      className: classes.counterbtnD,\n      onClick: () => {\n        decrement(idx);\n      }\n    }, \"\\u2013\"), __jsx(\"input\", {\n      type: \"text\",\n      className: classes.counternmbrD,\n      value: row.count,\n      onChange: event => {\n        list[idx].count = isNaN(event.target.value) || event.target.value.length === 0 ? 0 : _parseInt(event.target.value);\n        setBasketChange(idx, list[idx].count);\n        setList([...list]);\n      }\n    }), __jsx(\"div\", {\n      className: classes.counterbtnD,\n      onClick: () => {\n        increment(idx);\n      }\n    }, \"+\"))), __jsx(TableCell, {\n      align: \"left\"\n    }, `${row.item.stock === 0 || row.item.stock === undefined ? row.item.price : row.item.stock * row.count} сом`), __jsx(TableCell, {\n      align: \"left\"\n    }, `${(row.item.stock === 0 || row.item.stock === undefined ? row.item.price : row.item.stock * row.count) * row.count} сом`), __jsx(TableCell, {\n      align: \"center\"\n    }, __jsx(IconButton, {\n      onClick: () => {\n        removeBasketChange(idx);\n      },\n      color: \"primary\",\n      className: classes.button,\n      \"aria-label\": \"add to shopping cart\"\n    }, __jsx(CancelIcon, null))));\n  }))))), __jsx(\"div\", {\n    style: {\n      height: 70\n    }\n  })), __jsx(\"div\", {\n    className: isMobileApp ? classes.bottomBasketM : classes.bottomBasketD\n  }, __jsx(\"div\", {\n    className: isMobileApp ? classes.allPriceM : classes.allPriceD\n  }, __jsx(\"div\", {\n    className: isMobileApp ? classes.value : classes.priceAllText\n  }, \"\\u041E\\u0431\\u0449\\u0430\\u044F \\u0441\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C\"), __jsx(\"div\", {\n    className: isMobileApp ? classes.nameM : classes.priceAll\n  }, `${allPrice} сом`)), __jsx(\"div\", {\n    className: isMobileApp ? classes.buyM : classes.buyD,\n    onClick: () => {\n      if (allPrice > 0) {\n        if (authenticated) setMiniDialog('Купить', __jsx(BuyBasket, {\n          bonus: bonus,\n          client: data.client,\n          allPrice: allPrice,\n          organization: organization\n        }));else setMiniDialog('Купить', __jsx(Sign, null));\n        showMiniDialog(true);\n      } else showSnackBar('Добавьте товар в корзину');\n    }\n  }, \"\\u041A\\u0423\\u041F\\u0418\\u0422\\u042C\")));\n});\n\nBasket.getInitialProps = async function (ctx) {\n  if ('client' !== ctx.store.getState().user.profile.role && ctx.store.getState().user.authenticated) if (ctx.res) {\n    ctx.res.writeHead(302, {\n      Location: '/'\n    });\n    ctx.res.end();\n  } else Router.push('/');\n  return {\n    data: _objectSpread({}, (await getBasket()), ctx.store.getState().user.profile._id ? await getClient({\n      _id: ctx.store.getState().user.profile._id\n    }) : [], (await getBonusesClient({\n      search: '',\n      sort: '-createdAt'\n    })))\n  };\n};\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Basket);","map":null,"metadata":{},"sourceType":"module"}