{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\components\\\\dialog\\\\Confirmation.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as appActions from '../../redux/actions/app';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport Done from '@material-ui/icons/Done';\nimport Clear from '@material-ui/icons/Clear';\nimport IconButton from '@material-ui/core/IconButton';\nimport dialogContentStyle from '../../src/styleMUI/dialogContent';\nvar Confirmation = React.memo(function (props) {\n  var showMiniDialog = props.mini_dialogActions.showMiniDialog;\n  var showSnackBar = props.snackbarActions.showSnackBar;\n  var showLoad = props.appActions.showLoad;\n  var classes = props.classes,\n      action = props.action;\n  return __jsx(\"div\", {\n    className: classes.line,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return showMiniDialog(false);\n\n            case 3:\n              _context.next = 5;\n              return showLoad(true);\n\n            case 5:\n              _context.next = 7;\n              return action();\n\n            case 7:\n              _context.next = 9;\n              return showLoad(false);\n\n            case 9:\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              showSnackBar('Ошибка');\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    })),\n    \"aria-label\": \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, __jsx(Done, {\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), __jsx(IconButton, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              showMiniDialog(false);\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })),\n    \"aria-label\": \"Cancel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Clear, {\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    mini_dialog: state.mini_dialog\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    appActions: bindActionCreators(appActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nConfirmation.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(Confirmation));","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\dialog\\Confirmation.js"],"names":["React","PropTypes","withStyles","connect","bindActionCreators","mini_dialogActions","appActions","snackbarActions","Done","Clear","IconButton","dialogContentStyle","Confirmation","memo","props","showMiniDialog","showSnackBar","showLoad","classes","action","line","button","mapStateToProps","state","mini_dialog","mapDispatchToProps","dispatch","propTypes","object","isRequired"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,kBAAZ,MAAoC,iCAApC;AACA,OAAO,KAAKC,UAAZ,MAA4B,yBAA5B;AACA,OAAO,KAAKC,eAAZ,MAAiC,8BAAjC;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AAEA,IAAMC,YAAY,GAAIZ,KAAK,CAACa,IAAN,CAClB,UAACC,KAAD,EAAU;AAAA,MACEC,cADF,GACqBD,KAAK,CAACT,kBAD3B,CACEU,cADF;AAAA,MAEEC,YAFF,GAEmBF,KAAK,CAACP,eAFzB,CAEES,YAFF;AAAA,MAGEC,QAHF,GAGeH,KAAK,CAACR,UAHrB,CAGEW,QAHF;AAAA,MAIEC,OAJF,GAIsBJ,KAJtB,CAIEI,OAJF;AAAA,MAIWC,MAJX,GAIsBL,KAJtB,CAIWK,MAJX;AAKN,SACI;AAAK,IAAA,SAAS,EAAED,OAAO,CAACE,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,OAAO;AAAA;AAAA;AAAA;AAAA,6BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEPL,cAAc,CAAC,KAAD,CAFP;;AAAA;AAAA;AAAA,qBAGPE,QAAQ,CAAC,IAAD,CAHD;;AAAA;AAAA;AAAA,qBAIPE,MAAM,EAJC;;AAAA;AAAA;AAAA,qBAKPF,QAAQ,CAAC,KAAD,CALD;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAObD,cAAAA,YAAY,CAAC,QAAD,CAAZ;;AAPa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF,EAAnB;AASG,kBAAW,QATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAEE,OAAO,CAACG,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ,EAaI,MAAC,UAAD;AAAY,IAAA,OAAO;AAAA;AAAA;AAAA;AAAA,6BAAE;AAAA;AAAA;AAAA;AAAA;AACjBN,cAAAA,cAAc,CAAC,KAAD,CAAd;;AADiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF,EAAnB;AAEG,kBAAW,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEG,OAAO,CAACG,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAbJ,CADJ;AAqBH,CA3BiB,CAAtB;;AA8BA,SAASC,eAAT,CAA0BC,KAA1B,EAAiC;AAC7B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC;AADhB,GAAP;AAGH;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHrB,IAAAA,kBAAkB,EAAED,kBAAkB,CAACC,kBAAD,EAAqBqB,QAArB,CADnC;AAEHpB,IAAAA,UAAU,EAAEF,kBAAkB,CAACE,UAAD,EAAaoB,QAAb,CAF3B;AAGHnB,IAAAA,eAAe,EAAEH,kBAAkB,CAACG,eAAD,EAAkBmB,QAAlB;AAHhC,GAAP;AAKH;;AAEDd,YAAY,CAACe,SAAb,GAAyB;AACrBT,EAAAA,OAAO,EAAEjB,SAAS,CAAC2B,MAAV,CAAiBC;AADL,CAAzB;AAIA,eAAe1B,OAAO,CAACmB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CvB,UAAU,CAACS,kBAAD,CAAV,CAA+BC,YAA/B,CAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as appActions from '../../redux/actions/app'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport Done from '@material-ui/icons/Done';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport dialogContentStyle from '../../src/styleMUI/dialogContent'\r\n\r\nconst Confirmation =  React.memo(\r\n    (props) =>{\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        const { showSnackBar } = props.snackbarActions;\r\n        const { showLoad } = props.appActions;\r\n        const { classes, action } = props;\r\n        return (\r\n            <div className={classes.line}>\r\n                <IconButton onClick={async()=>{\r\n                    try {\r\n                        await showMiniDialog(false)\r\n                        await showLoad(true)\r\n                        await action()\r\n                        await showLoad(false)\r\n                    }  catch (err) {\r\n                        showSnackBar('Ошибка')\r\n                    }\r\n                }} aria-label='Delete'>\r\n                    <Done className={classes.button} />\r\n                </IconButton>\r\n                <IconButton onClick={async()=>{\r\n                    showMiniDialog(false)\r\n                }} aria-label='Cancel'>\r\n                    <Clear className={classes.button}/>\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        appActions: bindActionCreators(appActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nConfirmation.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(Confirmation));"]},"metadata":{},"sourceType":"module"}