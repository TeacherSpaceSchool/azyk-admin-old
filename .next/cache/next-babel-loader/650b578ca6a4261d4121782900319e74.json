{"ast":null,"code":"import { gql } from 'apollo-boost';\nimport { SingletonApolloClient } from '../singleton/client';\nimport { SingletonStore } from '../singleton/store';\nexport const getBonuses = async ({\n  search: search,\n  sort: sort\n}) => {\n  try {\n    const client = new SingletonApolloClient().getClient();\n    let res = await client.query({\n      variables: {\n        search: search,\n        sort: sort\n      },\n      query: gql`\n                    query ($search: String!, $sort: String!) {\n                        bonuses(search: $search, sort: $sort) {\n                            _id\n                            createdAt\n                            target\n                            bonus\n                            organization\n                                {_id name image}\n                        }\n                        sortBonus {\n                            name\n                            field\n                        }\n                    }`\n    });\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const setBonus = async element => {\n  try {\n    const client = new SingletonApolloClient().getClient();\n    await client.mutate({\n      variables: element,\n      mutation: gql`\n                    mutation ($_id: ID!, $target: Int!, $bonus: Int!) {\n                        setBonus(_id: $_id, target: $target, bonus: $bonus) {\n                             data\n                        }\n                    }`\n    });\n    let list = await getBonuses(new SingletonStore().getStore().getState().app);\n    return list;\n  } catch (err) {\n    console.error(err);\n  }\n};","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\src\\gql\\bonus.js"],"names":["gql","SingletonApolloClient","SingletonStore","getBonuses","search","sort","client","getClient","res","query","variables","data","err","console","error","setBonus","element","mutate","mutation","list","getStore","getState","app"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,SAASC,qBAAT,QAAsC,qBAAtC;AACA,SAASC,cAAT,QAA+B,oBAA/B;AAEA,OAAO,MAAMC,UAAU,GAAG,OAAM;AAACC,EAAAA,MAAM,EAAEA,MAAT;AAAiBC,EAAAA,IAAI,EAAEA;AAAvB,CAAN,KAAqC;AAC3D,MAAG;AACC,UAAMC,MAAM,GAAG,IAAIL,qBAAJ,GAA4BM,SAA5B,EAAf;AACA,QAAIC,GAAG,GAAG,MAAMF,MAAM,CACjBG,KADW,CACL;AACHC,MAAAA,SAAS,EAAE;AAACN,QAAAA,MAAM,EAAEA,MAAT;AAAiBC,QAAAA,IAAI,EAAEA;AAAvB,OADR;AAEHI,MAAAA,KAAK,EAAET,GAAI;;;;;;;;;;;;;;;AAFR,KADK,CAAhB;AAmBA,WAAOQ,GAAG,CAACG,IAAX;AACH,GAtBD,CAsBE,OAAMC,GAAN,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH;AACJ,CA1BM;AA6BP,OAAO,MAAMG,QAAQ,GAAG,MAAMC,OAAN,IAAgB;AACpC,MAAG;AACC,UAAMV,MAAM,GAAG,IAAIL,qBAAJ,GAA4BM,SAA5B,EAAf;AACA,UAAMD,MAAM,CAACW,MAAP,CAAc;AAChBP,MAAAA,SAAS,EAAEM,OADK;AAEhBE,MAAAA,QAAQ,EAAGlB,GAAI;;;;;;AAFC,KAAd,CAAN;AAQA,QAAImB,IAAI,GAAG,MAAMhB,UAAU,CAAC,IAAID,cAAJ,GAAqBkB,QAArB,GAAgCC,QAAhC,GAA2CC,GAA5C,CAA3B;AACA,WAAOH,IAAP;AACH,GAZD,CAYE,OAAMP,GAAN,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH;AACJ,CAhBM","sourcesContent":["import { gql } from 'apollo-boost';\r\nimport { SingletonApolloClient } from '../singleton/client';\r\nimport { SingletonStore } from '../singleton/store';\r\n\r\nexport const getBonuses = async({search: search, sort: sort})=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        let res = await client\r\n            .query({\r\n                variables: {search: search, sort: sort},\r\n                query: gql`\r\n                    query ($search: String!, $sort: String!) {\r\n                        bonuses(search: $search, sort: $sort) {\r\n                            _id\r\n                            createdAt\r\n                            target\r\n                            bonus\r\n                            organization\r\n                                {_id name image}\r\n                        }\r\n                        sortBonus {\r\n                            name\r\n                            field\r\n                        }\r\n                    }`,\r\n            })\r\n        return res.data\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}\r\n\r\n\r\nexport const setBonus = async(element)=>{\r\n    try{\r\n        const client = new SingletonApolloClient().getClient()\r\n        await client.mutate({\r\n            variables: element,\r\n            mutation : gql`\r\n                    mutation ($_id: ID!, $target: Int!, $bonus: Int!) {\r\n                        setBonus(_id: $_id, target: $target, bonus: $bonus) {\r\n                             data\r\n                        }\r\n                    }`})\r\n        let list = await getBonuses(new SingletonStore().getStore().getState().app)\r\n        return list\r\n    } catch(err){\r\n        console.error(err)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}