{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField';\nimport cardOrganizationStyle from '../../src/styleMUI/bonus/cardBonus';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport Button from '@material-ui/core/Button';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport { setBonus } from '../../src/gql/bonus';\nimport Confirmation from '../../components/dialog/Confirmation';\nimport { checkInt } from '../../src/lib';\nconst CardBonus = React.memo(props => {\n  const classes = cardOrganizationStyle();\n  const {\n    element\n  } = props;\n  const {\n    isMobileApp\n  } = props.app;\n  const {\n    profile\n  } = props.user;\n  return __jsx(Card, {\n    className: isMobileApp ? classes.cardM : classes.cardD\n  }, __jsx(CardActionArea, null, __jsx(CardContent, {\n    className: classes.line\n  }, __jsx(\"img\", {\n    className: classes.media,\n    src: ['организация', 'менеджер'].includes(profile.role) ? element.client.image : element.bonus.organization.image,\n    alt: element.bonus.organization.name\n  }), __jsx(\"div\", null, !['организация', 'менеджер'].includes(profile.role) ? __jsx(Link, {\n    href: \"/organization/[id]\",\n    as: `/organization/${element.bonus.organization._id}`\n  }, __jsx(\"h3\", {\n    className: isMobileApp ? classes.inputM : classes.inputD\n  }, element.bonus.organization.name)) : null, __jsx(\"br\", null), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"\\u041A\\u043B\\u0438\\u0435\\u043D\\u0442:\\xA0\"), __jsx(Link, {\n    href: \"/client/[id]\",\n    as: `/client/${element.client.user._id}`\n  }, __jsx(\"div\", {\n    className: classes.value\n  }, element.client.name))), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"\\u0426\\u0435\\u043B\\u044C:\\xA0\"), __jsx(\"div\", {\n    className: classes.value\n  }, element.bonus.target, \"\\xA0\\u0441\\u043E\\u043C\")), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"\\u041F\\u0440\\u043E\\u0433\\u0440\\u0435\\u0441\\u0441:\\xA0\"), __jsx(\"div\", {\n    className: classes.value\n  }, element.current, \"\\xA0\\u0441\\u043E\\u043C\")), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"\\u0411\\u043E\\u043D\\u0443\\u0441:\\xA0\"), __jsx(\"div\", {\n    className: classes.value\n  }, element.addedBonus, \"\\xA0\\u0441\\u043E\\u043C\"))))));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardBonus);","map":null,"metadata":{},"sourceType":"module"}