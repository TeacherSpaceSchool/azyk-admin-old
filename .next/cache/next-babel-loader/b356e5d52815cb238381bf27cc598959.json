{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nvar MyDialog = React.memo(function (props) {\n  var _props$mini_dialog = props.mini_dialog,\n      title = _props$mini_dialog.title,\n      child = _props$mini_dialog.child,\n      show = _props$mini_dialog.show,\n      fullScreen = _props$mini_dialog.fullScreen;\n  var showMiniDialog = props.mini_dialogActions.showMiniDialog;\n  return __jsx(Dialog, {\n    fullScreen: fullScreen,\n    open: show,\n    onClose: function onClose() {\n      showMiniDialog(false);\n    },\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\"\n  }, __jsx(DialogTitle, {\n    onClose: function onClose() {\n      showMiniDialog(false);\n    }\n  }, title), __jsx(DialogContent, null, child));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    mini_dialog: state.mini_dialog\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyDialog);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\app\\Dialog.js"],"names":["React","Dialog","DialogContent","DialogTitle","connect","bindActionCreators","mini_dialogActions","MyDialog","memo","props","mini_dialog","title","child","show","fullScreen","showMiniDialog","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,kBAAZ,MAAoC,iCAApC;AAEA,IAAMC,QAAQ,GAAIP,KAAK,CAACQ,IAAN,CACd,UAACC,KAAD,EAAU;AAAA,2BACsCA,KAAK,CAACC,WAD5C;AAAA,MACEC,KADF,sBACEA,KADF;AAAA,MACSC,KADT,sBACSA,KADT;AAAA,MACgBC,IADhB,sBACgBA,IADhB;AAAA,MACsBC,UADtB,sBACsBA,UADtB;AAAA,MAEEC,cAFF,GAEqBN,KAAK,CAACH,kBAF3B,CAEES,cAFF;AAGN,SACQ,MAAC,MAAD;AACI,IAAA,UAAU,EAAED,UADhB;AAEI,IAAA,IAAI,EAAED,IAFV;AAGI,IAAA,OAAO,EAAE,mBAAI;AAACE,MAAAA,cAAc,CAAC,KAAD,CAAd;AAAsB,KAHxC;AAII,uBAAgB,oBAJpB;AAKI,wBAAiB;AALrB,KAMI,MAAC,WAAD;AAAa,IAAA,OAAO,EAAE,mBAAI;AAACA,MAAAA,cAAc,CAAC,KAAD,CAAd;AAAsB;AAAjD,KAAoDJ,KAApD,CANJ,EAOI,MAAC,aAAD,QACKC,KADL,CAPJ,CADR;AAaH,CAjBa,CAAlB;;AAoBA,SAASI,eAAT,CAA0BC,KAA1B,EAAiC;AAC7B,SAAO;AACHP,IAAAA,WAAW,EAAEO,KAAK,CAACP;AADhB,GAAP;AAGH;;AAED,SAASQ,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHb,IAAAA,kBAAkB,EAAED,kBAAkB,CAACC,kBAAD,EAAqBa,QAArB;AADnC,GAAP;AAGH;;AAED,eAAef,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\n\r\nconst MyDialog =  React.memo(\r\n    (props) =>{\r\n        const { title, child, show, fullScreen  } = props.mini_dialog;\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        return (\r\n                <Dialog\r\n                    fullScreen={fullScreen}\r\n                    open={show}\r\n                    onClose={()=>{showMiniDialog(false)}}\r\n                    aria-labelledby='alert-dialog-title'\r\n                    aria-describedby='alert-dialog-description'>\r\n                    <DialogTitle onClose={()=>{showMiniDialog(false)}}>{title}</DialogTitle>\r\n                    <DialogContent>\r\n                        {child}\r\n                    </DialogContent>\r\n                </Dialog>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyDialog);"]},"metadata":{},"sourceType":"module"}