{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState } from 'react';\nimport App from '../../layouts/App';\nimport { connect } from 'react-redux';\nimport { getEmployment, setEmployments, onoffEmployment, addEmployment, deleteEmployment } from '../../src/gql/employment';\nimport organizationStyle from '../../src/styleMUI/employment/employment';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport dynamic from 'next/dynamic';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { useRouter } from 'next/router';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { getOrganizations } from '../../src/gql/organization';\nimport Router from 'next/router';\nimport * as userActions from '../../redux/actions/user';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport TextField from '@material-ui/core/TextField';\nvar Confirmation = dynamic(function () {\n  return import('../../components/dialog/Confirmation');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../../components/dialog/Confirmation')];\n    },\n    modules: ['../../components/dialog/Confirmation']\n  }\n});\nvar Client = React.memo(function (props) {\n  var classes = organizationStyle();\n  var data = props.data;\n  var isMobileApp = props.app.isMobileApp;\n  var showSnackBar = props.snackbarActions.showSnackBar;\n\n  var _useState = useState(data.employment !== null ? data.employment.user.status : ''),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  var _useState2 = useState(data.employment !== null ? data.employment.name : ''),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(data.employment !== null ? data.employment.email : ''),\n      email = _useState3[0],\n      setEmail = _useState3[1];\n\n  var _useState4 = useState(data.employment !== null ? data.employment.user.phone : ''),\n      phone = _useState4[0],\n      setPhone = _useState4[1];\n\n  var _useState5 = useState(data.employment !== null ? data.employment.organization : {}),\n      organization = _useState5[0],\n      setOrganization = _useState5[1];\n\n  var handleOrganization = function handleOrganization(event) {\n    setOrganization({\n      _id: event.target.value,\n      name: event.target.name\n    });\n  };\n\n  var _useState6 = useState(data.employment !== null ? data.employment.user.role : ''),\n      role = _useState6[0],\n      setRole = _useState6[1];\n\n  var handleRole = function handleRole(event) {\n    setRole(event.target.value);\n  };\n\n  var _useState7 = useState(''),\n      password = _useState7[0],\n      setPassword = _useState7[1];\n\n  var handlePassword = function handlePassword(event) {\n    setPassword(event.target.value);\n  };\n\n  var _useState8 = useState('password'),\n      hide = _useState8[0],\n      setHide = _useState8[1];\n\n  var handleHide = function handleHide() {\n    setHide(!hide);\n  };\n\n  var profile = props.user.profile;\n  var _props$mini_dialogAct = props.mini_dialogActions,\n      setMiniDialog = _props$mini_dialogAct.setMiniDialog,\n      showMiniDialog = _props$mini_dialogAct.showMiniDialog;\n  var router = useRouter();\n  var logout = props.userActions.logout;\n  var roles = ['организация', 'менеджер', 'экспедитор'];\n  return __jsx(App, {\n    filters: data.filterSubCategory,\n    sorts: data.sortSubCategory,\n    pageName: data.employment !== null ? router.query.id === 'new' ? 'Добавить' : data.employment.name : 'Ничего не найдено'\n  }, __jsx(Head, null, __jsx(\"title\", null, data.employment !== null ? router.query.id === 'new' ? 'Добавить' : data.employment.name : 'Ничего не найдено')), __jsx(Card, {\n    className: classes.page\n  }, __jsx(CardActions, {\n    className: isMobileApp ? classes.column : classes.row,\n    style: isMobileApp ? {} : {\n      justifyContent: 'start',\n      alignItems: 'flex-start'\n    }\n  }, data.employment !== null ? profile.role === 'admin' || profile.role === 'организация' || profile._id === data.employment.user._id ? __jsx(React.Fragment, null, __jsx(\"div\", null, __jsx(TextField, {\n    label: \"\\u0418\\u043C\\u044F\",\n    value: name,\n    className: isMobileApp ? classes.inputM : classes.inputDF,\n    onChange: function onChange(event) {\n      setName(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    }\n  }), __jsx(Input, {\n    placeholder: router.query.id === 'new' ? 'Пароль' : 'Новый пароль',\n    type: hide ? 'password' : 'text',\n    value: password,\n    onChange: handlePassword,\n    className: isMobileApp ? classes.inputM : classes.inputDF,\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      \"aria-label\": \"Toggle password visibility\",\n      onClick: handleHide\n    }, hide ? __jsx(VisibilityOff, null) : __jsx(Visibility, null)))\n  }), __jsx(TextField, {\n    label: \"email\",\n    value: email,\n    className: isMobileApp ? classes.inputM : classes.inputDF,\n    onChange: function onChange(event) {\n      setEmail(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    }\n  }), __jsx(TextField, {\n    label: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\",\n    value: phone,\n    className: isMobileApp ? classes.inputM : classes.inputDF,\n    onChange: function onChange(event) {\n      setPhone(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    }\n  }), router.query.id === 'new' && profile.role === 'admin' ? __jsx(FormControl, {\n    className: isMobileApp ? classes.inputM : classes.inputDF\n  }, __jsx(InputLabel, null, \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"), __jsx(Select, {\n    value: organization._id,\n    onChange: handleOrganization\n  }, data.organizations.map(function (element) {\n    return __jsx(MenuItem, {\n      key: element._id,\n      value: element._id,\n      ola: element.name\n    }, element.name);\n  }))) : router.query.id !== 'new' ? __jsx(TextField, {\n    label: \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\",\n    value: organization.name,\n    className: isMobileApp ? classes.inputM : classes.inputDF,\n    inputProps: {\n      'aria-label': 'description',\n      readOnly: true\n    }\n  }) : null, __jsx(FormControl, {\n    className: isMobileApp ? classes.inputM : classes.inputDF\n  }, __jsx(InputLabel, null, \"\\u0420\\u043E\\u043B\\u044C\"), __jsx(Select, {\n    value: role,\n    onChange: handleRole,\n    inputProps: {\n      'aria-label': 'description',\n      readOnly: profile._id === data.employment.user._id || !['admin', 'организация'].includes(profile.role)\n    }\n  }, roles.map(function (element) {\n    //if(element!=='организация'||profile.role=='admin')\n    return __jsx(MenuItem, {\n      key: element,\n      value: element\n    }, element);\n  }))), __jsx(\"div\", {\n    className: classes.row\n  }, router.query.id === 'new' ? __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (name.length > 0 && email.length > 0 && password.length > 0 && phone.length > 0 && role.length > 0 && organization._id !== undefined) {\n                action =\n                /*#__PURE__*/\n                function () {\n                  var _ref2 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee() {\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return addEmployment({\n                              name: name,\n                              email: email,\n                              phone: phone,\n                              password: password,\n                              role: role,\n                              organization: organization._id\n                            });\n\n                          case 2:\n                            Router.push('/employments');\n\n                          case 3:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function action() {\n                    return _ref2.apply(this, arguments);\n                  };\n                }();\n\n                setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                  action: action\n                }));\n                showMiniDialog(true);\n              } else {\n                showSnackBar('Заполните все поля');\n              }\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })),\n    size: \"small\",\n    color: \"primary\"\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\") : __jsx(React.Fragment, null, __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var editElement, action;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              editElement = {\n                _id: data.employment._id\n              };\n              if (name.length > 0 && name !== data.employment.name) editElement.name = name;\n              if (phone.length > 0 && phone !== data.employment.phone) editElement.phone = phone;\n              if (email.length > 0 && email !== data.employment.email) editElement.email = email;\n              if (password.length > 0) editElement.newPass = password;\n              if (role.length > 0 && role !== data.employment.role) editElement.role = role;\n\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref4 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee3() {\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.next = 2;\n                          return setEmployments(editElement);\n\n                        case 2:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function action() {\n                  return _ref4.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action\n              }));\n              showMiniDialog(true);\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    })),\n    size: \"small\",\n    color: \"primary\"\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), profile._id !== data.employment.user._id && ['admin', 'организация'].includes(profile.role) ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref6 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee5() {\n                  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          _context5.next = 2;\n                          return onoffEmployment([data.employment._id]);\n\n                        case 2:\n                          setStatus(status === 'active' ? 'deactive' : 'active');\n\n                        case 3:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                return function action() {\n                  return _ref6.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action\n              }));\n              showMiniDialog(true);\n\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    })),\n    size: \"small\",\n    color: \"primary\"\n  }, status === 'active' ? 'Отключить' : 'Включить'), __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee8() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref8 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee7() {\n                  return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          _context7.next = 2;\n                          return deleteEmployment([data.employment._id]);\n\n                        case 2:\n                          Router.push('/employments');\n\n                        case 3:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                }));\n\n                return function action() {\n                  return _ref8.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action\n              }));\n              showMiniDialog(true);\n\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    })),\n    size: \"small\",\n    color: \"primary\"\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")) : null, profile._id === data.employment.user._id ? __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee10() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref10 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee9() {\n                  return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n                    while (1) {\n                      switch (_context9.prev = _context9.next) {\n                        case 0:\n                          logout();\n\n                        case 1:\n                        case \"end\":\n                          return _context9.stop();\n                      }\n                    }\n                  }, _callee9);\n                }));\n\n                return function action() {\n                  return _ref10.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action\n              }));\n              showMiniDialog(true);\n\n            case 3:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    })),\n    size: \"small\",\n    color: \"primary\"\n  }, \"\\u0412\\u044B\\u0439\\u0442\\u0438\") : null)))) : 'Ничего не найдено' : 'Ничего не найдено')));\n});\n\nClient.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref11 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee11(ctx) {\n    return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.t0 = _objectSpread;\n            _context11.t1 = {};\n\n            if (!(ctx.query.id !== 'new')) {\n              _context11.next = 8;\n              break;\n            }\n\n            _context11.next = 5;\n            return getEmployment({\n              _id: ctx.query.id\n            });\n\n          case 5:\n            _context11.t2 = _context11.sent;\n            _context11.next = 9;\n            break;\n\n          case 8:\n            _context11.t2 = {\n              employment: {\n                name: '',\n                email: '',\n                user: {\n                  phone: '',\n                  status: '',\n                  role: ''\n                },\n                organization: {\n                  _id: ''\n                }\n              }\n            };\n\n          case 9:\n            _context11.t3 = _context11.t2;\n            _context11.next = 12;\n            return getOrganizations({\n              search: '',\n              sort: 'name',\n              filter: ''\n            });\n\n          case 12:\n            _context11.t4 = _context11.sent;\n            _context11.t5 = (0, _context11.t0)(_context11.t1, _context11.t3, _context11.t4);\n            return _context11.abrupt(\"return\", {\n              data: _context11.t5\n            });\n\n          case 15:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n\n  return function (_x) {\n    return _ref11.apply(this, arguments);\n  };\n}();\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch),\n    userActions: bindActionCreators(userActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Client);","map":null,"metadata":{},"sourceType":"module"}