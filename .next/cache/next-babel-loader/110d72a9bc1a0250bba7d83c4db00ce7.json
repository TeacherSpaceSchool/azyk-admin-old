{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\components\\\\dialog\\\\Geo.js\";\nvar __jsx = React.createElement;\nimport React, { useState, userRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport dialogContentStyle from '../../src/styleMUI/dialogContent';\nimport { Map, YMaps, Placemark } from 'react-yandex-maps';\nimport Fab from '@material-ui/core/Fab';\nimport GpsFixed from '@material-ui/icons/GpsFixed';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Confirmation from './Confirmation';\nvar Geo = React.memo(function (props) {\n  var showSnackBar = props.snackbarActions.showSnackBar;\n  var isMobileApp = props.app.isMobileApp;\n  var _props$mini_dialogAct = props.mini_dialogActions,\n      showMiniDialog = _props$mini_dialogAct.showMiniDialog,\n      setMiniDialog = _props$mini_dialogAct.setMiniDialog;\n  var classes = props.classes,\n      geo = props.geo,\n      name = props.name,\n      idx = props.idx,\n      setAddressGeo = props.setAddressGeo;\n\n  var _useState = useState(geo ? geo : '42.8700000, 74.5900000'),\n      newGeo = _useState[0],\n      setNewGeo = _useState[1];\n\n  var getGeo = function getGeo() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setNewGeo(position.coords.latitude + ', ' + position.coords.longitude);\n      });\n    } else {\n      showSnackBar('Геолокация не поддерживается');\n    }\n  };\n\n  var dragend = function dragend(e) {\n    var geo = e.get('target').geometry.getCoordinates();\n    setNewGeo(geo[0] + ', ' + geo[1]);\n  };\n\n  var nameRef = useRef();\n  return __jsx(YMaps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      height: window.innerHeight - 128,\n      width: window.innerWidth - 48\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(CircularProgress, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), __jsx(Map, {\n    height: window.innerHeight - 128,\n    width: window.innerWidth - 48,\n    defaultState: {\n      center: [42.8700000, 74.5900000],\n      zoom: 12\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(Placemark, {\n    onDragEnd: dragend,\n    options: {\n      draggable: true,\n      iconColor: '#ffb300'\n    },\n    properties: {\n      iconCaption: name\n    },\n    geometry: newGeo.split(', '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))), __jsx(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return setAddressGeo(geo, idx);\n\n                        case 2:\n                          showMiniDialog(false);\n\n                        case 3:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function action() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 56\n                },\n                __self: this\n              }));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    })),\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: function onClick() {\n      showMiniDialog(false);\n    },\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"))), __jsx(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"\\u041D\\u0430\\u0439\\u0442\\u0438 \\u0433\\u0435\\u043E\\u043B\\u043E\\u043A\\u0430\\u0446\\u0438\\u044E\",\n    className: classes.fabGeo,\n    onClick: getGeo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(GpsFixed, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    mini_dialog: state.mini_dialog,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    snackbarActions: bindActionCreators(snackbarActions, dispatch),\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\n  };\n}\n\nGeo.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(Geo));","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\dialog\\Geo.js"],"names":["React","useState","userRef","PropTypes","withStyles","connect","bindActionCreators","mini_dialogActions","dialogContentStyle","Map","YMaps","Placemark","Fab","GpsFixed","snackbarActions","Button","CircularProgress","Confirmation","Geo","memo","props","showSnackBar","isMobileApp","app","showMiniDialog","setMiniDialog","classes","geo","name","idx","setAddressGeo","newGeo","setNewGeo","getGeo","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","dragend","e","get","geometry","getCoordinates","nameRef","useRef","column","height","window","innerHeight","width","innerWidth","center","zoom","draggable","iconColor","iconCaption","split","action","button","fabGeo","mapStateToProps","state","mini_dialog","mapDispatchToProps","dispatch","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, userRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport dialogContentStyle from '../../src/styleMUI/dialogContent'\r\nimport { Map, YMaps, Placemark } from 'react-yandex-maps';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport GpsFixed from '@material-ui/icons/GpsFixed';\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Confirmation from './Confirmation'\r\n\r\nconst Geo =  React.memo(\r\n    (props) =>{\r\n        const { showSnackBar } = props.snackbarActions;\r\n        const { isMobileApp } = props.app;\r\n        const { showMiniDialog, setMiniDialog } = props.mini_dialogActions;\r\n        const { classes, geo, name, idx, setAddressGeo } = props;\r\n        let [newGeo, setNewGeo] = useState(geo?geo:'42.8700000, 74.5900000');\r\n        let getGeo = () => {\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition((position)=>{\r\n                    setNewGeo(position.coords.latitude+', '+position.coords.longitude)\r\n                });\r\n            } else {\r\n                showSnackBar('Геолокация не поддерживается')\r\n            }\r\n        }\r\n        let dragend = (e) => {\r\n            let geo = e.get('target').geometry.getCoordinates()\r\n            setNewGeo(geo[0]+', '+geo[1])\r\n        }\r\n        let nameRef = useRef();\r\n        \r\n\r\n        return (\r\n            <YMaps>\r\n                <div className={classes.column}>\r\n                    <div style={{height: window.innerHeight-128, width: window.innerWidth-48}}>\r\n                        <CircularProgress/>\r\n                        <Map height={window.innerHeight-128} width={window.innerWidth-48} defaultState={{ center: [42.8700000, 74.5900000], zoom: 12 }} >\r\n                            <Placemark\r\n                                onDragEnd={dragend}\r\n                                options={{draggable: true, iconColor: '#ffb300'}} properties={{iconCaption: name}} geometry={newGeo.split(', ')} />\r\n                        </Map>\r\n                    </div>\r\n                    <center>\r\n                        <Button variant='contained' color='primary' onClick={async()=>{\r\n                            const action = async() => {\r\n                                await setAddressGeo(geo, idx)\r\n                                showMiniDialog(false);\r\n                            }\r\n                            setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                        }} className={classes.button}>\r\n                            Сохранить\r\n                        </Button>\r\n                        <Button variant='contained' color='secondary' onClick={()=>{showMiniDialog(false);}} className={classes.button}>\r\n                            Закрыть\r\n                        </Button>\r\n                    </center>\r\n                </div>\r\n                <Fab color='primary' aria-label='Найти геолокацию' className={classes.fabGeo} onClick={getGeo}>\r\n                    <GpsFixed/>\r\n                </Fab>\r\n            </YMaps>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\r\n    }\r\n}\r\n\r\nGeo.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(Geo));"]},"metadata":{},"sourceType":"module"}