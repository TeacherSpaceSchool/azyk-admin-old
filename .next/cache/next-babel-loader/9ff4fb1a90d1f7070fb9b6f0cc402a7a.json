{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\components\\\\items\\\\CardItem.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport cardItemStyle from '../../src/styleMUI/item/cardItem';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport AddShoppingCart from '@material-ui/icons/AddShoppingCart';\nimport Star from '@material-ui/icons/Star';\nimport Link from 'next/link';\nimport { onoffItem, deleteItem, favoriteItem } from '../../src/gql/items';\nimport { addBasket } from '../../src/gql/basket';\nimport Button from '@material-ui/core/Button';\nimport Confirmation from '../dialog/Confirmation';\nconst CardItem = React.memo(props => {\n  const classes = cardItemStyle();\n  const {\n    element,\n    setList,\n    subCategory,\n    getList,\n    setFavorites\n  } = props;\n  const {\n    profile,\n    authenticated\n  } = props.user;\n  let {\n    0: status,\n    1: setStatus\n  } = useState(element !== undefined ? element.status : '');\n  let {\n    0: favorite,\n    1: setFavorite\n  } = useState(element !== undefined && element.favorite !== undefined ? element.favorite : []);\n  const {\n    setMiniDialog,\n    showMiniDialog\n  } = props.mini_dialogActions;\n  const {\n    showSnackBar\n  } = props.snackbarActions;\n  let {\n    0: basket,\n    1: setBasket\n  } = useState(false);\n  useEffect(() => {\n    if (!authenticated) {\n      if (localStorage.favorites == undefined) localStorage.favorites = _JSON$stringify([]);else {\n        let favorites = JSON.parse(localStorage.favorites);\n\n        for (let i = 0; i < favorites.length; i++) {\n          if (favorites[i]._id == element._id) setFavorite(true);\n        }\n      }\n      if (localStorage.basket == undefined) localStorage.basket = _JSON$stringify([]);else {\n        let basket = JSON.parse(localStorage.basket);\n\n        for (let i = 0; i < basket.length; i++) {\n          if (basket[i].item._id == element._id) setBasket(true);\n        }\n      }\n    } else {\n      setBasket(element.basket.includes(profile._id));\n    }\n  }, []);\n  return __jsx(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(CardContent, {\n    className: classes.column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.chipList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, element.latest ? __jsx(\"div\", {\n    className: classes.chip,\n    style: {\n      color: 'white',\n      background: 'green'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"\\u041D\\u043E\\u0432\\u0438\\u043D\\u043A\\u0430\") : null, element.hit ? __jsx(\"div\", {\n    className: classes.chip,\n    style: {\n      color: 'black',\n      background: 'yellow'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"\\u0425\\u0438\\u0442\") : null), __jsx(Link, {\n    href: \"/item/[id]\",\n    as: `/item/${element !== undefined ? element._id : 'new'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: classes.media,\n    src: element.image,\n    alt: element.info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), __jsx(Link, {\n    href: \"/item/[id]\",\n    as: `/item/${element !== undefined ? element._id : 'new'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, element.name)), __jsx(Link, {\n    href: \"/item/[id]\",\n    as: `/item/${element !== undefined ? element._id : 'new'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, element.stock === 0 || element.stock === undefined ? __jsx(\"div\", {\n    className: classes.price,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, `${element.price} сом`) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.crossedPrice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, `${element.price}`), __jsx(\"div\", {\n    className: classes.stockPrice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, `${element.stock} сом`)))), ['admin', 'организация', 'менеджер'].includes(profile.role) ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: async () => {\n      const action = async () => {\n        await onoffItem([element._id]);\n        setStatus(status === 'active' ? 'deactive' : 'active');\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, status === 'active' ? 'Отключить' : 'Включить'), 'admin' === profile.role ? __jsx(Button, {\n    onClick: async () => {\n      const action = async () => {\n        const list = (await deleteItem([element._id], subCategory)).items;\n        setList(list);\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\") : null) : profile.role === 'client' || !authenticated ? __jsx(AddShoppingCart, {\n    style: {\n      color: basket ? '#ffb300' : '#e1e1e1'\n    },\n    className: classes.button,\n    onClick: () => {\n      if (profile.role === 'client') addBasket({\n        item: element._id,\n        count: 1\n      });else if (!authenticated) {\n        let basket = JSON.parse(localStorage.basket);\n        let index = -1;\n\n        for (let i = 0; i < basket.length; i++) {\n          if (basket[i].item._id == element._id) index = i;\n        }\n\n        if (index === -1) basket.push({\n          item: element,\n          count: 1\n        });\n        localStorage.basket = _JSON$stringify(basket);\n      }\n      showSnackBar('Товар добавлен в корзину');\n      setBasket(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }) : null, profile.role === 'client' || !authenticated ? __jsx(Star, {\n    className: classes.buttonToggle,\n    onClick: async () => {\n      let index;\n\n      if (profile.role === 'client') {\n        await favoriteItem([element._id]);\n        index = favorite.indexOf(profile._id);\n\n        if (index === -1) {\n          favorite.push(profile._id);\n          setFavorite([...favorite]);\n          if (getList !== undefined) getList();\n        }\n      } else if (!authenticated) {\n        let favorites = JSON.parse(localStorage.favorites);\n        index = -1;\n\n        for (let i = 0; i < favorites.length; i++) {\n          if (favorites[i]._id == element._id) index = i;\n        }\n\n        if (index === -1) {\n          favorites.push(element);\n          setFavorite(true);\n          localStorage.favorites = _JSON$stringify(favorites);\n          if (setFavorites) setFavorites(favorites);\n        }\n      }\n\n      if (index !== -1) {\n        const action = async () => {\n          if (profile.role === 'client') {\n            favorite.splice(index, 1);\n            setFavorite([...favorite]);\n            if (getList !== undefined) getList();\n          } else if (!authenticated) {\n            let favorites = JSON.parse(localStorage.favorites);\n            favorites.splice(index, 1);\n            setFavorite(false);\n            localStorage.favorites = _JSON$stringify(favorites);\n            if (setFavorites) setFavorites(favorites);\n          }\n        };\n\n        setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n          action: action,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }));\n        showMiniDialog(true);\n      }\n    },\n    style: {\n      color: !authenticated && favorite === true || profile.role == 'client' && favorite.includes(profile._id) ? '#ffb300' : '#e1e1e1'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }) : null));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardItem);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\items\\CardItem.js"],"names":["React","useState","useEffect","Card","CardContent","cardItemStyle","connect","bindActionCreators","mini_dialogActions","snackbarActions","AddShoppingCart","Star","Link","onoffItem","deleteItem","favoriteItem","addBasket","Button","Confirmation","CardItem","memo","props","classes","element","setList","subCategory","getList","setFavorites","profile","authenticated","user","status","setStatus","undefined","favorite","setFavorite","setMiniDialog","showMiniDialog","showSnackBar","basket","setBasket","localStorage","favorites","JSON","parse","i","length","_id","item","includes","card","column","chipList","latest","chip","color","background","hit","media","image","info","name","row","stock","price","crossedPrice","stockPrice","role","action","list","items","button","count","index","push","buttonToggle","indexOf","splice","mapStateToProps","state","app","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport cardItemStyle from '../../src/styleMUI/item/cardItem'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport AddShoppingCart from '@material-ui/icons/AddShoppingCart';\r\nimport Star from '@material-ui/icons/Star';\r\nimport Link from 'next/link';\r\nimport { onoffItem, deleteItem, favoriteItem } from '../../src/gql/items'\r\nimport { addBasket } from '../../src/gql/basket'\r\nimport Button from '@material-ui/core/Button';\r\nimport Confirmation from '../dialog/Confirmation'\r\n\r\nconst CardItem = React.memo((props) => {\r\n    const classes = cardItemStyle();\r\n    const { element, setList, subCategory, getList, setFavorites } = props;\r\n    const { profile, authenticated } = props.user;\r\n    let [status, setStatus] = useState(element!==undefined?element.status:'');\r\n    let [favorite, setFavorite] = useState(element!==undefined&&element.favorite!==undefined?element.favorite:[]);\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    const { showSnackBar } = props.snackbarActions;\r\n    let [basket, setBasket] = useState(false);\r\n    useEffect(()=>{\r\n        if(!authenticated){\r\n            if(localStorage.favorites==undefined)\r\n                localStorage.favorites = JSON.stringify([])\r\n            else {\r\n                let favorites = JSON.parse(localStorage.favorites)\r\n                for(let i=0; i<favorites.length; i++){\r\n                    if(favorites[i]._id == element._id)\r\n                        setFavorite(true)\r\n                }\r\n            }\r\n            if(localStorage.basket==undefined)\r\n                localStorage.basket = JSON.stringify([])\r\n            else {\r\n                let basket = JSON.parse(localStorage.basket)\r\n                for(let i=0; i<basket.length; i++){\r\n                    if(basket[i].item._id == element._id)\r\n                        setBasket(true)\r\n                }\r\n            }\r\n\r\n        } else {\r\n            setBasket((element.basket).includes(profile._id))\r\n        }\r\n    },[])\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent className={classes.column}>\r\n                <div className={classes.chipList}>\r\n                    {\r\n                        element.latest?\r\n                            <div className={classes.chip} style={{color: 'white',background: 'green'}}>\r\n                                Новинка\r\n                            </div>\r\n                            :null\r\n                    }\r\n                                    {\r\n                                        element.hit?\r\n                                            <div className={classes.chip} style={{color: 'black',background: 'yellow'}}>\r\n                                                Хит\r\n                                            </div>\r\n                                            :null\r\n                                    }\r\n                                        </div>\r\n                                        <Link href='/item/[id]' as={`/item/${element!==undefined?element._id:'new'}`}>\r\n                                            <img\r\n                                                className={classes.media}\r\n                                                src={element.image}\r\n                                                alt={element.info}\r\n                                            />\r\n                                        </Link>\r\n                                        <Link href='/item/[id]' as={`/item/${element!==undefined?element._id:'new'}`}>\r\n                                            <div className={classes.name}>\r\n                                                {element.name}\r\n                                            </div>\r\n                                        </Link>\r\n                                        <Link href='/item/[id]' as={`/item/${element!==undefined?element._id:'new'}`}>\r\n                                            <div className={classes.row}>\r\n                                            {\r\n                                                element.stock===0||element.stock===undefined?\r\n                                                    <div className={classes.price}>\r\n                                                        {`${element.price} сом`}\r\n                                                    </div>\r\n                                                    :\r\n                                                    <>\r\n                                                    <div className={classes.crossedPrice}>\r\n                                                        {`${element.price}`}\r\n                                                    </div>\r\n                                                    <div className={classes.stockPrice}>\r\n                                                        {`${element.stock} сом`}\r\n                                                    </div>\r\n                                                    </>\r\n                                            }\r\n                                            </div>\r\n                                        </Link>\r\n                                        {['admin','организация','менеджер'].includes(profile.role)?\r\n                                            <>\r\n                                            <Button onClick={async()=>{\r\n                                                const action = async() => {\r\n                                                    await onoffItem([element._id])\r\n                                                    setStatus(status==='active'?'deactive':'active')\r\n                                                }\r\n                                                setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                showMiniDialog(true)\r\n                                            }} size='small' color='primary'>\r\n                                                {status==='active'?'Отключить':'Включить'}\r\n                                            </Button>\r\n                                            {\r\n                                                'admin'===profile.role?\r\n                                                    <Button onClick={async()=>{\r\n                                                        const action = async() => {\r\n                                                            const list = (await deleteItem([element._id], subCategory)).items\r\n                                                            setList(list)\r\n                                                        }\r\n                                                        setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                        showMiniDialog(true)\r\n                                                    }} size='small' color='primary'>\r\n                                                        Удалить\r\n                                                    </Button>:null\r\n                                            }\r\n                                            </>\r\n                                            :\r\n                                            profile.role==='client'||!authenticated?\r\n                                                <AddShoppingCart style={{color: basket?'#ffb300':'#e1e1e1'}}  className={classes.button} onClick={()=>{\r\n                                                    if(profile.role==='client')\r\n                                                        addBasket({item: element._id, count: 1})\r\n                                                    else if(!authenticated) {\r\n                                                        let basket = JSON.parse(localStorage.basket);\r\n                                                        let index = -1\r\n                                                        for(let i=0; i<basket.length; i++){\r\n                                                            if(basket[i].item._id == element._id)\r\n                                                                index = i\r\n                                                        }\r\n                                                        if(index===-1)\r\n                                                            basket.push({item: element, count: 1})\r\n                                                        localStorage.basket = JSON.stringify(basket)\r\n                                                    }\r\n                                                    showSnackBar('Товар добавлен в корзину')\r\n                                                    setBasket(true)\r\n                                                }}/>\r\n                                                :\r\n                                                null\r\n                                        }\r\n                                        {profile.role==='client'||!authenticated?\r\n                                            <Star className={classes.buttonToggle} onClick={async ()=>{\r\n                                                let index\r\n                                                if(profile.role==='client') {\r\n                                                    await favoriteItem([element._id])\r\n                                                    index = favorite.indexOf(profile._id)\r\n                                                    if (index === -1) {\r\n                                                        favorite.push(profile._id)\r\n                                                        setFavorite([...favorite])\r\n                                                        if (getList !== undefined)\r\n                                                            getList()\r\n                                                    }\r\n                                                }\r\n                                                else if(!authenticated) {\r\n                                                    let favorites = JSON.parse(localStorage.favorites);\r\n                                                    index = -1\r\n                                                    for(let i=0; i<favorites.length; i++){\r\n                                                        if(favorites[i]._id == element._id)\r\n                                                            index = i\r\n                                                    }\r\n                                                    if(index===-1) {\r\n                                                        favorites.push(element)\r\n                                                        setFavorite(true)\r\n                                                        localStorage.favorites = JSON.stringify(favorites)\r\n                                                        if (setFavorites)\r\n                                                            setFavorites(favorites)\r\n                                                    }\r\n                                                }\r\n                                                if (index !== -1) {\r\n                                                    const action = async() => {\r\n                                                        if(profile.role==='client') {\r\n                                                            favorite.splice(index, 1)\r\n                                                            setFavorite([...favorite])\r\n                                                            if (getList !== undefined)\r\n                                                                getList()\r\n                                                        }\r\n                                                        else if(!authenticated) {\r\n                                                            let favorites = JSON.parse(localStorage.favorites);\r\n                                                            favorites.splice(index, 1)\r\n                                                            setFavorite(false)\r\n                                                            localStorage.favorites = JSON.stringify(favorites)\r\n                                                            if(setFavorites)\r\n                                                                setFavorites(favorites)\r\n                                                        }\r\n                                                    }\r\n                                                    setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                    showMiniDialog(true)\r\n                                                }\r\n                                            }} style={{color: (!authenticated&&favorite===true)||(profile.role=='client'&&favorite.includes(profile._id))?'#ffb300':'#e1e1e1'}}  />\r\n                                            :\r\n                                            null\r\n                                        }\r\n                                    </CardContent>\r\n        </Card>\r\n    );\r\n})\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardItem)"]},"metadata":{},"sourceType":"module"}