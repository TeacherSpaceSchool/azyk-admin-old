{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\components\\\\dialog\\\\Order.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { cancelOrders, approveOrders, setOrder } from '../../src/gql/order';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport * as userActions from '../../redux/actions/user';\nimport Button from '@material-ui/core/Button';\nimport dialogContentStyle from '../../src/styleMUI/dialogContent';\nimport { pdDDMMYYHHMM } from '../../src/lib';\nimport Confirmation from './Confirmation';\nimport Geo from '../../components/dialog/Geo';\nimport IconButton from '@material-ui/core/IconButton';\nimport CancelIcon from '@material-ui/icons/Cancel';\nconst Order = React.memo(props => {\n  const {\n    isMobileApp\n  } = props.app;\n  const {\n    profile\n  } = props.user;\n  const {\n    showMiniDialog,\n    setMiniDialog\n  } = props.mini_dialogActions;\n  const {\n    classes,\n    element,\n    setList,\n    route,\n    getInvoices\n  } = props;\n  let {\n    0: orders,\n    1: setOrders\n  } = useState(element.orders);\n  const width = isMobileApp ? window.innerWidth - 144 : 500;\n  const {\n    showSnackBar\n  } = props.snackbarActions;\n\n  let increment = idx => {\n    orders[idx].count += 1;\n    orders[idx].allPrice = orders[idx].count * (orders[idx].item.stock === 0 || orders[idx].item.stock === undefined ? orders[idx].item.price : orders[idx].item.stock);\n    setOrders([...orders]);\n  };\n\n  let decrement = idx => {\n    if (orders[idx].count > 1) {\n      orders[idx].count -= 1;\n      orders[idx].allPrice = orders[idx].count * (orders[idx].item.stock === 0 || orders[idx].item.stock === undefined ? orders[idx].item.price : orders[idx].item.stock);\n      setOrders([...orders]);\n    }\n  };\n\n  let remove = idx => {\n    if (orders.length > 1) {\n      orders.splice(idx, 1);\n      setOrders([...orders]);\n    } else showSnackBar('Товары не могут отсутствовать в заказе');\n  };\n\n  return __jsx(\"div\", {\n    className: classes.column,\n    style: {\n      width: width\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u043A\\u0430\\u0437 \\u2116:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, element.number)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, element.orders[0].status === 'принят' && (element.confirmationForwarder || element.confirmationClient) ? element.confirmationClient ? 'подтвержден клиентом' : element.confirmationForwarder ? 'доставлен поставщиком' : element.orders[0].status : element.orders[0].status)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"\\u0410\\u0434\\u0440\\u0435\\u0441: \\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, element.address[0])), __jsx(\"div\", {\n    className: classes.geo,\n    style: {\n      color: element.address[1] ? '#ffb300' : 'red'\n    },\n    onClick: () => {\n      setMiniDialog('Геолокация', __jsx(Geo, {\n        geo: element.address[1],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), true);\n      showMiniDialog(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, element.address[1] ? 'Посмотреть геолокацию' : 'Геолокация не задана'), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"\\u0412\\u0440\\u0435\\u043C\\u044F \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430: \\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, pdDDMMYYHHMM(new Date(element.createdAt)))), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"\\u0412\\u0440\\u0435\\u043C\\u044F \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0438:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, pdDDMMYYHHMM(new Date(element.dateDelivery)))), __jsx(\"a\", {\n    href: `/client/${element.client.user._id}`,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0430\\u0442\\u0435\\u043B\\u044C:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, element.client.name))), __jsx(\"a\", {\n    href: `/organization/${element.orders[0].item.organization._id}`,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"\\u041F\\u043E\\u0441\\u0442\\u0430\\u0432\\u0449\\u0438\\u043A:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, element.orders[0].item.organization.name))), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"\\u0421\\u0443\\u043C\\u043C\\u0430:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, element.allPrice, \"\\xA0\\u0441\\u043E\\u043C\")), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"\\u0421\\u043F\\u043E\\u0441\\u043E\\u0431 \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, element.paymentMethod)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, element.info)), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"\\u0422\\u043E\\u0432\\u0430\\u0440\\u044B:\"), orders.map((order, idx) => {\n    if (element.orders[0].status === 'обработка' && (profile.role === 'client' || ['менеджер', 'организация'].includes(profile.role) || profile.role === 'admin')) return __jsx(\"div\", {\n      key: idx,\n      className: classes.column,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.nameField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"\\u0422\\u043E\\u0432\\u0430\\u0440:\\xA0\"), __jsx(\"a\", {\n      href: `/item/${order.item._id}`,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, order.item.name)), __jsx(IconButton, {\n      onClick: () => {\n        remove(idx);\n      },\n      color: \"primary\",\n      className: classes.button,\n      \"aria-label\": \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, __jsx(CancelIcon, {\n      style: {\n        height: 20,\n        width: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: classes.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.nameField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E:\\xA0\"), __jsx(\"div\", {\n      className: classes.counterbtn,\n      onClick: () => {\n        decrement(idx);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"-\"), __jsx(\"div\", {\n      className: classes.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, order.count, \"\\xA0\\u0448\\u0442\"), __jsx(\"div\", {\n      className: classes.counterbtn,\n      onClick: () => {\n        increment(idx);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"+\")), __jsx(\"div\", {\n      className: classes.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.nameField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"\\u041E\\u0431\\u0449\\u0430\\u044F \\u0441\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C:\\xA0\"), __jsx(\"div\", {\n      className: classes.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, order.allPrice, \"\\xA0\\u0441\\u043E\\u043C\")), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }));else return __jsx(\"div\", {\n      key: idx,\n      className: classes.column,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: `/item/${order.item._id}`,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.nameField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"\\u0422\\u043E\\u0432\\u0430\\u0440:\\xA0\"), __jsx(\"div\", {\n      className: classes.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, order.item.name))), __jsx(\"div\", {\n      className: classes.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.nameField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E:\\xA0\"), __jsx(\"div\", {\n      className: classes.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, order.count, \"\\xA0\\u0448\\u0442\")), __jsx(\"div\", {\n      className: classes.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: classes.nameField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"\\u041E\\u0431\\u0449\\u0430\\u044F \\u0441\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C:\\xA0\"), __jsx(\"div\", {\n      className: classes.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, order.allPrice, \"\\xA0\\u0441\\u043E\\u043C\")), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }));\n  })), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, element.orders[0].status === 'обработка' && (profile.role === 'client' || ['менеджер', 'организация'].includes(profile.role) || profile.role === 'admin') ? __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => {\n      const action = async () => {\n        let sendOrders = orders.map(order => {\n          return {\n            _id: order._id,\n            count: order.count,\n            allPrice: order.allPrice\n          };\n        });\n        let invoices = (await setOrder({\n          orders: sendOrders\n        })).invoices;\n        if (setList) setList(invoices);\n        if (getInvoices) getInvoices();\n        showMiniDialog(false);\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }));\n    },\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\") : null, profile.role === 'client' && 'принят' === element.orders[0].status && !element.confirmationClient || ['менеджер', 'организация'].includes(profile.role) && 'принят' === element.orders[0].status && !element.confirmationForwarder || profile.role === 'admin' ? __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => {\n      const action = async () => {\n        let invoices = (await approveOrders({\n          route: route,\n          invoices: [element._id]\n        })).invoices;\n        if (setList) setList(invoices);\n        if (getInvoices) getInvoices();\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }));\n    },\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u043A\\u0430\\u0437 \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\") : null, profile.role === 'client' && element.orders[0].status === 'обработка' || ['менеджер', 'организация'].includes(profile.role) && ['обработка', 'принят'].includes(element.orders[0].status) && !element.confirmationForwarder || profile.role === 'admin' ? __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => {\n      let _id = element.orders.map(order => order._id);\n\n      const action = async () => {\n        let invoices = (await cancelOrders({\n          _id: _id\n        })).invoices;\n        if (setList) setList(invoices);\n        if (getInvoices) getInvoices();\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }));\n    },\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437\") : null, __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => {\n      showMiniDialog(false);\n    },\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\")));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    mini_dialog: state.mini_dialog,\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    userActions: bindActionCreators(userActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nOrder.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(Order));","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\dialog\\Order.js"],"names":["React","useState","PropTypes","withStyles","connect","bindActionCreators","cancelOrders","approveOrders","setOrder","mini_dialogActions","snackbarActions","userActions","Button","dialogContentStyle","pdDDMMYYHHMM","Confirmation","Geo","IconButton","CancelIcon","Order","memo","props","isMobileApp","app","profile","user","showMiniDialog","setMiniDialog","classes","element","setList","route","getInvoices","orders","setOrders","width","window","innerWidth","showSnackBar","increment","idx","count","allPrice","item","stock","undefined","price","decrement","remove","length","splice","column","row","nameField","value","number","status","confirmationForwarder","confirmationClient","address","geo","color","Date","createdAt","dateDelivery","client","_id","name","organization","paymentMethod","info","map","order","role","includes","button","height","counterbtn","action","sendOrders","invoices","mapStateToProps","state","mini_dialog","mapDispatchToProps","dispatch","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { cancelOrders, approveOrders, setOrder } from '../../src/gql/order'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport * as userActions from '../../redux/actions/user'\r\nimport Button from '@material-ui/core/Button';\r\nimport dialogContentStyle from '../../src/styleMUI/dialogContent'\r\nimport { pdDDMMYYHHMM } from '../../src/lib'\r\nimport Confirmation from './Confirmation'\r\nimport Geo from '../../components/dialog/Geo'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nconst Order =  React.memo(\r\n    (props) =>{\r\n        const { isMobileApp } = props.app;\r\n        const { profile } = props.user;\r\n        const { showMiniDialog, setMiniDialog } = props.mini_dialogActions;\r\n        const { classes, element, setList, route, getInvoices } = props;\r\n        let [orders, setOrders] = useState(element.orders);\r\n        const width = isMobileApp? (window.innerWidth-144) : 500;\r\n        const { showSnackBar } = props.snackbarActions;\r\n        let increment = (idx)=>{\r\n            orders[idx].count+=1\r\n            orders[idx].allPrice = orders[idx].count * (orders[idx].item.stock===0||orders[idx].item.stock===undefined?orders[idx].item.price:orders[idx].item.stock)\r\n            setOrders([...orders])\r\n        }\r\n        let decrement = (idx)=>{\r\n            if(orders[idx].count>1) {\r\n                orders[idx].count -= 1\r\n                orders[idx].allPrice = orders[idx].count * (orders[idx].item.stock===0||orders[idx].item.stock===undefined?orders[idx].item.price:orders[idx].item.stock)\r\n                setOrders([...orders])\r\n            }\r\n        }\r\n        let remove = (idx)=>{\r\n            if(orders.length>1) {\r\n                orders.splice(idx, 1)\r\n                setOrders([...orders])\r\n            } else\r\n                showSnackBar('Товары не могут отсутствовать в заказе')\r\n        }\r\n        return (\r\n            <div className={classes.column} style={{width: width}}>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Заказ №:&nbsp;</div>\r\n                    <div className={classes.value}>{element.number}</div>\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Статус:&nbsp;</div>\r\n                    <div className={classes.value}>{\r\n                            element.orders[0].status==='принят'&&(element.confirmationForwarder||element.confirmationClient)?\r\n                                element.confirmationClient?\r\n                                    'подтвержден клиентом'\r\n                                    :\r\n                                    element.confirmationForwarder?\r\n                                        'доставлен поставщиком'\r\n                                        :\r\n                                        element.orders[0].status\r\n                                :\r\n                                element.orders[0].status\r\n                    }</div>\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Адрес: &nbsp;</div>\r\n                    <div className={classes.value}>{element.address[0]}</div>\r\n                </div>\r\n                <div className={classes.geo} style={{color: element.address[1]?'#ffb300':'red'}} onClick={()=>{\r\n                    setMiniDialog('Геолокация', <Geo geo={element.address[1]}/>, true)\r\n                    showMiniDialog(true)\r\n                }}>\r\n                    {\r\n                        element.address[1]?\r\n                            'Посмотреть геолокацию'\r\n                            :\r\n                            'Геолокация не задана'\r\n                    }\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Время заказа: &nbsp;</div>\r\n                    <div className={classes.value}>{pdDDMMYYHHMM(new Date(element.createdAt))}</div>\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Время доставки:&nbsp;</div>\r\n                    <div className={classes.value}>{pdDDMMYYHHMM(new Date(element.dateDelivery))}</div>\r\n                </div>\r\n                <a href={`/client/${element.client.user._id}`} target='_blank'>\r\n                    <div className={classes.row}>\r\n                        <div className={classes.nameField}>Получатель:&nbsp;</div>\r\n                        <div className={classes.value}>{element.client.name}</div>\r\n                    </div>\r\n                </a>\r\n                <a href={`/organization/${element.orders[0].item.organization._id}`} target='_blank'>\r\n                    <div className={classes.row}>\r\n                        <div className={classes.nameField}>Поставщик:&nbsp;</div>\r\n                        <div className={classes.value}>{element.orders[0].item.organization.name}</div>\r\n                    </div>\r\n                </a>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Сумма:&nbsp;</div>\r\n                    <div className={classes.value}>{element.allPrice}&nbsp;сом</div>\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Способ оплаты:&nbsp;</div>\r\n                    <div className={classes.value}>{element.paymentMethod}</div>\r\n                </div>\r\n                <div className={classes.row}>\r\n                    <div className={classes.nameField}>Информация:&nbsp;</div>\r\n                    <div className={classes.value}>{element.info}</div>\r\n                </div>\r\n                <br/>\r\n                <div className={classes.column}>\r\n                    <b>Товары:</b>\r\n                    {\r\n                        orders.map((order, idx) => {\r\n                            if(\r\n                                element.orders[0].status==='обработка'&&\r\n                                (\r\n                                    profile.role==='client'||\r\n                                    ['менеджер', 'организация'].includes(profile.role)||\r\n                                    profile.role==='admin'\r\n                                )\r\n                            )\r\n                                return(\r\n                                    <div key={idx} className={classes.column}>\r\n                                        <div className={classes.row}>\r\n                                            <div className={classes.nameField}>Товар:&nbsp;</div>\r\n                                            <a href={`/item/${order.item._id}`} target='_blank'>\r\n                                                <div className={classes.value}>{order.item.name}</div>\r\n                                            </a>\r\n                                            <IconButton onClick={()=>{\r\n                                                remove(idx)\r\n                                            }} color='primary' className={classes.button} aria-label='удалить'>\r\n                                                <CancelIcon style={{height: 20, width: 20}}/>\r\n                                            </IconButton>\r\n                                        </div>\r\n                                        <div className={classes.row}>\r\n                                            <div className={classes.nameField}>Количество:&nbsp;</div>\r\n                                            <div className={classes.counterbtn} onClick={()=>{decrement(idx)}}>-</div>\r\n                                            <div className={classes.value}>{order.count}&nbsp;шт</div>\r\n                                            <div className={classes.counterbtn} onClick={()=>{increment(idx)}}>+</div>\r\n                                        </div>\r\n                                        <div className={classes.row}>\r\n                                            <div className={classes.nameField}>Общая стоимость:&nbsp;</div>\r\n                                            <div className={classes.value}>{order.allPrice}&nbsp;сом</div>\r\n                                        </div>\r\n                                        <br/>\r\n                                    </div>\r\n                                )\r\n                            else\r\n                                return(\r\n                                    <div key={idx} className={classes.column}>\r\n                                        <a href={`/item/${order.item._id}`} target='_blank'>\r\n                                            <div className={classes.row}>\r\n                                                <div className={classes.nameField}>Товар:&nbsp;</div>\r\n                                                <div className={classes.value}>{order.item.name}</div>\r\n                                            </div>\r\n                                        </a>\r\n                                        <div className={classes.row}>\r\n                                            <div className={classes.nameField}>Количество:&nbsp;</div>\r\n                                            <div className={classes.value}>{order.count}&nbsp;шт</div>\r\n                                        </div>\r\n                                        <div className={classes.row}>\r\n                                            <div className={classes.nameField}>Общая стоимость:&nbsp;</div>\r\n                                            <div className={classes.value}>{order.allPrice}&nbsp;сом</div>\r\n                                        </div>\r\n                                        <br/>\r\n                                    </div>\r\n                                )\r\n                        })\r\n                    }\r\n                </div>\r\n                <div>\r\n                    {\r\n                        (element.orders[0].status==='обработка'&&(profile.role==='client'||['менеджер', 'организация'].includes(profile.role)||profile.role==='admin'))?\r\n                            <Button variant='contained' color='primary' onClick={()=>{\r\n                                const action = async() => {\r\n                                    let sendOrders = orders.map((order)=>{return {_id: order._id, count: order.count, allPrice: order.allPrice}})\r\n                                    let invoices = (await setOrder({orders: sendOrders})).invoices\r\n                                    if(setList)\r\n                                        setList(invoices)\r\n                                    if(getInvoices)\r\n                                        getInvoices()\r\n                                    showMiniDialog(false);\r\n                                }\r\n                                setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                            }} className={classes.button}>\r\n                                Сохранить\r\n                            </Button>\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        (\r\n                            (profile.role==='client'&&'принят'===element.orders[0].status&&!element.confirmationClient)\r\n                            ||\r\n                            (['менеджер', 'организация'].includes(profile.role)&&'принят'===element.orders[0].status&&!element.confirmationForwarder)\r\n                            ||\r\n                            profile.role==='admin'\r\n                        )?\r\n                            <Button variant='contained' color='primary' onClick={()=>{\r\n                                const action = async() => {\r\n                                    let invoices = (await approveOrders({route: route, invoices: [element._id]})).invoices\r\n                                    if(setList)\r\n                                        setList(invoices)\r\n                                    if(getInvoices)\r\n                                        getInvoices()\r\n                                }\r\n                                setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                            }} className={classes.button}>\r\n                                Заказ выполнен\r\n                            </Button>\r\n                            :\r\n                            null\r\n                    }\r\n                    {\r\n                        (profile.role==='client'&&element.orders[0].status==='обработка')\r\n                        ||(['менеджер', 'организация'].includes(profile.role)&&['обработка', 'принят'].includes(element.orders[0].status)&&!element.confirmationForwarder\r\n                        ||profile.role==='admin')?\r\n                            <Button variant='contained' color='primary' onClick={()=>{\r\n                                let _id = element.orders.map(order=>order._id)\r\n                                const action = async() => {\r\n                                    let invoices = (await cancelOrders({_id: _id})).invoices\r\n                                    if(setList)\r\n                                        setList(invoices)\r\n                                    if(getInvoices)\r\n                                        getInvoices()\r\n                                }\r\n                                setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                            }} className={classes.button}>\r\n                                Отменить заказ\r\n                            </Button>\r\n                            :\r\n                            null\r\n                    }\r\n                    <Button variant='contained' color='secondary' onClick={()=>{showMiniDialog(false);}} className={classes.button}>\r\n                        Закрыть\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nOrder.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(Order));"]},"metadata":{},"sourceType":"module"}