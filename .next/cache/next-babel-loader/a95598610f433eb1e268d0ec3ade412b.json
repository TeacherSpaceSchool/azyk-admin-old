{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\components\\\\dialog\\\\BuyBasket.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { addOrders } from '../../src/gql/order';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport * as userActions from '../../redux/actions/user';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from '@material-ui/core/Button';\nimport Input from '@material-ui/core/Input';\nimport dialogContentStyle from '../../src/styleMUI/dialogContent';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Router from 'next/router';\nimport Confirmation from './Confirmation';\nvar BuyBasket = React.memo(function (props) {\n  var isMobileApp = props.app.isMobileApp;\n  var client = props.client,\n      allPrice = props.allPrice;\n  var _props$mini_dialogAct = props.mini_dialogActions,\n      showMiniDialog = _props$mini_dialogAct.showMiniDialog,\n      setMiniDialog = _props$mini_dialogAct.setMiniDialog;\n  var showSnackBar = props.snackbarActions.showSnackBar;\n  var classes = props.classes;\n  var width = isMobileApp ? window.innerWidth - 126 : 500;\n\n  var _useState = useState([]),\n      address = _useState[0],\n      setAddress = _useState[1];\n\n  var _useState2 = useState(''),\n      coment = _useState2[0],\n      setComent = _useState2[1];\n\n  var handleComent = function handleComent(event) {\n    setComent(event.target.value);\n  };\n\n  var _useState3 = useState(''),\n      paymentMethod = _useState3[0],\n      setPaymentMethod = _useState3[1];\n\n  var paymentMethods = ['Наличные'];\n\n  var handlePaymentMethod = function handlePaymentMethod(event) {\n    setPaymentMethod(event.target.value);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(FormControl, {\n    component: \"fieldset\",\n    style: {\n      width: width\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(FormLabel, {\n    component: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"\\u0410\\u0434\\u0440\\u0435\\u0441\\u0430 \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0438:\"), __jsx(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, client.address.map(function (element, idx) {\n    return __jsx(FormControlLabel, {\n      key: idx,\n      onChange: function onChange(e) {\n        if (e.target.checked) address.push(element);else {\n          address.splice(address.indexOf(element), 1);\n        }\n        setAddress(_toConsumableArray(address));\n      },\n      control: __jsx(Checkbox, {\n        value: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }),\n      label: element,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    });\n  }))), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), __jsx(Input, {\n    style: {\n      width: width\n    },\n    placeholder: \"\\u041A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n    value: coment,\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    onChange: handleComent,\n    inputProps: {\n      'aria-label': 'description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), __jsx(FormControl, {\n    style: {\n      width: width\n    },\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"\\u0421\\u043F\\u043E\\u0441\\u043E\\u0431 \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B\"), __jsx(Select, {\n    value: paymentMethod,\n    onChange: handlePaymentMethod,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, paymentMethods.map(function (element) {\n    return __jsx(MenuItem, {\n      key: element,\n      value: element,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, element);\n  }))), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    style: {\n      width: width\n    },\n    className: classes.itogo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"\\u0418\\u0442\\u043E\\u0433\\u043E:\"), \" \".concat(allPrice, \" \\u0441\\u043E\\u043C\")), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (paymentMethod.length > 0 && address.length > 0) {\n                action =\n                /*#__PURE__*/\n                function () {\n                  var _ref2 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee() {\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return addOrders({\n                              info: coment,\n                              paymentMethod: paymentMethod,\n                              address: address\n                            });\n\n                          case 2:\n                            Router.push('/orders');\n                            showMiniDialog(false);\n\n                          case 4:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function action() {\n                    return _ref2.apply(this, arguments);\n                  };\n                }();\n\n                setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                  action: action,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 99\n                  },\n                  __self: this\n                }));\n              } else showSnackBar('Заполните все поля');\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    })),\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"\\u041A\\u0443\\u043F\\u0438\\u0442\\u044C\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: function onClick() {\n      showMiniDialog(false);\n    },\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\")));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    mini_dialog: state.mini_dialog,\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    userActions: bindActionCreators(userActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nBuyBasket.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(BuyBasket));","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\dialog\\BuyBasket.js"],"names":["React","useState","PropTypes","withStyles","connect","bindActionCreators","addOrders","mini_dialogActions","snackbarActions","userActions","FormLabel","FormControl","FormGroup","FormControlLabel","Button","Input","dialogContentStyle","Checkbox","InputLabel","MenuItem","Select","Router","Confirmation","BuyBasket","memo","props","isMobileApp","app","client","allPrice","showMiniDialog","setMiniDialog","showSnackBar","classes","width","window","innerWidth","address","setAddress","coment","setComent","handleComent","event","target","value","paymentMethod","setPaymentMethod","paymentMethods","handlePaymentMethod","main","map","element","idx","e","checked","push","splice","indexOf","inputM","inputD","itogo","length","action","info","button","mapStateToProps","state","mini_dialog","user","mapDispatchToProps","dispatch","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { addOrders } from '../../src/gql/order'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport * as userActions from '../../redux/actions/user'\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Input from '@material-ui/core/Input';\r\nimport dialogContentStyle from '../../src/styleMUI/dialogContent'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Router from 'next/router'\r\nimport Confirmation from './Confirmation'\r\n\r\nconst BuyBasket =  React.memo(\r\n    (props) =>{\r\n        const { isMobileApp } = props.app;\r\n        const { client, allPrice } = props;\r\n        const { showMiniDialog, setMiniDialog } = props.mini_dialogActions;\r\n        const { showSnackBar } = props.snackbarActions;\r\n        const { classes } = props;\r\n        const width = isMobileApp? (window.innerWidth-126) : 500\r\n        let [address, setAddress] = useState([]);\r\n        let [coment, setComent] = useState('');\r\n        let handleComent =  (event) => {\r\n            setComent(event.target.value)\r\n        };\r\n        let [paymentMethod, setPaymentMethod] = useState('');\r\n        let paymentMethods = [\r\n            'Наличные'\r\n        ]\r\n        let handlePaymentMethod =  (event) => {\r\n            setPaymentMethod(event.target.value)\r\n        };\r\n        return (\r\n            <div className={classes.main}>\r\n                <FormControl component='fieldset' style={{width: width}}>\r\n                    <FormLabel component='legend'>Адреса доставки:</FormLabel>\r\n                    <FormGroup>\r\n                        {\r\n                            client.address.map((element, idx) => (\r\n                                <FormControlLabel\r\n                                    key={idx}\r\n                                    onChange={(e)=>{\r\n                                        if(e.target.checked)\r\n                                            address.push(element)\r\n                                        else {\r\n                                            address.splice(address.indexOf(element), 1)\r\n                                        }\r\n                                        setAddress([...address])\r\n                                    }}\r\n                                    control={<Checkbox value={idx} />}\r\n                                    label={element}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </FormGroup>\r\n                </FormControl>\r\n                <br/>\r\n                <Input\r\n                    style={{width: width}}\r\n                    placeholder='Коментарий'\r\n                    value={coment}\r\n                    className={isMobileApp?classes.inputM:classes.inputD}\r\n                    onChange={handleComent}\r\n                    inputProps={{\r\n                        'aria-label': 'description',\r\n                    }}\r\n                />\r\n                <br/>\r\n                <FormControl style={{width: width}} className={isMobileApp?classes.inputM:classes.inputD}>\r\n                    <InputLabel>Способ оплаты</InputLabel>\r\n                    <Select value={paymentMethod} onChange={handlePaymentMethod}>\r\n                        {paymentMethods.map((element)=>\r\n                            <MenuItem key={element} value={element} >{element}</MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </FormControl>\r\n                <br/>\r\n                <div style={{width: width}} className={classes.itogo}><b>Итого:</b>{` ${allPrice} сом`}</div>\r\n                <br/>\r\n                <div>\r\n                    <Button variant='contained' color='primary' onClick={async()=>{\r\n                        if(paymentMethod.length>0&&address.length>0){\r\n                            const action = async() => {\r\n                                await addOrders({info: coment, paymentMethod: paymentMethod, address: address})\r\n                                Router.push('/orders')\r\n                                showMiniDialog(false);\r\n                            }\r\n                            setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                        } else\r\n                            showSnackBar('Заполните все поля')\r\n                    }} className={classes.button}>\r\n                        Купить\r\n                    </Button>\r\n                    <Button variant='contained' color='secondary' onClick={()=>{showMiniDialog(false);}} className={classes.button}>\r\n                        Закрыть\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        userActions: bindActionCreators(userActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nBuyBasket.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(BuyBasket));"]},"metadata":{},"sourceType":"module"}