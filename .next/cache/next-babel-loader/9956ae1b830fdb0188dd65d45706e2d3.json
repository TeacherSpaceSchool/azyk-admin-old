{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\components\\\\employment\\\\CardEmployment.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport cardEmploymentStyle from '../../src/styleMUI/employment/cardEmployment.js';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport Button from '@material-ui/core/Button';\nimport CardActions from '@material-ui/core/CardActions';\nimport dynamic from 'next/dynamic';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport { onoffEmployment, deleteEmployment } from '../../src/gql/employment';\nconst Confirmation = dynamic(() => import('../../components/dialog/Confirmation'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/dialog/Confirmation')],\n    modules: ['../../components/dialog/Confirmation']\n  }\n});\nconst CardEmployment = React.memo(props => {\n  const classes = cardEmploymentStyle();\n  const {\n    element,\n    setList\n  } = props;\n  const {\n    isMobileApp\n  } = props.app;\n  const {\n    profile\n  } = props.user;\n  const {\n    setMiniDialog,\n    showMiniDialog\n  } = props.mini_dialogActions;\n  let {\n    0: status,\n    1: setStatus\n  } = useState(element !== undefined ? element.user.status : '');\n  return __jsx(Card, {\n    className: isMobileApp ? classes.cardM : classes.cardD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/employment/[id]\",\n    as: `/employment/${element.user._id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"\\u0418\\u043C\\u044F:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, element.name)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, element.user.phone)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, element.organization.name)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"\\u0420\\u043E\\u043B\\u044C:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, element.user.role))))), (profile.role === 'admin' || profile.role === 'организация') && profile._id !== element.user._id ? __jsx(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: async () => {\n      const action = async () => {\n        await onoffEmployment([element._id]);\n        setStatus(status === 'active' ? 'deactive' : 'active');\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, status === 'active' ? 'Отключить' : 'Включить'), __jsx(Button, {\n    onClick: async () => {\n      const action = async () => {\n        const list = (await deleteEmployment([element._id])).employments;\n        setList(list);\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")) : null);\n});\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardEmployment);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\employment\\CardEmployment.js"],"names":["React","useState","Card","CardActionArea","CardContent","cardEmploymentStyle","connect","Link","Button","CardActions","dynamic","bindActionCreators","mini_dialogActions","onoffEmployment","deleteEmployment","Confirmation","CardEmployment","memo","props","classes","element","setList","isMobileApp","app","profile","user","setMiniDialog","showMiniDialog","status","setStatus","undefined","cardM","cardD","_id","row","nameField","value","name","phone","organization","role","action","list","employments","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport cardEmploymentStyle from '../../src/styleMUI/employment/cardEmployment.js'\r\nimport { connect } from 'react-redux'\r\nimport Link from 'next/link';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport dynamic from 'next/dynamic'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport { onoffEmployment, deleteEmployment  } from '../../src/gql/employment'\r\n\r\nconst Confirmation = dynamic(\r\n    () => import('../../components/dialog/Confirmation')\r\n)\r\n\r\nconst CardEmployment = React.memo((props) => {\r\n    const classes = cardEmploymentStyle();\r\n    const { element, setList } = props;\r\n    const { isMobileApp } = props.app;\r\n    const { profile } = props.user;\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    let [status, setStatus] = useState(element!==undefined?element.user.status:'');\r\n    return (\r\n        <Card className={isMobileApp?classes.cardM:classes.cardD}>\r\n            <CardActionArea>\r\n                <Link href='/employment/[id]' as={`/employment/${element.user._id}`}>\r\n                    <CardContent>\r\n                            <div className={classes.row}>\r\n                                <div className={classes.nameField}>\r\n                                    Имя:&nbsp;\r\n                                </div>\r\n                                <div className={classes.value}>\r\n                                    {element.name}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.row}>\r\n                                <div className={classes.nameField}>\r\n                                    Телефон:&nbsp;\r\n                                </div>\r\n                                <div className={classes.value}>\r\n                                    {element.user.phone}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.row}>\r\n                                <div className={classes.nameField}>\r\n                                    Организация:&nbsp;\r\n                                </div>\r\n                                <div className={classes.value}>\r\n                                    {element.organization.name}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.row}>\r\n                                <div className={classes.nameField}>\r\n                                    Роль:&nbsp;\r\n                                </div>\r\n                                <div className={classes.value}>\r\n                                    {element.user.role}\r\n                                </div>\r\n                            </div>\r\n                    </CardContent>\r\n                </Link>\r\n            </CardActionArea>\r\n            {\r\n                (profile.role === 'admin' || profile.role === 'организация') && profile._id!==element.user._id ?\r\n                    <CardActions>\r\n                        <Button onClick={async()=>{\r\n                            const action = async() => {\r\n                                await onoffEmployment([element._id])\r\n                                setStatus(status==='active'?'deactive':'active')\r\n                            }\r\n                            setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                            showMiniDialog(true)\r\n                        }} size='small' color='primary'>\r\n                            {status==='active'?'Отключить':'Включить'}\r\n                        </Button>\r\n                        <Button onClick={async()=>{\r\n                            const action = async() => {\r\n                                const list = (await deleteEmployment([element._id])).employments\r\n                                setList(list)\r\n                            }\r\n                            setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                            showMiniDialog(true)\r\n                        }} size='small' color='primary'>\r\n                            Удалить\r\n                        </Button>\r\n                    </CardActions>\r\n                    :\r\n                    null\r\n            }\r\n        </Card>\r\n    );\r\n})\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardEmployment)"]},"metadata":{},"sourceType":"module"}