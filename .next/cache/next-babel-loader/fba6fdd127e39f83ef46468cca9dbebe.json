{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nvar MyDialog = React.memo(function (props) {\n  var _props$snackbar = props.snackbar,\n      title = _props$snackbar.title,\n      show = _props$snackbar.show;\n  var closeSnackBar = props.snackbarActions.closeSnackBar;\n  return __jsx(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    open: show,\n    autoHideDuration: 6000,\n    onClose: closeSnackBar,\n    ContentProps: {\n      'aria-describedby': 'message-id'\n    },\n    message: __jsx(\"span\", {\n      id: \"message-id\"\n    }, title),\n    action: [__jsx(Button, {\n      key: \"undo\",\n      color: \"secondary\",\n      size: \"small\",\n      onClick: closeSnackBar\n    }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\")]\n  });\n});\n\nfunction mapStateToProps(state) {\n  return {\n    snackbar: state.snackbar\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyDialog);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\app\\SnackBar.js"],"names":["React","connect","bindActionCreators","Snackbar","Button","snackbarActions","MyDialog","memo","props","snackbar","title","show","closeSnackBar","vertical","horizontal","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,KAAKC,eAAZ,MAAiC,8BAAjC;AAEA,IAAMC,QAAQ,GAAIN,KAAK,CAACO,IAAN,CACd,UAACC,KAAD,EAAU;AAAA,wBACkBA,KAAK,CAACC,QADxB;AAAA,MACEC,KADF,mBACEA,KADF;AAAA,MACSC,IADT,mBACSA,IADT;AAAA,MAEEC,aAFF,GAEoBJ,KAAK,CAACH,eAF1B,CAEEO,aAFF;AAGN,SACI,MAAC,QAAD;AACI,IAAA,YAAY,EAAE;AACVC,MAAAA,QAAQ,EAAE,QADA;AAEVC,MAAAA,UAAU,EAAE;AAFF,KADlB;AAKI,IAAA,IAAI,EAAEH,IALV;AAMI,IAAA,gBAAgB,EAAE,IANtB;AAOI,IAAA,OAAO,EAAEC,aAPb;AAQI,IAAA,YAAY,EAAE;AACV,0BAAoB;AADV,KARlB;AAWI,IAAA,OAAO,EAAE;AAAM,MAAA,EAAE,EAAC;AAAT,OAAuBF,KAAvB,CAXb;AAYI,IAAA,MAAM,EAAE,CACJ,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAC,WAAzB;AAAqC,MAAA,IAAI,EAAC,OAA1C;AAAkD,MAAA,OAAO,EAAEE;AAA3D,oDADI;AAZZ,IADJ;AAoBH,CAxBa,CAAlB;;AA2BA,SAASG,eAAT,CAA0BC,KAA1B,EAAiC;AAC7B,SAAO;AACHP,IAAAA,QAAQ,EAAEO,KAAK,CAACP;AADb,GAAP;AAGH;;AAED,SAASQ,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHb,IAAAA,eAAe,EAAEH,kBAAkB,CAACG,eAAD,EAAkBa,QAAlB;AADhC,GAAP;AAGH;;AAED,eAAejB,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\n\r\nconst MyDialog =  React.memo(\r\n    (props) =>{\r\n        const { title, show } = props.snackbar;\r\n        const { closeSnackBar } = props.snackbarActions;\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={show}\r\n                autoHideDuration={6000}\r\n                onClose={closeSnackBar}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                message={<span id=\"message-id\">{title}</span>}\r\n                action={[\r\n                    <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={closeSnackBar}>\r\n                        Закрыть\r\n                    </Button>\r\n                ]}\r\n            />\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        snackbar: state.snackbar\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyDialog)"]},"metadata":{},"sourceType":"module"}