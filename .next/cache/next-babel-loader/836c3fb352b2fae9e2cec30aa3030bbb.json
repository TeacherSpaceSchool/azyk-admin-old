{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState } from 'react';\nimport App from '../layouts/App';\nimport { connect } from 'react-redux';\nimport { getContact, setContact } from '../src/gql/contact';\nimport contactStyle from '../src/styleMUI/contact';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { useRouter } from 'next/router';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../redux/actions/mini_dialog';\nimport dynamic from 'next/dynamic';\nimport Add from '@material-ui/icons/Add';\nimport Remove from '@material-ui/icons/Remove';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nvar Confirmation = dynamic(function () {\n  return import('../components/dialog/Confirmation');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../components/dialog/Confirmation')];\n    },\n    modules: ['../components/dialog/Confirmation']\n  }\n});\nvar AddSocial = dynamic(function () {\n  return import('../components/dialog/AddSocial');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../components/dialog/AddSocial')];\n    },\n    modules: ['../components/dialog/AddSocial']\n  }\n});\nvar Contact = React.memo(function (props) {\n  var classes = contactStyle();\n  var data = props.data;\n  var isMobileApp = props.app.isMobileApp;\n\n  var _useState = useState(data.contact.name),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(data.contact.address),\n      address = _useState2[0],\n      setAddress = _useState2[1];\n\n  var _useState3 = useState(''),\n      newAddress = _useState3[0],\n      setNewAddress = _useState3[1];\n\n  var addAddress = function addAddress() {\n    address = [].concat(_toConsumableArray(address), [newAddress]);\n    setAddress(address);\n    setNewAddress('');\n  };\n\n  var editAddress = function editAddress(event, idx) {\n    address[idx] = event.target.value;\n    setAddress(_toConsumableArray(address));\n  };\n\n  var deleteAddress = function deleteAddress(idx) {\n    address.splice(idx, 1);\n    setAddress(_toConsumableArray(address));\n  };\n\n  var _useState4 = useState(data.contact.email),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      newEmail = _useState5[0],\n      setNewEmail = _useState5[1];\n\n  var addEmail = function addEmail() {\n    email = [].concat(_toConsumableArray(email), [newEmail]);\n    setEmail(email);\n    setNewEmail('');\n  };\n\n  var editEmail = function editEmail(event, idx) {\n    email[idx] = event.target.value;\n    setEmail(_toConsumableArray(email));\n  };\n\n  var deleteEmail = function deleteEmail(idx) {\n    email.splice(idx, 1);\n    setEmail(_toConsumableArray(email));\n  };\n\n  var _useState6 = useState(data.contact.phone),\n      phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  var _useState7 = useState(''),\n      newPhone = _useState7[0],\n      setNewPhone = _useState7[1];\n\n  var addPhone = function addPhone() {\n    phone = [].concat(_toConsumableArray(phone), [newPhone]);\n    setPhone(phone);\n    setNewPhone('');\n  };\n\n  var editPhone = function editPhone(event, idx) {\n    phone[idx] = event.target.value;\n    setPhone(_toConsumableArray(phone));\n  };\n\n  var deletePhone = function deletePhone(idx) {\n    phone.splice(idx, 1);\n    setPhone(_toConsumableArray(phone));\n  };\n\n  var _useState8 = useState(data.contact.social),\n      social = _useState8[0],\n      setSocial = _useState8[1];\n\n  var addSocial = function addSocial(value, idx) {\n    social[idx] = value;\n    setSocial(_toConsumableArray(social));\n  };\n\n  var _useState9 = useState(data.contact.info),\n      info = _useState9[0],\n      setInfo = _useState9[1];\n\n  var _useState10 = useState(data.contact.image === '' ? '/static/add.png' : data.contact.image),\n      preview = _useState10[0],\n      setPreview = _useState10[1];\n\n  var _useState11 = useState(undefined),\n      image = _useState11[0],\n      setImage = _useState11[1];\n\n  var handleChangeImage = function handleChangeImage(event) {\n    setImage(event.target.files[0]);\n    setPreview(URL.createObjectURL(event.target.files[0]));\n  };\n\n  var profile = props.user.profile;\n  var _props$mini_dialogAct = props.mini_dialogActions,\n      setMiniDialog = _props$mini_dialogAct.setMiniDialog,\n      showMiniDialog = _props$mini_dialogAct.showMiniDialog;\n  return __jsx(App, {\n    filters: data.filterSubCategory,\n    sorts: data.sortSubCategory,\n    pageName: \"\\u041A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u044B\"\n  }, __jsx(Head, null, __jsx(\"title\", null, name)), __jsx(Card, {\n    className: classes.page\n  }, __jsx(CardActions, null, __jsx(CardContent, {\n    className: isMobileApp ? classes.column : classes.row\n  }, profile.role === 'admin' ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.column\n  }, __jsx(\"label\", {\n    htmlFor: \"contained-button-file\"\n  }, __jsx(LazyLoadImage, {\n    effect: \"blur\",\n    className: classes.media,\n    src: preview,\n    alt: 'Добавить'\n  })), \"\\u041D\\u0430\\u0448\\u0438 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B\", __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(LazyLoadImage, {\n    effect: \"blur\",\n    src: \"/static/instagram.svg\",\n    onClick: function onClick() {\n      setMiniDialog('Instagram', __jsx(AddSocial, {\n        action: addSocial,\n        idx: 0\n      }));\n      showMiniDialog(true);\n    },\n    className: classes.mediaSocial\n  }), __jsx(LazyLoadImage, {\n    effect: \"blur\",\n    src: \"/static/facebook.svg\",\n    onClick: function onClick() {\n      setMiniDialog('Facebook', __jsx(AddSocial, {\n        action: addSocial,\n        idx: 0\n      }));\n      showMiniDialog(true);\n    },\n    className: classes.mediaSocial\n  }), __jsx(LazyLoadImage, {\n    effect: \"blur\",\n    src: \"/static/twitter.svg\",\n    onClick: function onClick() {\n      setMiniDialog('Twitter', __jsx(AddSocial, {\n        action: addSocial,\n        idx: 0\n      }));\n      showMiniDialog(true);\n    },\n    className: classes.mediaSocial\n  }), __jsx(LazyLoadImage, {\n    effect: \"blur\",\n    src: \"/static/telegram.svg\",\n    onClick: function onClick() {\n      setMiniDialog('Telegram', __jsx(AddSocial, {\n        action: addSocial,\n        idx: 0\n      }));\n      showMiniDialog(true);\n    },\n    className: classes.mediaSocial\n  }))), __jsx(\"div\", null, __jsx(TextField, {\n    label: \"\\u0418\\u043C\\u044F\",\n    value: name,\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    onChange: function onChange(event) {\n      setName(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    }\n  }), __jsx(FormControl, {\n    className: isMobileApp ? classes.inputM : classes.inputD\n  }, __jsx(InputLabel, null, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0430\\u0434\\u0440\\u0435\\u0441\"), __jsx(Input, {\n    value: newAddress,\n    onChange: function onChange(event) {\n      setNewAddress(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      onClick: function onClick() {\n        addAddress();\n      },\n      \"aria-label\": \"toggle password visibility\"\n    }, __jsx(Add, null)))\n  })), address.map(function (element, idx) {\n    return __jsx(FormControl, {\n      key: idx,\n      className: isMobileApp ? classes.inputM : classes.inputD\n    }, __jsx(InputLabel, null, \"\\u0410\\u0434\\u0440\\u0435\\u0441\"), __jsx(Input, {\n      placeholder: \"\\u0410\\u0434\\u0440\\u0435\\u0441\",\n      value: element,\n      onChange: function onChange(event) {\n        editAddress(event, idx);\n      },\n      inputProps: {\n        'aria-label': 'description'\n      },\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\"\n      }, __jsx(IconButton, {\n        onClick: function onClick() {\n          deleteAddress(idx);\n        },\n        \"aria-label\": \"toggle password visibility\"\n      }, __jsx(Remove, null)))\n    }));\n  }), __jsx(FormControl, {\n    className: isMobileApp ? classes.inputM : classes.inputD\n  }, __jsx(InputLabel, null, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C email\"), __jsx(Input, {\n    value: newEmail,\n    onChange: function onChange(event) {\n      setNewEmail(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      onClick: function onClick() {\n        addEmail();\n      },\n      \"aria-label\": \"toggle password visibility\"\n    }, __jsx(Add, null)))\n  })), email.map(function (element, idx) {\n    return __jsx(FormControl, {\n      key: idx,\n      className: isMobileApp ? classes.inputM : classes.inputD\n    }, __jsx(InputLabel, null, \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"), __jsx(Input, {\n      value: element,\n      onChange: function onChange(event) {\n        editEmail(event, idx);\n      },\n      inputProps: {\n        'aria-label': 'description'\n      },\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\"\n      }, __jsx(IconButton, {\n        onClick: function onClick() {\n          deleteEmail(idx);\n        },\n        \"aria-label\": \"toggle password visibility\"\n      }, __jsx(Remove, null)))\n    }));\n  }), __jsx(FormControl, {\n    className: isMobileApp ? classes.inputM : classes.inputD\n  }, __jsx(InputLabel, null, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\"), __jsx(Input, {\n    value: newPhone,\n    onChange: function onChange(event) {\n      setNewPhone(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      onClick: function onClick() {\n        addPhone();\n      },\n      \"aria-label\": \"toggle password visibility\"\n    }, __jsx(Add, null)))\n  })), phone.map(function (element, idx) {\n    return __jsx(FormControl, {\n      key: idx,\n      className: isMobileApp ? classes.inputM : classes.inputD\n    }, __jsx(InputLabel, null, \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"), __jsx(Input, {\n      value: element,\n      onChange: function onChange(event) {\n        editPhone(event, idx);\n      },\n      inputProps: {\n        'aria-label': 'description'\n      },\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\"\n      }, __jsx(IconButton, {\n        onClick: function onClick() {\n          deletePhone(idx);\n        },\n        \"aria-label\": \"toggle password visibility\"\n      }, __jsx(Remove, null)))\n    }));\n  }), __jsx(TextField, {\n    multiline: true,\n    label: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\",\n    value: info,\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    onChange: function onChange(event) {\n      setInfo(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    }\n  }), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var editElement, action;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              editElement = {\n                name: name,\n                address: address,\n                email: email,\n                phone: phone,\n                social: social,\n                info: info\n              };\n              if (image !== undefined) editElement.image = image;\n\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return setContact(editElement);\n\n                        case 2:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function action() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action\n              }));\n              showMiniDialog(true);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })),\n    size: \"small\",\n    color: \"primary\"\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\")))) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.column\n  }, __jsx(LazyLoadImage, {\n    effect: \"blur\",\n    className: classes.media,\n    src: preview,\n    alt: name\n  }), social[0].length > 0 || social[1].length > 0 || social[2].length > 0 || social[3].length > 0 ? __jsx(React.Fragment, null, \"\\u041D\\u0430\\u0448\\u0438 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B\", __jsx(\"div\", {\n    className: classes.row\n  }, social[0].length > 0 ? __jsx(\"a\", {\n    href: social[0]\n  }, __jsx(LazyLoadImage, {\n    effect: \"blur\",\n    src: \"/static/instagram.svg\",\n    className: classes.mediaSocial\n  })) : null, social[1].length > 0 ? __jsx(\"a\", {\n    href: social[1]\n  }, __jsx(LazyLoadImage, {\n    effect: \"blur\",\n    src: \"/static/facebook.svg\",\n    className: classes.mediaSocial\n  })) : null, social[2].length > 0 ? __jsx(\"a\", {\n    href: social[2]\n  }, __jsx(LazyLoadImage, {\n    effect: \"blur\",\n    src: \"/static/twitter.svg\",\n    className: classes.mediaSocial\n  })) : null, social[3].length > 0 ? __jsx(\"a\", {\n    href: social[3]\n  }, __jsx(LazyLoadImage, {\n    effect: \"blur\",\n    src: \"/static/telegram.svg\",\n    className: classes.mediaSocial\n  })) : null)) : null), __jsx(\"div\", null, __jsx(\"div\", {\n    className: classes.name\n  }, name), __jsx(\"br\", null), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"\\u0410\\u0434\\u0440\\u0435\\u0441:\\xA0\"), __jsx(\"div\", {\n    className: classes.column\n  }, address.map(function (element, idx) {\n    return __jsx(\"div\", {\n      key: idx,\n      className: classes.value\n    }, element);\n  }))), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D:\\xA0\"), __jsx(\"div\", {\n    className: classes.column\n  }, phone.map(function (element, idx) {\n    return __jsx(\"a\", {\n      href: \"tel:\".concat(element),\n      key: idx,\n      className: classes.value\n    }, element);\n  }))), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"E-mail:\\xA0\"), __jsx(\"div\", {\n    className: classes.column\n  }, email.map(function (element, idx) {\n    return __jsx(\"a\", {\n      href: \"mailto:\".concat(element),\n      key: idx,\n      className: classes.value\n    }, element);\n  }))), __jsx(\"br\", null), __jsx(\"div\", {\n    className: classes.info\n  }, info)))))), __jsx(\"input\", {\n    accept: \"image/*\",\n    style: {\n      display: 'none'\n    },\n    id: \"contained-button-file\",\n    type: \"file\",\n    onChange: handleChangeImage\n  }));\n});\nContact.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee3() {\n  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.t0 = _objectSpread;\n          _context3.t1 = {};\n          _context3.next = 4;\n          return getContact();\n\n        case 4:\n          _context3.t2 = _context3.sent;\n          _context3.t3 = (0, _context3.t0)(_context3.t1, _context3.t2);\n          return _context3.abrupt(\"return\", {\n            data: _context3.t3\n          });\n\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _callee3);\n}));\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);","map":null,"metadata":{},"sourceType":"module"}