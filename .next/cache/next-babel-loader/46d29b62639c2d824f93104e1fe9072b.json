{"ast":null,"code":"var __jsx = React.createElement;\nimport Link from 'next/link';\nimport React, { useState, useEffect } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport LocalGroceryStore from '@material-ui/icons/LocalGroceryStore';\nimport Star from '@material-ui/icons/Star';\nimport ExitToApp from '@material-ui/icons/ExitToApp';\nimport AssignmentInd from '@material-ui/icons/AssignmentInd';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as userActions from '../../redux/actions/user';\nimport * as appActions from '../../redux/actions/app';\nimport appbarStyle from '../../src/styleMUI/appbar';\nimport { getCountBasket } from '../../src/gql/basket';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Paper from '@material-ui/core/Paper';\nimport Cancel from '@material-ui/icons/Cancel';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Search from '@material-ui/icons/SearchRounded';\nimport Sort from '@material-ui/icons/SortRounded';\nimport FilterList from '@material-ui/icons/FilterListRounded';\nimport DateRange from '@material-ui/icons/DateRange';\nimport PermIdentity from '@material-ui/icons/PermIdentity';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport Badge from '@material-ui/core/Badge';\nimport Sign from '../dialog/Sign';\nimport Confirmation from '../dialog/Confirmation';\nimport SetDate from '../dialog/SetDate';\nconst MyAppBar = React.memo(props => {\n  //props\n  const classes = appbarStyle();\n  const {\n    filters,\n    sorts,\n    pageName,\n    dates\n  } = props;\n  const {\n    drawer,\n    search,\n    filter,\n    sort,\n    isMobileApp,\n    countBasket,\n    date\n  } = props.app;\n  const {\n    showDrawer,\n    setSearch,\n    setFilter,\n    setSort,\n    setDate\n  } = props.appActions;\n  const {\n    authenticated,\n    profile\n  } = props.user;\n  const {\n    setMiniDialog,\n    showMiniDialog\n  } = props.mini_dialogActions;\n  const {\n    logout\n  } = props.userActions; //state\n\n  const [anchorElMobileMenu, setAnchorElMobileMenu] = React.useState(null);\n  const openMobileMenu = Boolean(anchorElMobileMenu);\n\n  let handleMobileMenu = event => {\n    setAnchorElMobileMenu(event.currentTarget);\n  };\n\n  let handleCloseMobileMenu = () => {\n    setAnchorElMobileMenu(null);\n  };\n\n  const {\n    0: anchorElSort,\n    1: setAnchorElSort\n  } = useState(null);\n  const openSort = Boolean(anchorElSort);\n\n  let handleMenuSort = event => {\n    setAnchorElSort(event.currentTarget);\n  };\n\n  let handleCloseSort = () => {\n    setAnchorElSort(null);\n  };\n\n  const {\n    0: anchorElProfile,\n    1: setAnchorElProfile\n  } = useState(null);\n  const openProfile = Boolean(anchorElProfile);\n\n  let handleMenuProfile = event => {\n    setAnchorElProfile(event.currentTarget);\n  };\n\n  let handleCloseProfile = () => {\n    setAnchorElProfile(null);\n  };\n\n  const {\n    0: anchorElFilter,\n    1: setAnchorElFilter\n  } = useState(null);\n  const openFilter = Boolean(anchorElFilter);\n\n  let handleMenuFilter = event => {\n    setAnchorElFilter(event.currentTarget);\n  };\n\n  let handleCloseFilter = () => {\n    setAnchorElFilter(null);\n  };\n\n  const {\n    0: anchorElDate,\n    1: setAnchorElDate\n  } = useState(null);\n  const openDate = Boolean(anchorElDate);\n\n  let handleMenuDate = event => {\n    setAnchorElDate(event.currentTarget);\n  };\n\n  let handleCloseDate = () => {\n    setAnchorElDate(null);\n  };\n\n  const {\n    0: openSearch,\n    1: setOpenSearch\n  } = useState(false);\n\n  let handleSearch = event => {\n    setSearch(event.target.value);\n  };\n\n  useEffect(() => {\n    (async () => {\n      getCountBasket();\n    })();\n  }, []);\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(AppBar, {\n    position: \"fixed\",\n    className: \"appBar\"\n  }, __jsx(Toolbar, null, __jsx(IconButton, {\n    edge: \"start\",\n    \"aria-owns\": \"menu-appbar\",\n    \"aria-haspopup\": \"true\",\n    onClick: () => {\n      showDrawer(!drawer);\n    },\n    color: \"inherit\"\n  }, __jsx(MenuIcon, null)), __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title\n  }, pageName), isMobileApp ? openSearch ? __jsx(Paper, {\n    className: classes.searchM\n  }, __jsx(Input, {\n    className: classes.searchField,\n    id: \"adornment-password\",\n    type: 'login',\n    value: search,\n    onChange: handleSearch,\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      \"aria-label\": \"Search\",\n      onClick: () => {\n        setSearch('');\n        setOpenSearch(false);\n      }\n    }, __jsx(Cancel, null)))\n  })) : __jsx(React.Fragment, null, __jsx(IconButton, {\n    \"aria-owns\": openMobileMenu ? 'menu-appbar' : undefined,\n    \"aria-haspopup\": \"true\",\n    onClick: handleMobileMenu,\n    color: \"inherit\"\n  }, __jsx(Search, null)), __jsx(Menu, {\n    id: \"menu-appbar\",\n    anchorEl: anchorElMobileMenu,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'right'\n    },\n    transformOrigin: {\n      vertical: 'bottom',\n      horizontal: 'right'\n    },\n    open: openMobileMenu,\n    onClose: handleCloseMobileMenu\n  }, __jsx(MenuItem, {\n    onClick: () => {\n      setOpenSearch(true);\n      handleCloseMobileMenu();\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      color: '#606060'\n    }\n  }, __jsx(Search, null), \"\\xA0\\u041F\\u043E\\u0438\\u0441\\u043A\")), filters && filters.length > 0 ? [__jsx(MenuItem, {\n    onClick: handleMenuFilter\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      color: '#606060'\n    }\n  }, __jsx(FilterList, null), \"\\xA0\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440\")), __jsx(Menu, {\n    key: \"filter\",\n    id: \"menu-appbar\",\n    anchorEl: anchorElFilter,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: openFilter,\n    onClose: handleCloseFilter\n  }, filters.map((elem, idx) => __jsx(MenuItem, {\n    key: 'filter' + idx,\n    style: {\n      background: filter === elem.value ? 'rgba(51, 143, 255, 0.29)' : '#fff'\n    },\n    onClick: () => {\n      setFilter(elem.value);\n      handleCloseFilter();\n    }\n  }, elem.name)))] : null, dates ? [__jsx(MenuItem, {\n    onClick: handleMenuDate\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      color: '#606060'\n    }\n  }, __jsx(DateRange, null), \"\\xA0\\u0414\\u0430\\u0442\\u0430\")), __jsx(Menu, {\n    key: \"Date\",\n    id: \"menu-appbar\",\n    anchorEl: anchorElDate,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: openDate,\n    onClose: handleCloseDate\n  }, __jsx(MenuItem, {\n    style: {\n      background: date !== '' ? 'rgba(51, 143, 255, 0.29)' : '#fff'\n    },\n    onClick: () => {\n      setMiniDialog('Дата', __jsx(SetDate, null));\n      showMiniDialog(true);\n      handleCloseDate();\n      handleCloseMobileMenu();\n    }\n  }, \"\\u041F\\u043E \\u0434\\u0430\\u0442\\u0435\"), __jsx(MenuItem, {\n    style: {\n      background: date === '' ? 'rgba(51, 143, 255, 0.29)' : '#fff'\n    },\n    onClick: () => {\n      setDate('');\n      handleCloseDate();\n    }\n  }, \"\\u0412\\u0441\\u0435\"))] : null, sorts && sorts.length > 0 ? [__jsx(MenuItem, {\n    onClick: handleMenuSort\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      color: '#606060'\n    }\n  }, __jsx(Sort, null), \"\\xA0\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\")), __jsx(Menu, {\n    key: \"sort\",\n    id: \"menu-appbar\",\n    anchorEl: anchorElSort,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'left'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'left'\n    },\n    open: openSort,\n    onClose: handleCloseSort\n  }, sorts.map((elem, idx) => __jsx(MenuItem, {\n    key: 'sort' + idx,\n    onClick: () => {\n      sort === `-${elem.field}` ? setSort(elem.field) : setSort(`-${elem.field}`);\n      /*handleCloseSort();handleCloseMobileMenu()*/\n    }\n  }, sort === `-${elem.field}` ? __jsx(ArrowDownward, null) : sort === elem.field ? __jsx(ArrowUpward, null) : __jsx(\"div\", {\n    style: {\n      width: '24px'\n    }\n  }), elem.name)))] : null), __jsx(Tooltip, {\n    title: \"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\"\n  }, __jsx(IconButton, {\n    \"aria-owns\": \"menu-appbar\",\n    \"aria-haspopup\": \"true\",\n    color: \"inherit\",\n    onClick: handleMenuProfile\n  }, __jsx(Badge, {\n    badgeContent: countBasket,\n    color: \"secondary\"\n  }, __jsx(PermIdentity, null)))), __jsx(Menu, {\n    id: \"menu-appbar\",\n    anchorEl: anchorElProfile,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: openProfile,\n    onClose: handleCloseProfile\n  }, !authenticated || profile.role === 'client' ? [__jsx(MenuItem, null, __jsx(Badge, {\n    badgeContent: countBasket,\n    color: \"secondary\"\n  }, __jsx(Link, {\n    href: \"/basket\"\n  }, __jsx(\"a\", {\n    style: {\n      display: 'flex',\n      color: '#606060'\n    }\n  }, __jsx(LocalGroceryStore, null), \"\\xA0\\u041A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0430\\xA0\\xA0\")))), __jsx(MenuItem, null, __jsx(Link, {\n    href: \"/favorite\"\n  }, __jsx(\"a\", {\n    style: {\n      display: 'flex',\n      color: '#606060'\n    }\n  }, __jsx(Star, null), \"\\xA0\\u0418\\u0437\\u0431\\u0440\\u0430\\u043D\\u043D\\u043E\\u0435\")))] : null, authenticated && profile.role !== 'admin' ? __jsx(MenuItem, null, __jsx(Link, {\n    href: `/${profile.role === 'client' ? 'client' : 'employment'}/[id]`,\n    as: `/${profile.role === 'client' ? 'client' : 'employment'}/${profile._id}`\n  }, __jsx(\"a\", {\n    style: {\n      display: 'flex',\n      color: '#606060'\n    }\n  }, __jsx(AssignmentInd, null), \"\\xA0\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\"))) : null, authenticated ? __jsx(MenuItem, {\n    onClick: () => {\n      handleCloseProfile();\n\n      const action = async () => {\n        logout(true);\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action\n      }));\n      showMiniDialog(true);\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      color: '#606060'\n    }\n  }, __jsx(ExitToApp, null), \"\\xA0\\u0412\\u044B\\u0439\\u0442\\u0438\")) : __jsx(MenuItem, {\n    onClick: () => {\n      handleCloseProfile();\n      setMiniDialog('Вход', __jsx(Sign, {\n        isMobileApp: isMobileApp\n      }));\n      showMiniDialog(true);\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      color: '#606060'\n    }\n  }, __jsx(ExitToApp, null), \"\\xA0\\u0412\\u043E\\u0439\\u0442\\u0438\")))) : openSearch ? __jsx(Paper, {\n    className: classes.searchD\n  }, __jsx(Input, {\n    className: classes.searchField,\n    id: \"adornment-password\",\n    type: 'login',\n    value: search,\n    onChange: handleSearch,\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      \"aria-label\": \"Search\",\n      onClick: () => {\n        setSearch('');\n        setOpenSearch(false);\n      }\n    }, __jsx(Cancel, null)))\n  })) : __jsx(React.Fragment, null, dates ? __jsx(React.Fragment, null, __jsx(Tooltip, {\n    title: \"\\u0414\\u0430\\u0442\\u0430\"\n  }, __jsx(IconButton, {\n    \"aria-owns\": openDate ? 'menu-appbar' : undefined,\n    \"aria-haspopup\": \"true\",\n    onClick: handleMenuDate,\n    color: \"inherit\"\n  }, __jsx(DateRange, null))), __jsx(Menu, {\n    key: \"Date\",\n    id: \"menu-appbar\",\n    anchorEl: anchorElDate,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: openDate,\n    onClose: handleCloseDate\n  }, __jsx(MenuItem, {\n    style: {\n      background: date !== '' ? 'rgba(51, 143, 255, 0.29)' : '#fff'\n    },\n    onClick: () => {\n      setMiniDialog('Дата', __jsx(SetDate, null));\n      showMiniDialog(true);\n      handleCloseDate();\n    }\n  }, \"\\u041F\\u043E \\u0434\\u0430\\u0442\\u0435\"), __jsx(MenuItem, {\n    style: {\n      background: date === '' ? 'rgba(51, 143, 255, 0.29)' : '#fff'\n    },\n    onClick: () => {\n      setDate('');\n      handleCloseDate();\n    }\n  }, \"\\u0412\\u0441\\u0435\")), \"\\xA0\") : null, filters && filters.length > 0 ? __jsx(React.Fragment, null, __jsx(Tooltip, {\n    title: \"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440\"\n  }, __jsx(IconButton, {\n    \"aria-owns\": openFilter ? 'menu-appbar' : undefined,\n    \"aria-haspopup\": \"true\",\n    onClick: handleMenuFilter,\n    color: \"inherit\"\n  }, __jsx(FilterList, null))), __jsx(Menu, {\n    id: \"menu-appbar\",\n    key: \"filter\",\n    anchorEl: anchorElFilter,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: openFilter,\n    onClose: handleCloseFilter\n  }, filters.map((elem, idx) => __jsx(MenuItem, {\n    key: 'filter' + idx,\n    style: {\n      background: filter === elem.value ? 'rgba(51, 143, 255, 0.29)' : '#fff'\n    },\n    onClick: () => {\n      setFilter(elem.value);\n      handleCloseFilter();\n    }\n  }, elem.name))), \"\\xA0\") : null, sorts && sorts.length > 0 ? __jsx(React.Fragment, null, __jsx(Tooltip, {\n    title: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\"\n  }, __jsx(IconButton, {\n    \"aria-owns\": openSort ? 'menu-appbar' : undefined,\n    \"aria-haspopup\": \"true\",\n    onClick: handleMenuSort,\n    color: \"inherit\"\n  }, __jsx(Sort, null))), __jsx(Menu, {\n    id: \"menu-appbar\",\n    anchorEl: anchorElSort,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: openSort,\n    onClose: handleCloseSort,\n    key: \"sort\"\n  }, sorts.map((elem, idx) => __jsx(MenuItem, {\n    key: 'sort' + idx,\n    onClick: () => {\n      sort === `-${elem.field}` ? setSort(elem.field) : setSort(`-${elem.field}`);\n      handleCloseSort();\n    }\n  }, sort === `-${elem.field}` ? __jsx(ArrowDownward, null) : sort === elem.field ? __jsx(ArrowUpward, null) : __jsx(\"div\", {\n    style: {\n      width: '24px'\n    }\n  }), elem.name))), \"\\xA0\") : null, __jsx(Tooltip, {\n    title: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n  }, __jsx(IconButton, {\n    \"aria-owns\": openSearch ? 'menu-appbar' : undefined,\n    \"aria-haspopup\": \"true\",\n    onClick: () => {\n      setOpenSearch(true);\n    },\n    color: \"inherit\"\n  }, __jsx(Search, null))), __jsx(Tooltip, {\n    title: \"\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\"\n  }, __jsx(IconButton, {\n    \"aria-owns\": \"menu-appbar\",\n    \"aria-haspopup\": \"true\",\n    color: \"inherit\",\n    onClick: handleMenuProfile\n  }, __jsx(Badge, {\n    badgeContent: countBasket,\n    color: \"secondary\"\n  }, __jsx(PermIdentity, null)))), __jsx(Menu, {\n    id: \"menu-appbar\",\n    anchorEl: anchorElProfile,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: openProfile,\n    onClose: handleCloseProfile\n  }, !authenticated || profile.role === 'client' ? [__jsx(MenuItem, null, __jsx(Badge, {\n    badgeContent: countBasket,\n    color: \"secondary\"\n  }, __jsx(Link, {\n    href: \"/basket\"\n  }, __jsx(\"a\", {\n    style: {\n      display: 'flex',\n      color: '#606060'\n    }\n  }, __jsx(LocalGroceryStore, null), \"\\xA0\\u041A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0430\\xA0\\xA0\")))), __jsx(MenuItem, null, __jsx(Link, {\n    href: \"/favorite\"\n  }, __jsx(\"a\", {\n    style: {\n      display: 'flex',\n      color: '#606060'\n    }\n  }, __jsx(Star, null), \"\\xA0\\u0418\\u0437\\u0431\\u0440\\u0430\\u043D\\u043D\\u043E\\u0435\")))] : null, authenticated && profile.role !== 'admin' ? __jsx(MenuItem, null, __jsx(Link, {\n    href: `/${profile.role === 'client' ? 'client' : 'employment'}/[id]`,\n    as: `/${profile.role === 'client' ? 'client' : 'employment'}/${profile._id}`\n  }, __jsx(\"a\", {\n    style: {\n      display: 'flex',\n      color: '#606060'\n    }\n  }, __jsx(AssignmentInd, null), \"\\xA0\\u041F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\"))) : null, authenticated ? __jsx(MenuItem, {\n    onClick: () => {\n      handleCloseProfile();\n\n      const action = async () => {\n        logout(true);\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action\n      }));\n      showMiniDialog(true);\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      color: '#606060'\n    }\n  }, __jsx(ExitToApp, null), \"\\xA0\\u0412\\u044B\\u0439\\u0442\\u0438\")) : __jsx(MenuItem, {\n    onClick: () => {\n      handleCloseProfile();\n      setMiniDialog('Вход', __jsx(Sign, {\n        isMobileApp: isMobileApp\n      }));\n      showMiniDialog(true);\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      color: '#606060'\n    }\n  }, __jsx(ExitToApp, null), \"\\xA0\\u0412\\u043E\\u0439\\u0442\\u0438\")))))));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    appActions: bindActionCreators(appActions, dispatch),\n    userActions: bindActionCreators(userActions, dispatch),\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyAppBar);","map":null,"metadata":{},"sourceType":"module"}