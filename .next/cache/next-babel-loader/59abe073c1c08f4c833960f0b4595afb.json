{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState } from 'react';\nimport App from '../../layouts/App';\nimport { connect } from 'react-redux';\nimport { getOrganization } from '../../src/gql/organization';\nimport organizationStyle from '../../src/styleMUI/organization/organization';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { useRouter } from 'next/router';\nimport Router from 'next/router';\nimport Input from '@material-ui/core/Input';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport dynamic from 'next/dynamic';\nimport { onoffOrganization, addOrganization, setOrganization, deleteOrganization } from '../../src/gql/organization';\nimport { getEmployment } from '../../src/gql/employment';\nimport Add from '@material-ui/icons/Done';\nimport Remove from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nvar Confirmation = dynamic(function () {\n  return import('../../components/dialog/Confirmation');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../../components/dialog/Confirmation')];\n    },\n    modules: ['../../components/dialog/Confirmation']\n  }\n});\nvar Organization = React.memo(function (props) {\n  var classes = organizationStyle();\n  var data = props.data;\n  var isMobileApp = props.app.isMobileApp;\n  var router = useRouter();\n  var showSnackBar = props.snackbarActions.showSnackBar;\n\n  var _useState = useState(data.organization !== null ? data.organization.status : ''),\n      statusO = _useState[0],\n      setStatusO = _useState[1];\n\n  var _useState2 = useState(data.organization !== null ? data.organization.name : ''),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(data.organization !== null ? data.organization.address : []),\n      address = _useState3[0],\n      setAddress = _useState3[1];\n\n  var _useState4 = useState(''),\n      newAddress = _useState4[0],\n      setNewAddress = _useState4[1];\n\n  var addAddress = function addAddress() {\n    address = [].concat(_toConsumableArray(address), [newAddress]);\n    setAddress(address);\n    setNewAddress('');\n  };\n\n  var editAddress = function editAddress(event, idx) {\n    address[idx] = event.target.value;\n    setAddress(_toConsumableArray(address));\n  };\n\n  var deleteAddress = function deleteAddress(idx) {\n    address.splice(idx, 1);\n    setAddress(_toConsumableArray(address));\n  };\n\n  var _useState5 = useState(data.organization !== null ? data.organization.email : []),\n      email = _useState5[0],\n      setEmail = _useState5[1];\n\n  var _useState6 = useState(''),\n      newEmail = _useState6[0],\n      setNewEmail = _useState6[1];\n\n  var addEmail = function addEmail() {\n    email = [].concat(_toConsumableArray(email), [newEmail]);\n    setEmail(email);\n    setNewEmail('');\n  };\n\n  var editEmail = function editEmail(event, idx) {\n    email[idx] = event.target.value;\n    setEmail(_toConsumableArray(email));\n  };\n\n  var deleteEmail = function deleteEmail(idx) {\n    email.splice(idx, 1);\n    setEmail(_toConsumableArray(email));\n  };\n\n  var _useState7 = useState(data.organization !== null ? data.organization.phone : []),\n      phone = _useState7[0],\n      setPhone = _useState7[1];\n\n  var _useState8 = useState(''),\n      newPhone = _useState8[0],\n      setNewPhone = _useState8[1];\n\n  var addPhone = function addPhone() {\n    phone = [].concat(_toConsumableArray(phone), [newPhone]);\n    setPhone(phone);\n    setNewPhone('');\n  };\n\n  var editPhone = function editPhone(event, idx) {\n    phone[idx] = event.target.value;\n    setPhone(_toConsumableArray(phone));\n  };\n\n  var deletePhone = function deletePhone(idx) {\n    phone.splice(idx, 1);\n    setPhone(_toConsumableArray(phone));\n  };\n\n  var _useState9 = useState(data.organization !== null ? data.organization.info : ''),\n      info = _useState9[0],\n      setInfo = _useState9[1];\n\n  var _useState10 = useState(data.organization !== null ? data.organization.image : ''),\n      preview = _useState10[0],\n      setPreview = _useState10[1];\n\n  var _useState11 = useState(undefined),\n      image = _useState11[0],\n      setImage = _useState11[1];\n\n  var handleChangeImage = function handleChangeImage(event) {\n    setImage(event.target.files[0]);\n    setPreview(URL.createObjectURL(event.target.files[0]));\n  };\n\n  var profile = props.user.profile;\n  var _props$mini_dialogAct = props.mini_dialogActions,\n      setMiniDialog = _props$mini_dialogAct.setMiniDialog,\n      showMiniDialog = _props$mini_dialogAct.showMiniDialog;\n  return __jsx(App, {\n    filters: data.filterSubCategory,\n    sorts: data.sortSubCategory,\n    pageName: data.organization !== null ? router.query.id === 'new' ? 'Добавить' : data.organization.name : 'Ничего не найдено'\n  }, __jsx(Head, null, __jsx(\"title\", null, data.organization !== null ? router.query.id === 'new' ? 'Добавить' : data.organization.name : 'Ничего не найдено')), __jsx(Card, {\n    className: classes.page\n  }, __jsx(CardActions, {\n    className: isMobileApp ? classes.column : classes.row,\n    style: isMobileApp ? {} : {\n      justifyContent: 'start',\n      alignItems: 'flex-start'\n    }\n  }, data.organization !== null ? profile.role === 'admin' || profile.role === 'организация' && data.employment.organization._id === data.organization._id ? __jsx(React.Fragment, null, __jsx(\"label\", {\n    htmlFor: \"contained-button-file\"\n  }, __jsx(LazyLoadImage, {\n    effect: \"blur\",\n    className: classes.media,\n    src: preview,\n    alt: 'Добавить'\n  })), __jsx(\"div\", null, __jsx(TextField, {\n    label: \"\\u0418\\u043C\\u044F\",\n    value: name,\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    onChange: function onChange(event) {\n      setName(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    }\n  }), __jsx(FormControl, {\n    className: isMobileApp ? classes.inputM : classes.inputD\n  }, __jsx(InputLabel, null, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0430\\u0434\\u0440\\u0435\\u0441\"), __jsx(Input, {\n    placeholder: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0430\\u0434\\u0440\\u0435\\u0441\",\n    value: newAddress,\n    onChange: function onChange(event) {\n      setNewAddress(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      onClick: function onClick() {\n        addAddress();\n      },\n      \"aria-label\": \"toggle password visibility\"\n    }, __jsx(Add, null)))\n  })), address.map(function (element, idx) {\n    return __jsx(FormControl, {\n      key: idx,\n      className: isMobileApp ? classes.inputM : classes.inputD\n    }, __jsx(InputLabel, null, \"\\u0410\\u0434\\u0440\\u0435\\u0441\", idx + 1), __jsx(Input, {\n      placeholder: \"\\u0410\\u0434\\u0440\\u0435\\u0441\",\n      value: element,\n      onChange: function onChange(event) {\n        editAddress(event, idx);\n      },\n      inputProps: {\n        'aria-label': 'description'\n      },\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\"\n      }, __jsx(IconButton, {\n        onClick: function onClick() {\n          deleteAddress(idx);\n        },\n        \"aria-label\": \"toggle password visibility\"\n      }, __jsx(Remove, null)))\n    }));\n  }), __jsx(FormControl, {\n    className: isMobileApp ? classes.inputM : classes.inputD\n  }, __jsx(InputLabel, null, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C email\"), __jsx(Input, {\n    placeholder: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C email\",\n    value: newEmail,\n    onChange: function onChange(event) {\n      setNewEmail(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      onClick: function onClick() {\n        addEmail();\n      },\n      \"aria-label\": \"toggle password visibility\"\n    }, __jsx(Add, null)))\n  })), email.map(function (element, idx) {\n    return __jsx(FormControl, {\n      key: idx,\n      className: isMobileApp ? classes.inputM : classes.inputD\n    }, __jsx(InputLabel, null, \"Email\", idx + 1), __jsx(Input, {\n      value: element,\n      onChange: function onChange(event) {\n        editEmail(event, idx);\n      },\n      inputProps: {\n        'aria-label': 'description'\n      },\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\"\n      }, __jsx(IconButton, {\n        onClick: function onClick() {\n          deleteEmail(idx);\n        },\n        \"aria-label\": \"toggle password visibility\"\n      }, __jsx(Remove, null)))\n    }));\n  }), __jsx(FormControl, {\n    className: isMobileApp ? classes.inputM : classes.inputD\n  }, __jsx(InputLabel, null, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\"), __jsx(Input, {\n    placeholder: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\",\n    value: newPhone,\n    onChange: function onChange(event) {\n      setNewPhone(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      onClick: function onClick() {\n        addPhone();\n      },\n      \"aria-label\": \"toggle password visibility\"\n    }, __jsx(Add, null)))\n  })), phone.map(function (element, idx) {\n    return __jsx(FormControl, {\n      key: idx,\n      className: isMobileApp ? classes.inputM : classes.inputD\n    }, __jsx(InputLabel, null, \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\", idx + 1), __jsx(Input, {\n      value: element,\n      onChange: function onChange(event) {\n        editPhone(event, idx);\n      },\n      inputProps: {\n        'aria-label': 'description'\n      },\n      endAdornment: __jsx(InputAdornment, {\n        position: \"end\"\n      }, __jsx(IconButton, {\n        onClick: function onClick() {\n          deletePhone(idx);\n        },\n        \"aria-label\": \"toggle password visibility\"\n      }, __jsx(Remove, null)))\n    }));\n  }), __jsx(TextField, {\n    multiline: true,\n    label: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\",\n    value: info,\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    onChange: function onChange(event) {\n      setInfo(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    }\n  }), __jsx(\"div\", {\n    className: classes.row\n  }, router.query.id === 'new' ? __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (image !== undefined && name.length > 0 && email.length > 0 && address.length > 0 && phone.length > 0 && info.length > 0) {\n                action =\n                /*#__PURE__*/\n                function () {\n                  var _ref2 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee() {\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return addOrganization({\n                              image: image,\n                              name: name,\n                              address: address,\n                              email: email,\n                              phone: phone,\n                              info: info\n                            });\n\n                          case 2:\n                            Router.push('/organizations');\n\n                          case 3:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function action() {\n                    return _ref2.apply(this, arguments);\n                  };\n                }();\n\n                setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                  action: action\n                }));\n                showMiniDialog(true);\n              } else {\n                showSnackBar('Заполните все поля');\n              }\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })),\n    size: \"small\",\n    color: \"primary\"\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\") : __jsx(React.Fragment, null, __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var editElement, action;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              editElement = {\n                _id: data.organization._id\n              };\n              if (image !== undefined) editElement.image = image;\n              if (name.length > 0 && name !== data.organization.name) editElement.name = name;\n              if (address.length > 0 && address !== data.organization.address) editElement.address = address;\n              if (email.length > 0 && email !== data.organization.email) editElement.email = email;\n              if (phone.length > 0 && phone !== data.organization.phone) editElement.phone = phone;\n              if (info.length > 0 && info !== data.organization.info) editElement.info = info;\n\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref4 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee3() {\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.next = 2;\n                          return setOrganization(editElement);\n\n                        case 2:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function action() {\n                  return _ref4.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action\n              }));\n              showMiniDialog(true);\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    })),\n    size: \"small\",\n    color: \"primary\"\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), profile.role === 'admin' ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref6 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee5() {\n                  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          _context5.next = 2;\n                          return onoffOrganization([data.organization._id]);\n\n                        case 2:\n                          setStatusO(statusO === 'active' ? 'deactive' : 'active');\n\n                        case 3:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5);\n                }));\n\n                return function action() {\n                  return _ref6.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action\n              }));\n              showMiniDialog(true);\n\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    })),\n    size: \"small\",\n    color: \"primary\"\n  }, statusO === 'active' ? 'Отключить' : 'Включить'), __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee8() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref8 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee7() {\n                  return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          _context7.next = 2;\n                          return deleteOrganization([data.organization._id]);\n\n                        case 2:\n                          Router.push('/organizations');\n\n                        case 3:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _callee7);\n                }));\n\n                return function action() {\n                  return _ref8.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action\n              }));\n              showMiniDialog(true);\n\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    })),\n    size: \"small\",\n    color: \"primary\"\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")) : null)))) : router.query.id === 'new' ? 'Ничего не найдено' : __jsx(React.Fragment, null, __jsx(LazyLoadImage, {\n    effect: \"blur\",\n    className: classes.media,\n    src: preview,\n    alt: name\n  }), __jsx(\"div\", null, __jsx(\"div\", {\n    className: classes.name\n  }, name), __jsx(\"br\", null), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"\\u0410\\u0434\\u0440\\u0435\\u0441:\\xA0\"), __jsx(\"div\", {\n    className: classes.column\n  }, address.map(function (element, idx) {\n    return __jsx(\"div\", {\n      key: idx,\n      className: classes.value\n    }, element);\n  }))), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D:\\xA0\"), __jsx(\"div\", {\n    className: classes.column\n  }, phone.map(function (element, idx) {\n    return __jsx(\"a\", {\n      href: \"tel:\".concat(element),\n      key: idx,\n      className: classes.value\n    }, element);\n  }))), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"E-mail:\\xA0\"), __jsx(\"div\", {\n    className: classes.column\n  }, email.map(function (element, idx) {\n    return __jsx(\"a\", {\n      href: \"mailto:\".concat(element),\n      key: idx,\n      className: classes.value\n    }, element);\n  }))), __jsx(\"br\", null), __jsx(\"div\", {\n    className: classes.info\n  }, info))) : 'Ничего не найдено')), __jsx(\"input\", {\n    accept: \"image/*\",\n    style: {\n      display: 'none'\n    },\n    id: \"contained-button-file\",\n    type: \"file\",\n    onChange: handleChangeImage\n  }));\n});\n\nOrganization.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref9 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee9(ctx) {\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.t0 = _objectSpread;\n            _context9.t1 = {};\n\n            if (!(ctx.store.getState().user.authenticated && ['организация', 'менеджер'].includes(ctx.store.getState().user.profile.role))) {\n              _context9.next = 8;\n              break;\n            }\n\n            _context9.next = 5;\n            return getEmployment({\n              _id: ctx.store.getState().user.profile._id\n            });\n\n          case 5:\n            _context9.t2 = _context9.sent;\n            _context9.next = 9;\n            break;\n\n          case 8:\n            _context9.t2 = {};\n\n          case 9:\n            _context9.t3 = _context9.t2;\n\n            if (!(ctx.query.id !== 'new')) {\n              _context9.next = 16;\n              break;\n            }\n\n            _context9.next = 13;\n            return getOrganization({\n              _id: ctx.query.id\n            });\n\n          case 13:\n            _context9.t4 = _context9.sent;\n            _context9.next = 17;\n            break;\n\n          case 16:\n            _context9.t4 = {\n              organization: {\n                name: '',\n                image: '/static/add.png',\n                address: [],\n                email: [],\n                phone: [],\n                info: ''\n              }\n            };\n\n          case 17:\n            _context9.t5 = _context9.t4;\n            _context9.t6 = (0, _context9.t0)(_context9.t1, _context9.t3, _context9.t5);\n            return _context9.abrupt(\"return\", {\n              data: _context9.t6\n            });\n\n          case 20:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function (_x) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Organization);","map":null,"metadata":{},"sourceType":"module"}