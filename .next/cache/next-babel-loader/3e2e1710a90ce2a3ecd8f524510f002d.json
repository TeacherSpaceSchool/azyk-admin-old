{"ast":null,"code":"import { SingletonApolloClient } from '../singleton/client';\nexport const readDataGQL = async (variables, query) => {\n  const client = new SingletonApolloClient().getClient();\n\n  try {\n    console.log({\n      variables: variables,\n      query: query\n    });\n    let res = await client.query({\n      variables: variables,\n      query: query\n    });\n    console.log(res.data);\n    /*client.writeQuery({\r\n        variables: variables,\r\n        query: query,\r\n        data: res.data,\r\n    });*/\n\n    return res.data;\n  } catch (err) {\n    let res = client.readQuery({\n      variables: variables,\n      query: query\n    });\n    console.log(res);\n  }\n};","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\src\\gql\\index.js"],"names":["SingletonApolloClient","readDataGQL","variables","query","client","getClient","console","log","res","data","err","readQuery"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,qBAAtC;AAEA,OAAO,MAAMC,WAAW,GAAG,OAAMC,SAAN,EAAiBC,KAAjB,KAAyB;AAChD,QAAMC,MAAM,GAAG,IAAIJ,qBAAJ,GAA4BK,SAA5B,EAAf;;AACA,MAAG;AACCC,IAAAA,OAAO,CAACC,GAAR,CAAY;AACRL,MAAAA,SAAS,EAAEA,SADH;AAERC,MAAAA,KAAK,EAAEA;AAFC,KAAZ;AAIA,QAAIK,GAAG,GAAG,MAAMJ,MAAM,CACjBD,KADW,CACL;AACHD,MAAAA,SAAS,EAAEA,SADR;AAEHC,MAAAA,KAAK,EAAEA;AAFJ,KADK,CAAhB;AAKAG,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACC,IAAhB;AACA;;;;;;AAKA,WAAOD,GAAG,CAACC,IAAX;AACH,GAjBD,CAiBE,OAAMC,GAAN,EAAU;AACR,QAAIF,GAAG,GAAGJ,MAAM,CAACO,SAAP,CAAiB;AACvBT,MAAAA,SAAS,EAAEA,SADY;AAEvBC,MAAAA,KAAK,EAAEA;AAFgB,KAAjB,CAAV;AAIAG,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACH;AACJ,CA1BM","sourcesContent":["import { SingletonApolloClient } from '../singleton/client';\r\n\r\nexport const readDataGQL = async(variables, query)=>{\r\n    const client = new SingletonApolloClient().getClient()\r\n    try{\r\n        console.log({\r\n            variables: variables,\r\n            query: query\r\n        })\r\n        let res = await client\r\n            .query({\r\n                variables: variables,\r\n                query: query\r\n            })\r\n        console.log(res.data)\r\n        /*client.writeQuery({\r\n            variables: variables,\r\n            query: query,\r\n            data: res.data,\r\n        });*/\r\n        return res.data\r\n    } catch(err){\r\n        let res = client.readQuery({\r\n            variables: variables,\r\n            query: query,\r\n        });\r\n        console.log(res)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}