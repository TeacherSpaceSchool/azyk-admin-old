{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\components\\\\category\\\\CardCategory.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport cardCategoryStyle from '../../src/styleMUI/category/cardCategory';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport CardActions from '@material-ui/core/CardActions';\nimport { onoffCategory, addCategory, setCategory, deleteCategory } from '../../src/gql/category';\nimport TextField from '@material-ui/core/TextField';\nimport Link from 'next/link';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport Confirmation from '../dialog/Confirmation';\nconst CardCategory = React.memo(props => {\n  const classes = cardCategoryStyle();\n  const {\n    element,\n    setList\n  } = props;\n  const {\n    profile\n  } = props.user;\n  const {\n    isMobileApp\n  } = props.app; //addCard\n\n  let {\n    0: preview,\n    1: setPreview\n  } = useState(element ? element.image : '/static/add.png');\n  let {\n    0: image,\n    1: setImage\n  } = useState(undefined);\n\n  let handleChangeImage = event => {\n    console.log(event.target.files[0].size / 1024 / 1024);\n\n    if (event.target.files[0].size / 1024 / 1024 < 20) {\n      setImage(event.target.files[0]);\n      setPreview(URL.createObjectURL(event.target.files[0]));\n    } else {\n      showSnackBar('Файл слишком большой');\n    }\n  };\n\n  let {\n    0: name,\n    1: setName\n  } = useState(element ? element.name : '');\n\n  let handleName = event => {\n    setName(event.target.value);\n  };\n\n  const {\n    setMiniDialog,\n    showMiniDialog\n  } = props.mini_dialogActions;\n  const {\n    showSnackBar\n  } = props.snackbarActions;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, name !== 'Не задано' && setList !== 'all' && profile.role === 'admin' ? __jsx(Card, {\n    className: isMobileApp ? classes.cardM : classes.cardD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.line,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: element ? element._id : 'add',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: classes.media,\n    src: preview,\n    alt: 'Изменить',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), __jsx(TextField, {\n    label: \"\\u0418\\u043C\\u044F\",\n    value: name,\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    onChange: handleName,\n    inputProps: {\n      'aria-label': 'description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })))), __jsx(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, element !== undefined ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: async () => {\n      let editElement = {\n        _id: element._id\n      };\n      if (name.length > 0 && name !== element.name) editElement.name = name;\n      if (image !== undefined) editElement.image = image;\n\n      const action = async () => {\n        setList((await setCategory(editElement)).categorys);\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), __jsx(Button, {\n    onClick: async () => {\n      const action = async () => {\n        setList((await onoffCategory([element._id])).categorys);\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, element.status === 'active' ? 'Отключить' : 'Включить'), __jsx(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: () => {\n      const action = async () => {\n        setList((await deleteCategory([element._id])).categorys);\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }));\n      showMiniDialog(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"), __jsx(Link, {\n    href: \"/subcategory/[id]\",\n    as: `/subcategory/${element._id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438\"))) : __jsx(Button, {\n    onClick: async () => {\n      if (image !== undefined && name.length > 0) {\n        setImage(undefined);\n        setPreview('/static/add.png');\n        setName('');\n\n        const action = async () => {\n          setList((await addCategory({\n            image: image,\n            name: name\n          })).categorys);\n        };\n\n        setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n          action: action,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }));\n        showMiniDialog(true);\n      } else showSnackBar('Заполните все поля');\n    },\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\")), __jsx(\"input\", {\n    accept: \"image/*\",\n    style: {\n      display: 'none'\n    },\n    id: element ? element._id : 'add',\n    type: \"file\",\n    onChange: handleChangeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })) : name !== 'Не задано' ? __jsx(Card, {\n    className: isMobileApp ? classes.cardM : classes.cardD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, __jsx(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, __jsx(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/subcategory/[id]\",\n    as: `/subcategory/${element._id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.line,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"contained-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: classes.media,\n    src: element.image,\n    alt: element.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })), __jsx(\"h3\", {\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, element.name)))))) : name === 'Не задано' && profile.role === 'admin' ? __jsx(Card, {\n    className: isMobileApp ? classes.cardM : classes.cardD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, __jsx(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, __jsx(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/subcategory/[id]\",\n    as: `/subcategory/${element._id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.line,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    htmlFor: \"contained-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    className: classes.media,\n    src: '/static/add.png',\n    alt: element.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  })), __jsx(\"h3\", {\n    className: isMobileApp ? classes.inputM : classes.inputD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, element.name)))))) : null);\n});\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardCategory);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\category\\CardCategory.js"],"names":["React","useState","Card","CardActionArea","CardContent","cardCategoryStyle","connect","Button","CardActions","onoffCategory","addCategory","setCategory","deleteCategory","TextField","Link","bindActionCreators","mini_dialogActions","snackbarActions","Confirmation","CardCategory","memo","props","classes","element","setList","profile","user","isMobileApp","app","preview","setPreview","image","setImage","undefined","handleChangeImage","event","console","log","target","files","size","URL","createObjectURL","showSnackBar","name","setName","handleName","value","setMiniDialog","showMiniDialog","role","cardM","cardD","line","_id","media","inputM","inputD","editElement","length","action","categorys","status","display","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport cardCategoryStyle from '../../src/styleMUI/category/cardCategory'\r\nimport { connect } from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { onoffCategory, addCategory, setCategory, deleteCategory } from '../../src/gql/category'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from 'next/link';\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport Confirmation from '../dialog/Confirmation'\r\n\r\n\r\nconst CardCategory = React.memo((props) => {\r\n    const classes = cardCategoryStyle();\r\n    const { element, setList } = props;\r\n    const { profile } = props.user;\r\n    const { isMobileApp } = props.app;\r\n    //addCard\r\n    let [preview, setPreview] = useState(element?element.image:'/static/add.png');\r\n    let [image, setImage] = useState(undefined);\r\n    let handleChangeImage = ((event) => {\r\n        console.log(event.target.files[0].size/1024/1024)\r\n        if(event.target.files[0].size/1024/1024<20){\r\n            setImage(event.target.files[0])\r\n            setPreview(URL.createObjectURL(event.target.files[0]))\r\n        } else {\r\n            showSnackBar('Файл слишком большой')\r\n        }\r\n    })\r\n    let [name, setName] = useState(element?element.name:'');\r\n    let handleName =  (event) => {\r\n        setName(event.target.value)\r\n    };\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    const { showSnackBar } = props.snackbarActions;\r\n    return (\r\n        <div>\r\n            {\r\n                name!=='Не задано'&&setList!=='all'&&profile.role === 'admin' ?\r\n                    <Card className={isMobileApp?classes.cardM:classes.cardD}>\r\n                        <CardActionArea>\r\n                        <CardContent>\r\n                            <div className={classes.line}>\r\n                                <label htmlFor={element?element._id:'add'}>\r\n                                    <img\r\n                                        className={classes.media}\r\n                                        src={preview}\r\n                                        alt={'Изменить'}\r\n                                    />\r\n                                </label>\r\n                               <TextField\r\n                                   label='Имя'\r\n                                   value={name}\r\n                                   className={isMobileApp?classes.inputM:classes.inputD}\r\n                                   onChange={handleName}\r\n                                   inputProps={{\r\n                                       'aria-label': 'description',\r\n                                   }}\r\n                               />\r\n                            </div>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                        <CardActions>\r\n                            {\r\n                                element!==undefined?\r\n                                <>\r\n                                <Button onClick={async()=>{\r\n                                        let editElement = {_id: element._id}\r\n                                        if(name.length>0&&name!==element.name)editElement.name = name\r\n                                        if(image!==undefined)editElement.image = image\r\n                                        const action = async() => {\r\n                                            setList((await setCategory(editElement)).categorys)\r\n                                        }\r\n                                        setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                        showMiniDialog(true)\r\n                                    }} size='small' color='primary'>\r\n                                        Сохранить\r\n                                    </Button>\r\n                                    <Button onClick={async()=>{\r\n                                        const action = async() => {\r\n                                            setList((await onoffCategory([element._id])).categorys)\r\n                                        }\r\n                                        setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                        showMiniDialog(true)\r\n                                    }} size='small' color='primary'>\r\n                                        {element.status==='active'?'Отключить':'Включить'}\r\n                                    </Button>\r\n                                    <Button size='small' color='primary' onClick={()=>{\r\n                                        const action = async() => {\r\n                                            setList((await deleteCategory([element._id])).categorys)\r\n                                        }\r\n                                        setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                        showMiniDialog(true)\r\n                                    }}>\r\n                                        Удалить\r\n                                    </Button>\r\n                            <Link href='/subcategory/[id]' as={`/subcategory/${element._id}`}>\r\n                                <Button size='small' color='primary'>\r\n                                    Перейти\r\n                                </Button>\r\n                            </Link>\r\n                        </>:\r\n                        <Button onClick={async()=> {\r\n                            if (image !== undefined && name.length > 0) {\r\n                                setImage(undefined)\r\n                                setPreview('/static/add.png')\r\n                                setName('')\r\n                                const action = async() => {\r\n                                    setList((await addCategory({image: image, name: name})).categorys)\r\n                                }\r\n                                setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                showMiniDialog(true)\r\n                            } else\r\n                                showSnackBar('Заполните все поля')\r\n\r\n                        }\r\n                        } size='small' color='primary'>\r\n                            Добавить\r\n                        </Button>}\r\n                        </CardActions>\r\n                        <input\r\n                            accept='image/*'\r\n                            style={{ display: 'none' }}\r\n                            id={element?element._id:'add'}\r\n                            type='file'\r\n                            onChange={handleChangeImage}\r\n                        />\r\n                    </Card>\r\n\r\n                    :\r\n                    name!=='Не задано'?\r\n                        <Card className={isMobileApp?classes.cardM:classes.cardD}>\r\n                            <CardActionArea>\r\n                            <CardContent>\r\n                                <Link href='/subcategory/[id]' as={`/subcategory/${element._id}`}>\r\n                                    <div className={classes.line}>\r\n                                        <label htmlFor='contained-button-file'>\r\n                                            <img\r\n                                                className={classes.media}\r\n                                                src={element.image}\r\n                                                alt={element.name}\r\n                                            />\r\n                                        </label>\r\n                                        <h3 className={isMobileApp?classes.inputM:classes.inputD}>\r\n                                            {element.name}\r\n                                        </h3>\r\n                                    </div>\r\n                                </Link>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                        </Card>\r\n                        :\r\n                        name==='Не задано'&&profile.role === 'admin'?\r\n                            <Card className={isMobileApp?classes.cardM:classes.cardD}>\r\n                                <CardActionArea>\r\n                                <CardContent>\r\n                                    <Link href='/subcategory/[id]' as={`/subcategory/${element._id}`}>\r\n                                        <div className={classes.line}>\r\n                                            <label htmlFor='contained-button-file'>\r\n                                                <img\r\n                                                    className={classes.media}\r\n                                                    src={'/static/add.png'}\r\n                                                    alt={element.name}\r\n                                                />\r\n                                            </label>\r\n                                            <h3 className={isMobileApp?classes.inputM:classes.inputD}>\r\n                                                {element.name}\r\n                                            </h3>\r\n                                        </div>\r\n                                    </Link>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                            </Card>\r\n                            :null\r\n            }\r\n            </div>\r\n    );\r\n})\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardCategory)"]},"metadata":{},"sourceType":"module"}