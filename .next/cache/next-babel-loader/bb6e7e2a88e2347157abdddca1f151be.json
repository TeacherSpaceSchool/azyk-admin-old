{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\pages\\\\routes.js\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState, useEffect } from 'react';\nimport App from '../layouts/App';\nimport CardRoute from '../components/route/CardRoute';\nimport pageListStyle from '../src/styleMUI/route/routeList';\nimport { getRoutes } from '../src/gql/route';\nimport { connect } from 'react-redux';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Link from 'next/link';\nimport Router from 'next/router';\nconst Routes = React.memo(props => {\n  const classes = pageListStyle();\n  const {\n    data\n  } = props;\n  let {\n    0: list,\n    1: setList\n  } = useState(data.routes);\n  const {\n    search,\n    filter,\n    sort\n  } = props.app;\n  const {\n    profile\n  } = props.user;\n  useEffect(() => {\n    (async () => {\n      setList((await getRoutes({\n        search: search,\n        sort: sort,\n        filter: filter\n      })).routes);\n    })();\n  }, [filter, sort, search]);\n  if (!['admin', 'организация', 'менеджер'].includes(profile.role)) Router.push('/');\n  return __jsx(App, {\n    filters: data.filterRoute,\n    sorts: data.sortRoute,\n    pageName: \"\\u041C\\u0430\\u0440\\u0448\\u0440\\u0443\\u0442\\u043D\\u044B\\u0435 \\u043B\\u0438\\u0441\\u0442\\u044B\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"\\u041C\\u0430\\u0440\\u0448\\u0440\\u0443\\u0442\\u043D\\u044B\\u0435 \\u043B\\u0438\\u0441\\u0442\\u044B\")), __jsx(\"div\", {\n    className: classes.page,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, list ? list.map(element => __jsx(CardRoute, {\n    setList: setList,\n    key: element._id,\n    element: element,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })) : null), ['admin', 'организация', 'менеджер'].includes(profile.role) ? __jsx(Link, {\n    href: \"/route/[id]\",\n    as: `/route/new`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: classes.fab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))) : null);\n});\n\nRoutes.getInitialProps = async function () {\n  return {\n    data: await getRoutes({\n      search: '',\n      sort: '-updatedAt',\n      filter: ''\n    })\n  };\n};\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(Routes);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\pages\\routes.js"],"names":["Head","React","useState","useEffect","App","CardRoute","pageListStyle","getRoutes","connect","Fab","AddIcon","Link","Router","Routes","memo","props","classes","data","list","setList","routes","search","filter","sort","app","profile","user","includes","role","push","filterRoute","sortRoute","page","map","element","_id","fab","getInitialProps","mapStateToProps","state"],"mappings":"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","sourcesContent":["import Head from 'next/head';\r\nimport React, { useState, useEffect } from 'react';\r\nimport App from '../layouts/App';\r\nimport CardRoute from '../components/route/CardRoute'\r\nimport pageListStyle from '../src/styleMUI/route/routeList'\r\nimport {getRoutes} from '../src/gql/route'\r\nimport { connect } from 'react-redux'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Link from 'next/link';\r\nimport Router from 'next/router'\r\n\r\nconst Routes = React.memo((props) => {\r\n    const classes = pageListStyle();\r\n    const { data } = props;\r\n    let [list, setList] = useState(data.routes);\r\n    const { search, filter, sort } = props.app;\r\n    const { profile } = props.user;\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            setList((await getRoutes({search: search, sort: sort, filter: filter})).routes)\r\n        })()\r\n    },[filter, sort, search]);\r\n    if(!['admin', 'организация', 'менеджер'].includes(profile.role))Router.push('/')\r\n    return (\r\n        <App filters={data.filterRoute} sorts={data.sortRoute} pageName='Маршрутные листы'>\r\n            <Head>\r\n                <title>Маршрутные листы</title>\r\n            </Head>\r\n            <div className={classes.page}>\r\n                {list?list.map((element)=>\r\n                    <CardRoute setList={setList} key={element._id} element={element}/>\r\n                ):null}\r\n            </div>\r\n            {['admin', 'организация', 'менеджер'].includes(profile.role)?\r\n                <Link href='/route/[id]' as={`/route/new`}>\r\n                    <Fab color='primary' aria-label='add' className={classes.fab}>\r\n                        <AddIcon />\r\n                    </Fab>\r\n                </Link>\r\n                :\r\n                null\r\n            }\r\n        </App>\r\n    )\r\n})\r\n\r\nRoutes.getInitialProps = async function() {\r\n    return {\r\n        data: await getRoutes({search: '', sort: '-updatedAt', filter: ''})\r\n    };\r\n};\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Routes);"]},"metadata":{},"sourceType":"module"}