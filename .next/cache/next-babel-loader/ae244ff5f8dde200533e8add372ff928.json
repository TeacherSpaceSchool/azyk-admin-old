{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as userActions from '../../redux/actions/user';\nimport { validPhone } from '../../redux/constants/other';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport dialogContentStyle from '../../src/styleMUI/dialogContent';\nvar AddSocial = React.memo(function (props) {\n  var classes = props.classes,\n      action = props.action,\n      idx = props.idx,\n      social = props.social;\n\n  var _useState = useState(social ? social : ''),\n      url = _useState[0],\n      setUrl = _useState[1];\n\n  var isMobileApp = props.app.isMobileApp;\n  var showMiniDialog = props.mini_dialogActions.showMiniDialog;\n  var width = isMobileApp ? window.innerWidth - 144 : 500;\n  return __jsx(\"div\", {\n    className: classes.main\n  }, __jsx(TextField, {\n    style: {\n      width: width\n    },\n    id: \"standard-search\",\n    label: \"URL\",\n    type: \"login\",\n    className: classes.textField,\n    margin: \"normal\",\n    value: url,\n    onChange: function onChange(event) {\n      setUrl(event.target.value);\n    }\n  }), __jsx(\"br\", null), __jsx(\"div\", null, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return action(url, idx);\n\n            case 2:\n              showMiniDialog(false);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })),\n    className: classes.button\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: function onClick() {\n      showMiniDialog(false);\n    },\n    className: classes.button\n  }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\")));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    mini_dialog: state.mini_dialog,\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    userActions: bindActionCreators(userActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(AddSocial));","map":null,"metadata":{},"sourceType":"module"}