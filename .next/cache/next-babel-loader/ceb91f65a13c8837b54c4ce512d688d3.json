{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\pages\\\\route\\\\[id].js\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState, useEffect } from 'react';\nimport App from '../../layouts/App';\nimport { connect } from 'react-redux';\nimport { getOrganizations } from '../../src/gql/organization';\nimport { getOrders } from '../../src/gql/order';\nimport { getRoute, setRoute, deleteRoute, addRoute } from '../../src/gql/route';\nimport { getEcspeditors } from '../../src/gql/employment';\nimport routeStyle from '../../src/styleMUI/route/route';\nimport { useRouter } from 'next/router';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CardOrder from '../../components/order/CardOrder';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Router from 'next/router';\nimport { pdDatePicker } from '../../src/lib';\nimport Confirmation from '../../components/dialog/Confirmation';\nimport GeoRoute from '../../components/dialog/GeoRoute';\nimport { urlMain } from '../../redux/constants/other';\nvar Route = React.memo(function (props) {\n  var profile = props.user.profile;\n  var classes = routeStyle();\n  var data = props.data;\n  var router = useRouter();\n  var isMobileApp = props.app.isMobileApp;\n\n  var _useState = useState(data.route ? pdDatePicker(new Date(data.route.dateStart)) : null),\n      dateStart = _useState[0],\n      setDateStart = _useState[1];\n\n  var _useState2 = useState(data.route ? data.route.dateEnd : null),\n      dateEnd = _useState2[0],\n      setDateEnd = _useState2[1];\n\n  var _useState3 = useState(data.route ? data.route.employment : {}),\n      employment = _useState3[0],\n      setEmployment = _useState3[1];\n\n  var handleEmployment = function handleEmployment(event) {\n    setEmployment({\n      _id: event.target.value,\n      name: event.target.name\n    });\n  };\n\n  var _useState4 = useState(router.query.id === 'new' || !data.route ? {} : data.route.employment.organization),\n      organization = _useState4[0],\n      setOrganization = _useState4[1];\n\n  var handleOrganization = function handleOrganization(event) {\n    setOrganization({\n      _id: event.target.value,\n      name: event.target.name\n    });\n  };\n\n  var _useState5 = useState(data.route ? data.route.invoices : []),\n      invoices = _useState5[0],\n      setInvoices = _useState5[1];\n\n  var _useState6 = useState([]),\n      cancelInvoices = _useState6[0],\n      setCancelInvoices = _useState6[1];\n\n  var _useState7 = useState([]),\n      allInvoices = _useState7[0],\n      setAllInvoices = _useState7[1];\n\n  var _useState8 = useState([]),\n      unselectedInvoices = _useState8[0],\n      setUnselectedInvoices = _useState8[1];\n\n  var _useState9 = useState('Все'),\n      selectType = _useState9[0],\n      setSelectType = _useState9[1];\n\n  var _useState10 = useState([]),\n      employments = _useState10[0],\n      setEmployments = _useState10[1];\n\n  var _props$mini_dialogAct = props.mini_dialogActions,\n      setMiniDialog = _props$mini_dialogAct.setMiniDialog,\n      showMiniDialog = _props$mini_dialogAct.showMiniDialog;\n  var showSnackBar = props.snackbarActions.showSnackBar;\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _organization;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (data.route) {\n                if (['организация', 'менеджер'].includes(profile.role) && router.query.id === 'new') {\n                  _organization = data.organizations.filter(function (element) {\n                    return element._id === profile.organization;\n                  });\n                  setOrganization(_organization[0]);\n                }\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, [profile]);\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(data.route && ['организация', 'менеджер', 'admin'].includes(profile.role))) {\n                _context2.next = 7;\n                break;\n              }\n\n              console.log('ok');\n              _context2.t0 = setUnselectedInvoices;\n              _context2.next = 5;\n              return getOrders({\n                search: '',\n                sort: '-updatedAt',\n                filter: 'обработка'\n              });\n\n            case 5:\n              _context2.t1 = _context2.sent.invoices;\n              (0, _context2.t0)(_context2.t1);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }, []);\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!data.route) {\n                _context3.next = 7;\n                break;\n              }\n\n              if (router.query.id === 'new') setEmployment({});\n              _context3.t0 = setEmployments;\n              _context3.next = 5;\n              return getEcspeditors({\n                _id: organization._id\n              });\n\n            case 5:\n              _context3.t1 = _context3.sent.ecspeditors;\n              (0, _context3.t0)(_context3.t1);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  }, [organization]);\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (data.route) {\n                if (selectType == 'Все') setAllInvoices([].concat(_toConsumableArray(invoices), _toConsumableArray(unselectedInvoices)));else if (selectType == 'Свободные') setAllInvoices(_toConsumableArray(unselectedInvoices));else if (selectType == 'Выбраные') setAllInvoices(_toConsumableArray(invoices));\n              }\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  }, [selectType, unselectedInvoices, invoices]);\n  var statusColor = {\n    'создан': 'orange',\n    'выполняется': 'blue',\n    'выполнен': 'green'\n  };\n\n  var getInvoices =\n  /*#__PURE__*/\n  function () {\n    var _ref5 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!data.route) {\n                _context5.next = 12;\n                break;\n              }\n\n              _context5.t0 = setUnselectedInvoices;\n              _context5.next = 4;\n              return getOrders({\n                search: '',\n                sort: '-updatedAt',\n                filter: 'обработка'\n              });\n\n            case 4:\n              _context5.t1 = _context5.sent.invoices;\n              (0, _context5.t0)(_context5.t1);\n              setCancelInvoices([]);\n              _context5.t2 = setInvoices;\n              _context5.next = 10;\n              return getRoute({\n                _id: data.route._id\n              });\n\n            case 10:\n              _context5.t3 = _context5.sent.route.invoices;\n              (0, _context5.t2)(_context5.t3);\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function getInvoices() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var breakGeoRoute = invoices.filter(function (element) {\n    return !element.address[1];\n  }).length > 0;\n  return __jsx(App, {\n    pageName: data.route ? router.query.id === 'new' ? 'Добавить' : data.route.number : 'Ничего не найдено',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, data.route ? router.query.id === 'new' ? 'Добавить' : data.route.number : 'Ничего не найдено'), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"\\u0410\\u0437\\u044B\\u043A \\u2013 \\u044D\\u0442\\u043E \\u043E\\u043D\\u043B\\u0430\\u0439\\u043D \\u043F\\u043B\\u0430\\u0442\\u0444\\u043E\\u0440\\u043C\\u0430 \\u0434\\u043B\\u044F \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432 \\u043E\\u043F\\u0442\\u043E\\u043C, \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u043D\\u043D\\u0430\\u044F \\u0441\\u043F\\u0435\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E \\u0434\\u043B\\u044F \\u043C\\u0430\\u043B\\u043E\\u0433\\u043E \\u0438 \\u0441\\u0440\\u0435\\u0434\\u043D\\u0435\\u0433\\u043E \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\\u0430.  \\u041E\\u043D\\u0430 \\u043E\\u0431\\u044A\\u0435\\u0434\\u0438\\u043D\\u044F\\u0435\\u0442 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u0435\\u0439 \\u0438 \\u0442\\u043E\\u0440\\u0433\\u043E\\u0432\\u044B\\u0435 \\u0442\\u043E\\u0447\\u043A\\u0438 \\u043D\\u0430\\u043F\\u0440\\u044F\\u043C\\u0443\\u044E, \\u0441\\u043E\\u043A\\u0440\\u0430\\u0449\\u0430\\u044F \\u0440\\u0430\\u0441\\u0445\\u043E\\u0434\\u044B \\u0438 \\u043F\\u043E\\u0432\\u044B\\u0448\\u0430\\u044F \\u043F\\u0440\\u043E\\u0434\\u0430\\u0436\\u0438. \\u0410\\u0437\\u044B\\u043A \\u043F\\u0440\\u0435\\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043B\\u044F\\u0435\\u0442 \\u0441\\u0432\\u043E\\u0438\\u043C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\\u043C \\u043C\\u043E\\u0449\\u043D\\u044B\\u0435 \\u0442\\u0435\\u0445\\u043D\\u043E\\u043B\\u043E\\u0433\\u0438\\u0438 \\u0434\\u043B\\u044F \\u043C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\u0438 \\u0440\\u0430\\u0437\\u0432\\u0438\\u0442\\u0438\\u044F \\u0441\\u0432\\u043E\\u0435\\u0433\\u043E \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\\u0430.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: data.route ? router.query.id === 'new' ? 'Добавить' : data.route.number : 'Ничего не найдено',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: \"\\u0410\\u0437\\u044B\\u043A \\u2013 \\u044D\\u0442\\u043E \\u043E\\u043D\\u043B\\u0430\\u0439\\u043D \\u043F\\u043B\\u0430\\u0442\\u0444\\u043E\\u0440\\u043C\\u0430 \\u0434\\u043B\\u044F \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432 \\u043E\\u043F\\u0442\\u043E\\u043C, \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u043D\\u043D\\u0430\\u044F \\u0441\\u043F\\u0435\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E \\u0434\\u043B\\u044F \\u043C\\u0430\\u043B\\u043E\\u0433\\u043E \\u0438 \\u0441\\u0440\\u0435\\u0434\\u043D\\u0435\\u0433\\u043E \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\\u0430.  \\u041E\\u043D\\u0430 \\u043E\\u0431\\u044A\\u0435\\u0434\\u0438\\u043D\\u044F\\u0435\\u0442 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u0435\\u0439 \\u0438 \\u0442\\u043E\\u0440\\u0433\\u043E\\u0432\\u044B\\u0435 \\u0442\\u043E\\u0447\\u043A\\u0438 \\u043D\\u0430\\u043F\\u0440\\u044F\\u043C\\u0443\\u044E, \\u0441\\u043E\\u043A\\u0440\\u0430\\u0449\\u0430\\u044F \\u0440\\u0430\\u0441\\u0445\\u043E\\u0434\\u044B \\u0438 \\u043F\\u043E\\u0432\\u044B\\u0448\\u0430\\u044F \\u043F\\u0440\\u043E\\u0434\\u0430\\u0436\\u0438. \\u0410\\u0437\\u044B\\u043A \\u043F\\u0440\\u0435\\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043B\\u044F\\u0435\\u0442 \\u0441\\u0432\\u043E\\u0438\\u043C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\\u043C \\u043C\\u043E\\u0449\\u043D\\u044B\\u0435 \\u0442\\u0435\\u0445\\u043D\\u043E\\u043B\\u043E\\u0433\\u0438\\u0438 \\u0434\\u043B\\u044F \\u043C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\u0438 \\u0440\\u0430\\u0437\\u0432\\u0438\\u0442\\u0438\\u044F \\u0441\\u0432\\u043E\\u0435\\u0433\\u043E \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\\u0430.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: \"website\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: \"\".concat(urlMain, \"/static/512x512.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: \"\".concat(urlMain, \"/route/\").concat(router.query.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), __jsx(\"link\", {\n    rel: \"canonical\",\n    href: \"\".concat(urlMain, \"/route/\").concat(router.query.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), __jsx(Card, {\n    className: isMobileApp ? classes.pageM : classes.pageD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, data.route ? __jsx(React.Fragment, null, router.query.id === 'new' ? null : __jsx(\"div\", {\n    className: classes.status,\n    style: {\n      background: statusColor[data.route.status]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, data.route.status), __jsx(CardContent, {\n    className: classes.column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, data.route ? __jsx(React.Fragment, null, router.query.id === 'new' ? null : __jsx(\"div\", {\n    className: classes.number,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, data.route.number), (router.query.id === 'new' || data.route.status === 'создан') && profile.role === 'admin' ? __jsx(FormControl, {\n    className: isMobileApp ? classes.inputM : classes.inputDF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"), __jsx(Select, {\n    value: organization._id,\n    onChange: handleOrganization,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, data.organizations.map(function (element) {\n    return __jsx(MenuItem, {\n      key: element._id,\n      value: element._id,\n      ola: element.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, element.name);\n  }))) : __jsx(TextField, {\n    label: \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\",\n    value: organization.name,\n    className: isMobileApp ? classes.inputM : classes.inputDF,\n    inputProps: {\n      'aria-label': 'description',\n      readOnly: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), router.query.id === 'new' || data.route.status === 'создан' ? __jsx(FormControl, {\n    className: isMobileApp ? classes.inputM : classes.inputDF,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(InputLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"\\u042D\\u043A\\u0441\\u043F\\u0435\\u0434\\u0438\\u0442\\u043E\\u0440\"), __jsx(Select, {\n    value: employment._id,\n    onChange: handleEmployment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, employments.map(function (element) {\n    return __jsx(MenuItem, {\n      key: element._id,\n      value: element._id,\n      ola: element.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, element.name);\n  }))) : __jsx(TextField, {\n    label: \"\\u042D\\u043A\\u0441\\u043F\\u0435\\u0434\\u0438\\u0442\\u043E\\u0440\",\n    value: employment.name,\n    className: isMobileApp ? classes.inputM : classes.inputDF,\n    inputProps: {\n      'aria-label': 'description',\n      readOnly: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), __jsx(TextField, {\n    className: isMobileApp ? classes.inputM : classes.inputDF,\n    label: \"\\u0414\\u0430\\u0442\\u0430\",\n    type: \"date\",\n    InputLabelProps: {\n      shrink: true\n    },\n    value: dateStart,\n    inputProps: {\n      'aria-label': 'description',\n      readOnly: !(router.query.id === 'new' || data.route.status === 'создан')\n    },\n    onChange: function onChange(event) {\n      return setDateStart(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    style: {\n      color: breakGeoRoute ? 'red' : '#ffb300'\n    },\n    onClick: function onClick() {\n      setMiniDialog('Маршрут', __jsx(GeoRoute, {\n        invoices: invoices,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), true);\n      showMiniDialog(true);\n    },\n    className: classes.geo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, breakGeoRoute ? 'Маршрут неполный' : 'Просмотреть маршрут'), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    style: {\n      justifyContent: 'center'\n    },\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      background: selectType === 'Все' ? '#ffb300' : '#ffffff'\n    },\n    onClick: function onClick() {\n      setSelectType('Все');\n    },\n    className: classes.selectType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"\\u0412\\u0441\\u0435\"), __jsx(\"div\", {\n    style: {\n      background: selectType === 'Свободные' ? '#ffb300' : '#ffffff'\n    },\n    onClick: function onClick() {\n      setSelectType('Свободные');\n    },\n    className: classes.selectType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"\\u0421\\u0432\\u043E\\u0431\\u043E\\u0434\\u043D\\u044B\\u0435\"), __jsx(\"div\", {\n    style: {\n      background: selectType === 'Выбраные' ? '#ffb300' : '#ffffff'\n    },\n    onClick: function onClick() {\n      setSelectType('Выбраные');\n    },\n    className: classes.selectType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u043D\\u044B\\u0435\")), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classes.listInvoices,\n    style: {\n      zoom: isMobileApp ? 0.83 : 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, allInvoices ? allInvoices.map(function (element, idx) {\n    return __jsx(\"div\", {\n      key: idx,\n      className: classes.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, ['обработка', 'принят'].includes(element.orders[0].status) && !element.confirmationForwarder ? __jsx(Checkbox, {\n      checked: invoices.includes(element),\n      onChange: function onChange() {\n        if (!invoices.includes(element)) {\n          invoices.push(element);\n          unselectedInvoices.splice(unselectedInvoices.indexOf(element), 1);\n          cancelInvoices.splice(cancelInvoices.indexOf(element), 1);\n        } else {\n          invoices.splice(invoices.indexOf(element), 1);\n          unselectedInvoices.push(element);\n          cancelInvoices.push(element);\n        }\n\n        setInvoices(_toConsumableArray(invoices));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }) : null, __jsx(CardOrder, {\n      getInvoices: getInvoices,\n      route: data.route._id,\n      element: element,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }));\n  }) : null), __jsx(\"div\", {\n    className: isMobileApp ? classes.bottomRouteM : classes.bottomRouteD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, router.query.id === 'new' ? __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee7() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (dateStart && employment._id && organization._id) {\n                action =\n                /*#__PURE__*/\n                function () {\n                  var _ref7 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee6() {\n                    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                      while (1) {\n                        switch (_context6.prev = _context6.next) {\n                          case 0:\n                            if (!(employment._id !== undefined && dateStart)) {\n                              _context6.next = 5;\n                              break;\n                            }\n\n                            invoices = invoices.map(function (element) {\n                              return element._id;\n                            });\n                            _context6.next = 4;\n                            return addRoute({\n                              invoices: invoices,\n                              employment: employment._id,\n                              dateStart: new Date(dateStart)\n                            });\n\n                          case 4:\n                            Router.push('/routes');\n\n                          case 5:\n                          case \"end\":\n                            return _context6.stop();\n                        }\n                      }\n                    }, _callee6);\n                  }));\n\n                  return function action() {\n                    return _ref7.apply(this, arguments);\n                  };\n                }();\n\n                setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                  action: action,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 241\n                  },\n                  __self: this\n                }));\n                showMiniDialog(true);\n              } else {\n                showSnackBar('Заполните все поля');\n              }\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, this);\n    })),\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\") : __jsx(React.Fragment, null, __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee9() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref9 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee8() {\n                  var editElement;\n                  return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                    while (1) {\n                      switch (_context8.prev = _context8.next) {\n                        case 0:\n                          editElement = {\n                            _id: data.route._id\n                          };\n                          if (employment._id !== data.route.employment._id && data.route.status === 'создан') editElement.employment = employment._id;\n                          if (dateStart && data.route.status === 'создан') editElement.dateStart = new Date(dateStart);\n                          editElement.invoices = invoices.map(function (element) {\n                            return element._id;\n                          });\n                          if (cancelInvoices.length > 0) editElement.cancelInvoices = cancelInvoices.map(function (element) {\n                            return element._id;\n                          });\n                          _context8.next = 7;\n                          return setRoute(editElement);\n\n                        case 7:\n                          getInvoices();\n\n                        case 8:\n                        case \"end\":\n                          return _context8.stop();\n                      }\n                    }\n                  }, _callee8);\n                }));\n\n                return function action() {\n                  return _ref9.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 261\n                },\n                __self: this\n              }));\n              showMiniDialog(true);\n\n            case 3:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, this);\n    })),\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), ['организация', 'менеджер', 'admin'].includes(profile.role) && data.route.status === 'создан' ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee11() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref11 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee10() {\n                  return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n                    while (1) {\n                      switch (_context10.prev = _context10.next) {\n                        case 0:\n                          _context10.next = 2;\n                          return deleteRoute([data.route._id]);\n\n                        case 2:\n                          Router.push('/routes');\n\n                        case 3:\n                        case \"end\":\n                          return _context10.stop();\n                      }\n                    }\n                  }, _callee10);\n                }));\n\n                return function action() {\n                  return _ref11.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 273\n                },\n                __self: this\n              }));\n              showMiniDialog(true);\n\n            case 3:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, this);\n    })),\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")) : null))) : 'Ничего не найдено', __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }))) : __jsx(CardContent, {\n    className: classes.column,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, \"\\u041D\\u0438\\u0447\\u0435\\u0433\\u043E \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E\")));\n});\n\nRoute.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref12 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee12(ctx) {\n    return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            if (!['организация', 'менеджер', 'admin', 'экспедитор'].includes(ctx.store.getState().user.profile.role)) if (ctx.res) {\n              ctx.res.writeHead(302, {\n                Location: '/'\n              });\n              ctx.res.end();\n            } else Router.push('/');\n            _context12.t0 = _objectSpread;\n            _context12.t1 = {};\n\n            if (!(ctx.query.id !== 'new')) {\n              _context12.next = 9;\n              break;\n            }\n\n            _context12.next = 6;\n            return getRoute({\n              _id: ctx.query.id\n            });\n\n          case 6:\n            _context12.t2 = _context12.sent;\n            _context12.next = 10;\n            break;\n\n          case 9:\n            _context12.t2 = {\n              route: {\n                invoices: [],\n                employment: {},\n                status: '',\n                dateStart: null,\n                dateEnd: null,\n                number: ''\n              }\n            };\n\n          case 10:\n            _context12.t3 = _context12.t2;\n            _context12.next = 13;\n            return getOrganizations({\n              search: '',\n              sort: 'name',\n              filter: ''\n            });\n\n          case 13:\n            _context12.t4 = _context12.sent;\n            _context12.t5 = (0, _context12.t0)(_context12.t1, _context12.t3, _context12.t4);\n            return _context12.abrupt(\"return\", {\n              data: _context12.t5\n            });\n\n          case 16:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n\n  return function (_x) {\n    return _ref12.apply(this, arguments);\n  };\n}();\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\n    snackbarActions: bindActionCreators(snackbarActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Route);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\pages\\route\\[id].js"],"names":["Head","React","useState","useEffect","App","connect","getOrganizations","getOrders","getRoute","setRoute","deleteRoute","addRoute","getEcspeditors","routeStyle","useRouter","Card","CardContent","Checkbox","CardOrder","InputLabel","MenuItem","FormControl","Select","bindActionCreators","mini_dialogActions","snackbarActions","TextField","Button","Router","pdDatePicker","Confirmation","GeoRoute","urlMain","Route","memo","props","profile","user","classes","data","router","isMobileApp","app","route","Date","dateStart","setDateStart","dateEnd","setDateEnd","employment","setEmployment","handleEmployment","event","_id","target","value","name","query","id","organization","setOrganization","handleOrganization","invoices","setInvoices","cancelInvoices","setCancelInvoices","allInvoices","setAllInvoices","unselectedInvoices","setUnselectedInvoices","selectType","setSelectType","employments","setEmployments","setMiniDialog","showMiniDialog","showSnackBar","includes","role","organizations","filter","element","console","log","search","sort","ecspeditors","statusColor","getInvoices","breakGeoRoute","address","length","number","pageM","pageD","status","background","column","inputM","inputDF","map","readOnly","shrink","color","geo","justifyContent","row","listInvoices","zoom","idx","orders","confirmationForwarder","push","splice","indexOf","bottomRouteM","bottomRouteD","action","undefined","editElement","getInitialProps","ctx","store","getState","res","writeHead","Location","end","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import Head from 'next/head';\r\nimport React, { useState, useEffect } from 'react';\r\nimport App from '../../layouts/App';\r\nimport { connect } from 'react-redux'\r\nimport { getOrganizations } from '../../src/gql/organization'\r\nimport { getOrders } from '../../src/gql/order'\r\nimport { getRoute, setRoute, deleteRoute, addRoute } from '../../src/gql/route'\r\nimport { getEcspeditors } from '../../src/gql/employment'\r\nimport routeStyle from '../../src/styleMUI/route/route'\r\nimport { useRouter } from 'next/router'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CardOrder from '../../components/order/CardOrder';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Router from 'next/router'\r\nimport { pdDatePicker } from '../../src/lib'\r\nimport Confirmation from '../../components/dialog/Confirmation'\r\nimport GeoRoute from '../../components/dialog/GeoRoute'\r\nimport { urlMain } from '../../redux/constants/other'\r\n\r\n\r\nconst Route = React.memo((props) => {\r\n    const { profile } = props.user;\r\n    const classes = routeStyle();\r\n    const { data } = props;\r\n    const router = useRouter()\r\n    const { isMobileApp } = props.app;\r\n    let [dateStart, setDateStart] = useState(data.route?pdDatePicker(new Date(data.route.dateStart)):null);\r\n    let [dateEnd, setDateEnd] = useState(data.route?data.route.dateEnd:null);\r\n    let [employment, setEmployment] = useState(data.route?data.route.employment:{});\r\n    let handleEmployment =  (event) => {\r\n        setEmployment({_id: event.target.value, name: event.target.name})\r\n    };\r\n    let [organization, setOrganization] = useState(router.query.id==='new'||!data.route?{}:data.route.employment.organization);\r\n    let handleOrganization =  (event) => {\r\n        setOrganization({_id: event.target.value, name: event.target.name})\r\n    };\r\n    let [invoices, setInvoices] = useState(data.route?data.route.invoices:[]);\r\n    let [cancelInvoices, setCancelInvoices] = useState([]);\r\n    let [allInvoices, setAllInvoices] = useState([]);\r\n    let [unselectedInvoices, setUnselectedInvoices] = useState([]);\r\n    let [selectType, setSelectType] = useState('Все');\r\n    let [employments, setEmployments] = useState([]);\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    const { showSnackBar } = props.snackbarActions;\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            if(data.route) {\r\n                if (['организация', 'менеджер'].includes(profile.role) && router.query.id === 'new') {\r\n                    let organization = data.organizations.filter(element => element._id === profile.organization)\r\n                    setOrganization(organization[0])\r\n                }\r\n            }\r\n        })()\r\n    },[profile])\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            if(data.route&&['организация', 'менеджер', 'admin'].includes(profile.role)) {\r\n                console.log('ok')\r\n                setUnselectedInvoices((await getOrders({search: '', sort: '-updatedAt', filter: 'обработка'})).invoices)\r\n            }\r\n        })()\r\n    },[])\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            if(data.route) {\r\n                if (router.query.id === 'new')\r\n                    setEmployment({})\r\n                setEmployments((await getEcspeditors({_id: organization._id})).ecspeditors)\r\n            }\r\n        })()\r\n    },[organization])\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            if(data.route) {\r\n                if (selectType == 'Все')\r\n                    setAllInvoices([...invoices, ...unselectedInvoices])\r\n                else if (selectType == 'Свободные')\r\n                    setAllInvoices([...unselectedInvoices])\r\n                else if (selectType == 'Выбраные')\r\n                    setAllInvoices([...invoices])\r\n            }\r\n        })()\r\n    },[selectType, unselectedInvoices, invoices])\r\n    const statusColor = {\r\n        'создан': 'orange',\r\n        'выполняется': 'blue',\r\n        'выполнен': 'green',\r\n    }\r\n    let getInvoices = async ()=>{\r\n        if(data.route){\r\n            setUnselectedInvoices((await getOrders({search: '', sort: '-updatedAt', filter: 'обработка'})).invoices)\r\n            setCancelInvoices([])\r\n            setInvoices((await getRoute({_id: data.route._id})).route.invoices)\r\n        }\r\n    }\r\n    const breakGeoRoute = (invoices.filter((element)=>!element.address[1])).length>0\r\n    return (\r\n        <App pageName={data.route?router.query.id==='new'?'Добавить':data.route.number:'Ничего не найдено'}>\r\n            <Head>\r\n                <title>{data.route?router.query.id==='new'?'Добавить':data.route.number:'Ничего не найдено'}</title>\r\n                <meta name='description' content='Азык – это онлайн платформа для заказа товаров оптом, разработанная специально для малого и среднего бизнеса.  Она объединяет производителей и торговые точки напрямую, сокращая расходы и повышая продажи. Азык предоставляет своим пользователям мощные технологии для масштабирования и развития своего бизнеса.' />\r\n                <meta property='og:title' content={data.route?router.query.id==='new'?'Добавить':data.route.number:'Ничего не найдено'} />\r\n                <meta property='og:description' content='Азык – это онлайн платформа для заказа товаров оптом, разработанная специально для малого и среднего бизнеса.  Она объединяет производителей и торговые точки напрямую, сокращая расходы и повышая продажи. Азык предоставляет своим пользователям мощные технологии для масштабирования и развития своего бизнеса.' />\r\n                <meta property='og:type' content='website' />\r\n                <meta property='og:image' content={`${urlMain}/static/512x512.png`} />\r\n                <meta property=\"og:url\" content={`${urlMain}/route/${router.query.id}`} />\r\n                <link rel='canonical' href={`${urlMain}/route/${router.query.id}`}/>\r\n            </Head>\r\n            <Card className={isMobileApp?classes.pageM:classes.pageD}>\r\n                {data.route?\r\n                    <>\r\n                    {router.query.id==='new'?null:<div className={classes.status} style={{background: statusColor[data.route.status]}}>{data.route.status}</div>}\r\n                    <CardContent className={classes.column}>\r\n                        {data.route?\r\n                            <>\r\n                            {router.query.id==='new'?null:<div className={classes.number}>{data.route.number}</div>}\r\n                            {(router.query.id==='new'||data.route.status==='создан')&&profile.role==='admin'?\r\n                                <FormControl className={isMobileApp?classes.inputM:classes.inputDF}>\r\n                                    <InputLabel>Организация</InputLabel>\r\n                                    <Select value={organization._id}onChange={handleOrganization}>\r\n                                        {data.organizations.map((element)=>\r\n                                            <MenuItem key={element._id} value={element._id} ola={element.name}>{element.name}</MenuItem>\r\n                                        )}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                :\r\n                                <TextField\r\n                                    label='Организация'\r\n                                    value={organization.name}\r\n                                    className={isMobileApp?classes.inputM:classes.inputDF}\r\n                                    inputProps={{\r\n                                        'aria-label': 'description',\r\n                                        readOnly: true,\r\n                                    }}\r\n                                />\r\n                            }\r\n                            <br/>\r\n                            {\r\n                                router.query.id==='new'||data.route.status==='создан'?\r\n                                    <FormControl className={isMobileApp?classes.inputM:classes.inputDF}>\r\n                                        <InputLabel>Экспедитор</InputLabel>\r\n                                        <Select value={employment._id} onChange={handleEmployment}>\r\n                                            {employments.map((element)=>\r\n                                                <MenuItem key={element._id} value={element._id} ola={element.name}>{element.name}</MenuItem>\r\n                                            )}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    :\r\n                                    <TextField\r\n                                        label='Экспедитор'\r\n                                        value={employment.name}\r\n                                        className={isMobileApp?classes.inputM:classes.inputDF}\r\n                                        inputProps={{\r\n                                            'aria-label': 'description',\r\n                                            readOnly: true,\r\n                                        }}\r\n                                    />\r\n                            }\r\n                            <br/>\r\n                            <TextField\r\n                                className={isMobileApp?classes.inputM:classes.inputDF}\r\n                                label='Дата'\r\n                                type='date'\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                value={dateStart}\r\n                                inputProps={{\r\n                                    'aria-label': 'description',\r\n                                    readOnly: !(router.query.id==='new'||data.route.status==='создан'),\r\n                                }}\r\n                                onChange={ event => setDateStart(event.target.value) }\r\n                            />\r\n                            <br/>\r\n                            <div style={{color: breakGeoRoute?'red':'#ffb300'}} onClick={()=>{\r\n                                setMiniDialog('Маршрут', <GeoRoute invoices={invoices}/>, true)\r\n                                showMiniDialog(true)\r\n                            }} className={classes.geo}>{breakGeoRoute?'Маршрут неполный':'Просмотреть маршрут'}</div>\r\n                            <br/>\r\n                            <div style={{ justifyContent: 'center' }} className={classes.row}>\r\n                                <div style={{background: selectType==='Все'?'#ffb300':'#ffffff'}} onClick={()=>{setSelectType('Все')}} className={classes.selectType}>\r\n                                    Все\r\n                                </div>\r\n                                <div style={{background: selectType==='Свободные'?'#ffb300':'#ffffff'}} onClick={()=>{setSelectType('Свободные')}} className={classes.selectType}>\r\n                                    Свободные\r\n                                </div>\r\n                                <div style={{background: selectType==='Выбраные'?'#ffb300':'#ffffff'}} onClick={()=>{setSelectType('Выбраные')}} className={classes.selectType}>\r\n                                    Выбраные\r\n                                </div>\r\n                            </div>\r\n                            <br/>\r\n                            <div className={classes.listInvoices} style={{zoom: isMobileApp?0.83:1}}>\r\n                                {allInvoices?allInvoices.map((element, idx)=> {\r\n                                    return (\r\n                                        <div key={idx} className={classes.row}>\r\n                                            {['обработка', 'принят'].includes(element.orders[0].status)&&!element.confirmationForwarder?\r\n                                                <Checkbox checked={invoices.includes(element)} onChange={() => {\r\n                                                    if (!invoices.includes(element)) {\r\n                                                        invoices.push(element)\r\n                                                        unselectedInvoices.splice(unselectedInvoices.indexOf(element), 1)\r\n                                                        cancelInvoices.splice(cancelInvoices.indexOf(element), 1)\r\n                                                    } else {\r\n                                                        invoices.splice(invoices.indexOf(element), 1)\r\n                                                        unselectedInvoices.push(element)\r\n                                                        cancelInvoices.push(element)\r\n                                                    }\r\n                                                    setInvoices([...invoices])\r\n                                                }}\r\n                                                />:null}\r\n                                            <CardOrder getInvoices={getInvoices} route={data.route._id} element={element}/>\r\n                                        </div>\r\n                                    )\r\n                                }):null}\r\n                            </div>\r\n                            <div className={isMobileApp?classes.bottomRouteM:classes.bottomRouteD}>\r\n                                {\r\n                                    router.query.id==='new'?\r\n                                        <Button onClick={async()=>{\r\n                                            if (dateStart&&employment._id&&organization._id) {\r\n                                                const action = async() => {\r\n                                                    if (employment._id!==undefined&&dateStart) {\r\n                                                        invoices = invoices.map(element=>element._id)\r\n                                                        await addRoute({\r\n                                                            invoices: invoices,\r\n                                                            employment: employment._id,\r\n                                                            dateStart: new Date(dateStart)\r\n                                                        })\r\n                                                        Router.push('/routes')\r\n                                                    }\r\n                                                }\r\n                                                setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                showMiniDialog(true)\r\n                                            } else {\r\n                                                showSnackBar('Заполните все поля')\r\n                                            }\r\n                                        }} size='small' color='primary'>\r\n                                            Добавить\r\n                                        </Button>\r\n                                        :\r\n                                        <>\r\n                                        <Button onClick={async()=>{\r\n                                            const action = async() => {\r\n                                                let editElement = {_id: data.route._id}\r\n                                                if(employment._id!==data.route.employment._id&&data.route.status==='создан')editElement.employment = employment._id;\r\n                                                if(dateStart&&data.route.status==='создан')editElement.dateStart = new Date(dateStart);\r\n                                                editElement.invoices = invoices.map(element=>element._id);\r\n                                                if(cancelInvoices.length>0)editElement.cancelInvoices = cancelInvoices.map(element=>element._id);\r\n                                                await setRoute(editElement)\r\n                                                getInvoices()\r\n                                            }\r\n                                            setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                            showMiniDialog(true)\r\n                                        }} size='small' color='primary'>\r\n                                            Сохранить\r\n                                        </Button>\r\n                                        {['организация', 'менеджер', 'admin'].includes(profile.role)&&data.route.status==='создан'?\r\n                                            <>\r\n                                            <Button onClick={async()=>{\r\n                                                const action = async() => {\r\n                                                    await deleteRoute([data.route._id])\r\n                                                    Router.push('/routes')\r\n                                                }\r\n                                                setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                showMiniDialog(true)\r\n                                            }} size='small' color='primary'>\r\n                                                Удалить\r\n                                            </Button>\r\n                                            </>\r\n                                            :\r\n                                            null\r\n                                        }\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                            </>\r\n                            :'Ничего не найдено'}\r\n                        <br/>\r\n                    </CardContent>\r\n                    </>\r\n                    :\r\n                    <CardContent className={classes.column}>\r\n                        Ничего не найдено\r\n                    </CardContent>\r\n                }\r\n            </Card>\r\n        </App>\r\n    )\r\n})\r\n\r\nRoute.getInitialProps = async function(ctx) {\r\n    if(!['организация', 'менеджер', 'admin', 'экспедитор'].includes(ctx.store.getState().user.profile.role))\r\n        if(ctx.res) {\r\n            ctx.res.writeHead(302, {\r\n                Location: '/'\r\n            })\r\n            ctx.res.end()\r\n        } else\r\n                Router.push('/')\r\n    return {\r\n        data: {\r\n            ...ctx.query.id!=='new'?await getRoute({_id: ctx.query.id}):{route: {invoices: [], employment: {}, status: '', dateStart: null, dateEnd: null, number: ''}},\r\n            ...await getOrganizations({search: '', sort: 'name', filter: ''}),\r\n        }\r\n    };\r\n};\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Route);"]},"metadata":{},"sourceType":"module"}