{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport AppBar from '../components/app/AppBar';\nimport Dialog from '../components/app/Dialog';\nimport SnackBar from '../components/app/SnackBar';\nimport Drawer from '../components/app/Drawer';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { addFavoriteItem } from '../src/gql/items';\nimport { addBasket } from '../src/gql/basket';\nimport * as paginationActions from '../redux/actions/pagination';\nimport * as userActions from '../redux/actions/user';\nimport * as appActions from '../redux/actions/app';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport '../scss/app.scss';\nimport Router from 'next/router';\nimport { useRouter } from 'next/router';\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener';\nexport var mainWindow = React.createRef();\nvar App = React.memo(function (props) {\n  var _props$userActions = props.userActions,\n      setProfile = _props$userActions.setProfile,\n      logout = _props$userActions.logout;\n  var _props$paginationActi = props.paginationActions,\n      next = _props$paginationActi.next,\n      disable = _props$paginationActi.disable;\n  var showLoad = props.appActions.showLoad;\n  var _props$user = props.user,\n      profile = _props$user.profile,\n      authenticated = _props$user.authenticated;\n  var _props$pagination = props.pagination,\n      work = _props$pagination.work,\n      count = _props$pagination.count;\n  var sorts = props.sorts,\n      filters = props.filters,\n      getList = props.getList,\n      pageName = props.pageName,\n      dates = props.dates,\n      subcategory = props.subcategory,\n      category = props.category;\n  var router = useRouter();\n  useEffect(function () {\n    if (authenticated) setProfile();else if (!authenticated && profile.role) logout(false);\n  }, [authenticated]);\n  Router.events.on('routeChangeStart', function (err, url) {\n    if (!router.pathname.includes(url)) showLoad(true);\n\n    if (err.cancelled) {\n      showLoad(false);\n    }\n  });\n  var containerRef = useBottomScrollListener(function () {\n    if (work) next();\n  });\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var favorites, basket, i;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(authenticated && profile.role === 'client')) {\n                _context.next = 23;\n                break;\n              }\n\n              if (!(localStorage.favorites && localStorage.favorites !== '[]')) {\n                _context.next = 10;\n                break;\n              }\n\n              favorites = JSON.parse(localStorage.favorites);\n              favorites = favorites.map(function (element) {\n                return element._id;\n              });\n              _context.next = 6;\n              return addFavoriteItem(favorites);\n\n            case 6:\n              localStorage.favorites = _JSON$stringify([]);\n\n              if (!(getList !== undefined)) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 10;\n              return getList();\n\n            case 10:\n              if (!(localStorage.basket && localStorage.basket !== '[]')) {\n                _context.next = 23;\n                break;\n              }\n\n              basket = JSON.parse(localStorage.basket);\n              i = 0;\n\n            case 13:\n              if (!(i < basket.length)) {\n                _context.next = 19;\n                break;\n              }\n\n              _context.next = 16;\n              return addBasket({\n                item: basket[i].item._id,\n                count: basket[i].count\n              });\n\n            case 16:\n              i++;\n              _context.next = 13;\n              break;\n\n            case 19:\n              localStorage.basket = '[]';\n\n              if (!(getList !== undefined)) {\n                _context.next = 23;\n                break;\n              }\n\n              _context.next = 23;\n              return getList();\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, []);\n  var load = props.app.load;\n  return __jsx(\"div\", {\n    ref: mainWindow,\n    className: \"App\"\n  }, __jsx(Drawer, {\n    subcategory: subcategory,\n    category: category\n  }), __jsx(AppBar, {\n    dates: dates,\n    pageName: pageName,\n    sorts: sorts,\n    filters: filters\n  }), __jsx(\"div\", {\n    ref: containerRef,\n    className: \"App-body\"\n  }, props.children), __jsx(Dialog, null), __jsx(SnackBar, null), load ? __jsx(\"div\", {\n    className: \"load\"\n  }, __jsx(CircularProgress, null)) : null);\n});\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app,\n    pagination: state.pagination\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    userActions: bindActionCreators(userActions, dispatch),\n    appActions: bindActionCreators(appActions, dispatch),\n    paginationActions: bindActionCreators(paginationActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":null,"metadata":{},"sourceType":"module"}