{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\components\\\\app\\\\Dialog.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nconst MyDialog = React.memo(props => {\n  const {\n    title,\n    child,\n    show,\n    fullScreen\n  } = props.mini_dialog;\n  const {\n    showMiniDialog\n  } = props.mini_dialogActions;\n  return __jsx(Dialog, {\n    fullScreen: fullScreen,\n    open: show,\n    onClose: () => {\n      showMiniDialog(false);\n    },\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(DialogTitle, {\n    onClose: () => {\n      showMiniDialog(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, title), __jsx(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, child));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    mini_dialog: state.mini_dialog\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyDialog);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\app\\Dialog.js"],"names":["React","Dialog","DialogContent","DialogTitle","connect","bindActionCreators","mini_dialogActions","MyDialog","memo","props","title","child","show","fullScreen","mini_dialog","showMiniDialog","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,kBAAZ,MAAoC,iCAApC;AAEA,MAAMC,QAAQ,GAAIP,KAAK,CAACQ,IAAN,CACbC,KAAD,IAAU;AACN,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA;AAAtB,MAAsCJ,KAAK,CAACK,WAAlD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAqBN,KAAK,CAACH,kBAAjC;AACA,SACQ,MAAC,MAAD;AACI,IAAA,UAAU,EAAEO,UADhB;AAEI,IAAA,IAAI,EAAED,IAFV;AAGI,IAAA,OAAO,EAAE,MAAI;AAACG,MAAAA,cAAc,CAAC,KAAD,CAAd;AAAsB,KAHxC;AAII,uBAAgB,oBAJpB;AAKI,wBAAiB,0BALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,MAAC,WAAD;AAAa,IAAA,OAAO,EAAE,MAAI;AAACA,MAAAA,cAAc,CAAC,KAAD,CAAd;AAAsB,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoDL,KAApD,CANJ,EAOI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,KADL,CAPJ,CADR;AAaH,CAjBa,CAAlB;;AAoBA,SAASK,eAAT,CAA0BC,KAA1B,EAAiC;AAC7B,SAAO;AACHH,IAAAA,WAAW,EAAEG,KAAK,CAACH;AADhB,GAAP;AAGH;;AAED,SAASI,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHb,IAAAA,kBAAkB,EAAED,kBAAkB,CAACC,kBAAD,EAAqBa,QAArB;AADnC,GAAP;AAGH;;AAED,eAAef,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\n\r\nconst MyDialog =  React.memo(\r\n    (props) =>{\r\n        const { title, child, show, fullScreen  } = props.mini_dialog;\r\n        const { showMiniDialog } = props.mini_dialogActions;\r\n        return (\r\n                <Dialog\r\n                    fullScreen={fullScreen}\r\n                    open={show}\r\n                    onClose={()=>{showMiniDialog(false)}}\r\n                    aria-labelledby='alert-dialog-title'\r\n                    aria-describedby='alert-dialog-description'>\r\n                    <DialogTitle onClose={()=>{showMiniDialog(false)}}>{title}</DialogTitle>\r\n                    <DialogContent>\r\n                        {child}\r\n                    </DialogContent>\r\n                </Dialog>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyDialog);"]},"metadata":{},"sourceType":"module"}