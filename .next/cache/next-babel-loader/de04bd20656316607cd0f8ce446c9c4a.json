{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport React, { useState } from 'react';\nimport App from '../layouts/App';\nimport { connect } from 'react-redux';\nimport { getContact, setContact } from '../src/gql/contact';\nimport contactStyle from '../src/styleMUI/contact';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../redux/actions/mini_dialog';\nimport Add from '@material-ui/icons/Add';\nimport Remove from '@material-ui/icons/Remove';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Confirmation from '../components/dialog/Confirmation';\nimport AddSocial from '../components/dialog/AddSocial';\nimport { urlMain } from '../redux/constants/other';\nconst Contact = React.memo(props => {\n  const classes = contactStyle();\n  const {\n    data\n  } = props;\n  const {\n    isMobileApp\n  } = props.app;\n  let {\n    0: name,\n    1: setName\n  } = useState(data.contact.name);\n  let {\n    0: address,\n    1: setAddress\n  } = useState(data.contact.address);\n  let {\n    0: newAddress,\n    1: setNewAddress\n  } = useState('');\n\n  let addAddress = () => {\n    address = [...address, newAddress];\n    setAddress(address);\n    setNewAddress('');\n  };\n\n  let editAddress = (event, idx) => {\n    address[idx] = event.target.value;\n    setAddress([...address]);\n  };\n\n  let deleteAddress = idx => {\n    address.splice(idx, 1);\n    setAddress([...address]);\n  };\n\n  let {\n    0: email,\n    1: setEmail\n  } = useState(data.contact.email);\n  let {\n    0: newEmail,\n    1: setNewEmail\n  } = useState('');\n\n  let addEmail = () => {\n    email = [...email, newEmail];\n    setEmail(email);\n    setNewEmail('');\n  };\n\n  let editEmail = (event, idx) => {\n    email[idx] = event.target.value;\n    setEmail([...email]);\n  };\n\n  let deleteEmail = idx => {\n    email.splice(idx, 1);\n    setEmail([...email]);\n  };\n\n  let {\n    0: phone,\n    1: setPhone\n  } = useState(data.contact.phone);\n  let {\n    0: newPhone,\n    1: setNewPhone\n  } = useState('');\n\n  let addPhone = () => {\n    phone = [...phone, newPhone];\n    setPhone(phone);\n    setNewPhone('');\n  };\n\n  let editPhone = (event, idx) => {\n    phone[idx] = event.target.value;\n    setPhone([...phone]);\n  };\n\n  let deletePhone = idx => {\n    phone.splice(idx, 1);\n    setPhone([...phone]);\n  };\n\n  let {\n    0: social,\n    1: setSocial\n  } = useState(data.contact.social);\n\n  let addSocial = (value, idx) => {\n    social[idx] = value;\n    setSocial([...social]);\n  };\n\n  console.log(social);\n  let {\n    0: info,\n    1: setInfo\n  } = useState(data.contact.info);\n  let {\n    0: preview,\n    1: setPreview\n  } = useState(data.contact.image === '' ? '/static/add.png' : data.contact.image);\n  let {\n    0: image,\n    1: setImage\n  } = useState(undefined);\n\n  let handleChangeImage = event => {\n    setImage(event.target.files[0]);\n    setPreview(URL.createObjectURL(event.target.files[0]));\n  };\n\n  const {\n    profile\n  } = props.user;\n  const {\n    setMiniDialog,\n    showMiniDialog\n  } = props.mini_dialogActions;\n  return __jsx(App, {\n    filters: data.filterSubCategory,\n    sorts: data.sortSubCategory,\n    pageName: \"\\u041A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u044B\"\n  }, __jsx(Head, null, __jsx(\"title\", null, name), __jsx(\"meta\", {\n    name: \"description\",\n    content: \"\\u0410\\u0437\\u044B\\u043A \\u2013 \\u044D\\u0442\\u043E \\u043E\\u043D\\u043B\\u0430\\u0439\\u043D \\u043F\\u043B\\u0430\\u0442\\u0444\\u043E\\u0440\\u043C\\u0430 \\u0434\\u043B\\u044F \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432 \\u043E\\u043F\\u0442\\u043E\\u043C, \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u043D\\u043D\\u0430\\u044F \\u0441\\u043F\\u0435\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E \\u0434\\u043B\\u044F \\u043C\\u0430\\u043B\\u043E\\u0433\\u043E \\u0438 \\u0441\\u0440\\u0435\\u0434\\u043D\\u0435\\u0433\\u043E \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\\u0430.  \\u041E\\u043D\\u0430 \\u043E\\u0431\\u044A\\u0435\\u0434\\u0438\\u043D\\u044F\\u0435\\u0442 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u0435\\u0439 \\u0438 \\u0442\\u043E\\u0440\\u0433\\u043E\\u0432\\u044B\\u0435 \\u0442\\u043E\\u0447\\u043A\\u0438 \\u043D\\u0430\\u043F\\u0440\\u044F\\u043C\\u0443\\u044E, \\u0441\\u043E\\u043A\\u0440\\u0430\\u0449\\u0430\\u044F \\u0440\\u0430\\u0441\\u0445\\u043E\\u0434\\u044B \\u0438 \\u043F\\u043E\\u0432\\u044B\\u0448\\u0430\\u044F \\u043F\\u0440\\u043E\\u0434\\u0430\\u0436\\u0438. \\u0410\\u0437\\u044B\\u043A \\u043F\\u0440\\u0435\\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043B\\u044F\\u0435\\u0442 \\u0441\\u0432\\u043E\\u0438\\u043C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\\u043C \\u043C\\u043E\\u0449\\u043D\\u044B\\u0435 \\u0442\\u0435\\u0445\\u043D\\u043E\\u043B\\u043E\\u0433\\u0438\\u0438 \\u0434\\u043B\\u044F \\u043C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\u0438 \\u0440\\u0430\\u0437\\u0432\\u0438\\u0442\\u0438\\u044F \\u0441\\u0432\\u043E\\u0435\\u0433\\u043E \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\\u0430.\"\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: \"\\u0410\\u0437\\u044B\\u043A - \\u044D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u044B\\u0439 \\u0441\\u043A\\u043B\\u0430\\u0434 \\u0441\\u0432\\u044F\\u0437\\u044B\\u0432\\u0430\\u044E\\u0449\\u0438\\u0439 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u044F \\u0441 \\u0442\\u043E\\u0440\\u0433\\u043E\\u0432\\u043E\\u0439 \\u0442\\u043E\\u0447\\u043A\\u043E\\u0439\"\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: \"\\u0410\\u0437\\u044B\\u043A \\u2013 \\u044D\\u0442\\u043E \\u043E\\u043D\\u043B\\u0430\\u0439\\u043D \\u043F\\u043B\\u0430\\u0442\\u0444\\u043E\\u0440\\u043C\\u0430 \\u0434\\u043B\\u044F \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432 \\u043E\\u043F\\u0442\\u043E\\u043C, \\u0440\\u0430\\u0437\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u043D\\u043D\\u0430\\u044F \\u0441\\u043F\\u0435\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E \\u0434\\u043B\\u044F \\u043C\\u0430\\u043B\\u043E\\u0433\\u043E \\u0438 \\u0441\\u0440\\u0435\\u0434\\u043D\\u0435\\u0433\\u043E \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\\u0430.  \\u041E\\u043D\\u0430 \\u043E\\u0431\\u044A\\u0435\\u0434\\u0438\\u043D\\u044F\\u0435\\u0442 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435\\u043B\\u0435\\u0439 \\u0438 \\u0442\\u043E\\u0440\\u0433\\u043E\\u0432\\u044B\\u0435 \\u0442\\u043E\\u0447\\u043A\\u0438 \\u043D\\u0430\\u043F\\u0440\\u044F\\u043C\\u0443\\u044E, \\u0441\\u043E\\u043A\\u0440\\u0430\\u0449\\u0430\\u044F \\u0440\\u0430\\u0441\\u0445\\u043E\\u0434\\u044B \\u0438 \\u043F\\u043E\\u0432\\u044B\\u0448\\u0430\\u044F \\u043F\\u0440\\u043E\\u0434\\u0430\\u0436\\u0438. \\u0410\\u0437\\u044B\\u043A \\u043F\\u0440\\u0435\\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043B\\u044F\\u0435\\u0442 \\u0441\\u0432\\u043E\\u0438\\u043C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\\u043C \\u043C\\u043E\\u0449\\u043D\\u044B\\u0435 \\u0442\\u0435\\u0445\\u043D\\u043E\\u043B\\u043E\\u0433\\u0438\\u0438 \\u0434\\u043B\\u044F \\u043C\\u0430\\u0441\\u0448\\u0442\\u0430\\u0431\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F \\u0438 \\u0440\\u0430\\u0437\\u0432\\u0438\\u0442\\u0438\\u044F \\u0441\\u0432\\u043E\\u0435\\u0433\\u043E \\u0431\\u0438\\u0437\\u043D\\u0435\\u0441\\u0430.\"\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: \"website\"\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: `${urlMain}/static/512x512.png`\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `${urlMain}/contact`\n  }), __jsx(\"link\", {\n    rel: \"canonical\",\n    href: `${urlMain}/contact`\n  })), __jsx(Card, {\n    className: classes.page\n  }, __jsx(CardContent, {\n    className: isMobileApp ? classes.column : classes.row\n  }, profile.role === 'admin' ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.column\n  }, __jsx(\"label\", {\n    htmlFor: \"contained-button-file\"\n  }, __jsx(\"img\", {\n    className: classes.media,\n    src: preview,\n    alt: 'Добавить'\n  })), \"\\u041D\\u0430\\u0448\\u0438 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B\", __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"img\", {\n    src: \"/static/instagram.svg\",\n    onClick: () => {\n      setMiniDialog('Instagram', __jsx(AddSocial, {\n        data: social[0],\n        action: addSocial,\n        idx: 0\n      }));\n      showMiniDialog(true);\n    },\n    className: classes.mediaSocial\n  }), __jsx(\"img\", {\n    src: \"/static/facebook.svg\",\n    onClick: () => {\n      setMiniDialog('Facebook', __jsx(AddSocial, {\n        data: social[1],\n        action: addSocial,\n        idx: 0\n      }));\n      showMiniDialog(true);\n    },\n    className: classes.mediaSocial\n  }), __jsx(\"img\", {\n    src: \"/static/twitter.svg\",\n    onClick: () => {\n      setMiniDialog('Twitter', __jsx(AddSocial, {\n        data: social[2],\n        action: addSocial,\n        idx: 0\n      }));\n      showMiniDialog(true);\n    },\n    className: classes.mediaSocial\n  }), __jsx(\"img\", {\n    src: \"/static/telegram.svg\",\n    onClick: () => {\n      setMiniDialog('Telegram', __jsx(AddSocial, {\n        data: social[3],\n        action: addSocial,\n        idx: 0\n      }));\n      showMiniDialog(true);\n    },\n    className: classes.mediaSocial\n  }))), __jsx(\"div\", null, __jsx(TextField, {\n    label: \"\\u0418\\u043C\\u044F\",\n    value: name,\n    className: classes.input,\n    onChange: event => {\n      setName(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    }\n  }), __jsx(FormControl, {\n    className: classes.input\n  }, __jsx(InputLabel, null, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0430\\u0434\\u0440\\u0435\\u0441\"), __jsx(Input, {\n    value: newAddress,\n    onChange: event => {\n      setNewAddress(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      onClick: () => {\n        addAddress();\n      },\n      \"aria-label\": \"toggle password visibility\"\n    }, __jsx(Add, null)))\n  })), address.map((element, idx) => __jsx(FormControl, {\n    key: idx,\n    className: classes.input\n  }, __jsx(InputLabel, null, \"\\u0410\\u0434\\u0440\\u0435\\u0441\"), __jsx(Input, {\n    placeholder: \"\\u0410\\u0434\\u0440\\u0435\\u0441\",\n    value: element,\n    onChange: event => {\n      editAddress(event, idx);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      onClick: () => {\n        deleteAddress(idx);\n      },\n      \"aria-label\": \"toggle password visibility\"\n    }, __jsx(Remove, null)))\n  }))), __jsx(FormControl, {\n    className: classes.input\n  }, __jsx(InputLabel, null, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C email\"), __jsx(Input, {\n    value: newEmail,\n    onChange: event => {\n      setNewEmail(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      onClick: () => {\n        addEmail();\n      },\n      \"aria-label\": \"toggle password visibility\"\n    }, __jsx(Add, null)))\n  })), email.map((element, idx) => __jsx(FormControl, {\n    key: idx,\n    className: classes.input\n  }, __jsx(InputLabel, null, \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"), __jsx(Input, {\n    value: element,\n    onChange: event => {\n      editEmail(event, idx);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      onClick: () => {\n        deleteEmail(idx);\n      },\n      \"aria-label\": \"toggle password visibility\"\n    }, __jsx(Remove, null)))\n  }))), __jsx(FormControl, {\n    className: classes.input\n  }, __jsx(InputLabel, null, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D. \\u0424\\u043E\\u0440\\u043C\\u0430\\u0442: +996555780861\"), __jsx(Input, {\n    value: newPhone,\n    onChange: event => {\n      setNewPhone(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      onClick: () => {\n        addPhone();\n      },\n      \"aria-label\": \"toggle password visibility\"\n    }, __jsx(Add, null)))\n  })), phone.map((element, idx) => __jsx(FormControl, {\n    key: idx,\n    className: classes.input\n  }, __jsx(InputLabel, null, \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"), __jsx(Input, {\n    value: element,\n    onChange: event => {\n      editPhone(event, idx);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    },\n    endAdornment: __jsx(InputAdornment, {\n      position: \"end\"\n    }, __jsx(IconButton, {\n      onClick: () => {\n        deletePhone(idx);\n      },\n      \"aria-label\": \"toggle password visibility\"\n    }, __jsx(Remove, null)))\n  }))), __jsx(TextField, {\n    multiline: true,\n    label: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\",\n    value: info,\n    className: classes.input,\n    onChange: event => {\n      setInfo(event.target.value);\n    },\n    inputProps: {\n      'aria-label': 'description'\n    }\n  }), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(Button, {\n    onClick: async () => {\n      let editElement = {\n        name: name,\n        address: address,\n        email: email,\n        phone: phone,\n        social: social,\n        info: info\n      };\n      if (image !== undefined) editElement.image = image;\n\n      const action = async () => {\n        await setContact(editElement);\n      };\n\n      setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n        action: action\n      }));\n      showMiniDialog(true);\n    },\n    size: \"small\",\n    color: \"primary\"\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\")))) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.column\n  }, __jsx(\"img\", {\n    className: classes.media,\n    src: preview,\n    alt: name\n  }), social[0].length > 0 || social[1].length > 0 || social[2].length > 0 || social[3].length > 0 ? __jsx(React.Fragment, null, \"\\u041D\\u0430\\u0448\\u0438 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B\", __jsx(\"div\", {\n    className: classes.row\n  }, social[0].length > 0 ? __jsx(\"a\", {\n    href: social[0]\n  }, __jsx(\"img\", {\n    src: \"/static/instagram.svg\",\n    className: classes.mediaSocial\n  })) : null, social[1].length > 0 ? __jsx(\"a\", {\n    href: social[1]\n  }, __jsx(\"img\", {\n    src: \"/static/facebook.svg\",\n    className: classes.mediaSocial\n  })) : null, social[2].length > 0 ? __jsx(\"a\", {\n    href: social[2]\n  }, __jsx(\"img\", {\n    src: \"/static/twitter.svg\",\n    className: classes.mediaSocial\n  })) : null, social[3].length > 0 ? __jsx(\"a\", {\n    href: social[3]\n  }, __jsx(\"img\", {\n    src: \"/static/telegram.svg\",\n    className: classes.mediaSocial\n  })) : null)) : null), __jsx(\"div\", null, __jsx(\"div\", {\n    className: classes.name\n  }, name), __jsx(\"br\", null), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"\\u0410\\u0434\\u0440\\u0435\\u0441:\\xA0\"), __jsx(\"div\", {\n    className: classes.column\n  }, address.map((element, idx) => __jsx(\"div\", {\n    key: idx,\n    className: classes.value\n  }, element)))), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D:\\xA0\"), __jsx(\"div\", {\n    className: classes.column\n  }, phone.map((element, idx) => __jsx(\"a\", {\n    href: `tel:${element}`,\n    key: idx,\n    className: classes.value\n  }, element)))), __jsx(\"div\", {\n    className: classes.row\n  }, __jsx(\"div\", {\n    className: classes.nameField\n  }, \"E-mail:\\xA0\"), __jsx(\"div\", {\n    className: classes.column\n  }, email.map((element, idx) => __jsx(\"a\", {\n    href: `mailto:${element}`,\n    key: idx,\n    className: classes.value\n  }, element)))), __jsx(\"br\", null), __jsx(\"div\", {\n    className: classes.info\n  }, info))))), __jsx(\"input\", {\n    accept: \"image/*\",\n    style: {\n      display: 'none'\n    },\n    id: \"contained-button-file\",\n    type: \"file\",\n    onChange: handleChangeImage\n  }));\n});\n\nContact.getInitialProps = async function () {\n  return {\n    data: _objectSpread({}, (await getContact()))\n  };\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\pages\\contact.js"],"names":["Head","React","useState","App","connect","getContact","setContact","contactStyle","Card","CardContent","Input","Button","bindActionCreators","mini_dialogActions","Add","Remove","IconButton","InputAdornment","FormControl","InputLabel","TextField","Confirmation","AddSocial","urlMain","Contact","memo","props","classes","data","isMobileApp","app","name","setName","contact","address","setAddress","newAddress","setNewAddress","addAddress","editAddress","event","idx","target","value","deleteAddress","splice","email","setEmail","newEmail","setNewEmail","addEmail","editEmail","deleteEmail","phone","setPhone","newPhone","setNewPhone","addPhone","editPhone","deletePhone","social","setSocial","addSocial","console","log","info","setInfo","preview","setPreview","image","setImage","undefined","handleChangeImage","files","URL","createObjectURL","profile","user","setMiniDialog","showMiniDialog","filterSubCategory","sortSubCategory","page","column","row","role","media","mediaSocial","input","map","element","editElement","action","length","nameField","display","getInitialProps","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,oBAAvC;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,kBAAZ,MAAoC,8BAApC;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,SAASC,OAAT,QAAwB,0BAAxB;AAEA,MAAMC,OAAO,GAAGvB,KAAK,CAACwB,IAAN,CAAYC,KAAD,IAAW;AAClC,QAAMC,OAAO,GAAGpB,YAAY,EAA5B;AACA,QAAM;AAAEqB,IAAAA;AAAF,MAAWF,KAAjB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAkBH,KAAK,CAACI,GAA9B;AACA,MAAI;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkB9B,QAAQ,CAAC0B,IAAI,CAACK,OAAL,CAAaF,IAAd,CAA9B;AACA,MAAI;AAAA,OAACG,OAAD;AAAA,OAAUC;AAAV,MAAwBjC,QAAQ,CAAC0B,IAAI,CAACK,OAAL,CAAaC,OAAd,CAApC;AACA,MAAI;AAAA,OAACE,UAAD;AAAA,OAAaC;AAAb,MAA8BnC,QAAQ,CAAC,EAAD,CAA1C;;AACA,MAAIoC,UAAU,GAAG,MAAI;AACjBJ,IAAAA,OAAO,GAAG,CAAC,GAAGA,OAAJ,EAAaE,UAAb,CAAV;AACAD,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,IAAAA,aAAa,CAAC,EAAD,CAAb;AACH,GAJD;;AAKA,MAAIE,WAAW,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAc;AAC5BP,IAAAA,OAAO,CAACO,GAAD,CAAP,GAAeD,KAAK,CAACE,MAAN,CAAaC,KAA5B;AACAR,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,CAAD,CAAV;AACH,GAHD;;AAIA,MAAIU,aAAa,GAAIH,GAAD,IAAO;AACvBP,IAAAA,OAAO,CAACW,MAAR,CAAeJ,GAAf,EAAoB,CAApB;AACAN,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,CAAD,CAAV;AACH,GAHD;;AAIA,MAAI;AAAA,OAACY,KAAD;AAAA,OAAQC;AAAR,MAAoB7C,QAAQ,CAAC0B,IAAI,CAACK,OAAL,CAAaa,KAAd,CAAhC;AACA,MAAI;AAAA,OAACE,QAAD;AAAA,OAAWC;AAAX,MAA0B/C,QAAQ,CAAC,EAAD,CAAtC;;AACA,MAAIgD,QAAQ,GAAG,MAAI;AACfJ,IAAAA,KAAK,GAAG,CAAC,GAAGA,KAAJ,EAAWE,QAAX,CAAR;AACAD,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAJD;;AAKA,MAAIE,SAAS,GAAG,CAACX,KAAD,EAAQC,GAAR,KAAc;AAC1BK,IAAAA,KAAK,CAACL,GAAD,CAAL,GAAaD,KAAK,CAACE,MAAN,CAAaC,KAA1B;AACAI,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;AACH,GAHD;;AAIA,MAAIM,WAAW,GAAIX,GAAD,IAAO;AACrBK,IAAAA,KAAK,CAACD,MAAN,CAAaJ,GAAb,EAAkB,CAAlB;AACAM,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;AACH,GAHD;;AAIA,MAAI;AAAA,OAACO,KAAD;AAAA,OAAQC;AAAR,MAAoBpD,QAAQ,CAAC0B,IAAI,CAACK,OAAL,CAAaoB,KAAd,CAAhC;AACA,MAAI;AAAA,OAACE,QAAD;AAAA,OAAWC;AAAX,MAA0BtD,QAAQ,CAAC,EAAD,CAAtC;;AACA,MAAIuD,QAAQ,GAAG,MAAI;AACfJ,IAAAA,KAAK,GAAG,CAAC,GAAGA,KAAJ,EAAWE,QAAX,CAAR;AACAD,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAJD;;AAKA,MAAIE,SAAS,GAAG,CAAClB,KAAD,EAAQC,GAAR,KAAc;AAC1BY,IAAAA,KAAK,CAACZ,GAAD,CAAL,GAAaD,KAAK,CAACE,MAAN,CAAaC,KAA1B;AACAW,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;AACH,GAHD;;AAIA,MAAIM,WAAW,GAAIlB,GAAD,IAAO;AACrBY,IAAAA,KAAK,CAACR,MAAN,CAAaJ,GAAb,EAAkB,CAAlB;AACAa,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;AACH,GAHD;;AAIA,MAAI;AAAA,OAACO,MAAD;AAAA,OAASC;AAAT,MAAsB3D,QAAQ,CAAC0B,IAAI,CAACK,OAAL,CAAa2B,MAAd,CAAlC;;AACA,MAAIE,SAAS,GAAG,CAACnB,KAAD,EAAQF,GAAR,KAAc;AAC1BmB,IAAAA,MAAM,CAACnB,GAAD,CAAN,GAAcE,KAAd;AACAkB,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,CAAD,CAAT;AACH,GAHD;;AAIAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA,MAAI;AAAA,OAACK,IAAD;AAAA,OAAOC;AAAP,MAAkBhE,QAAQ,CAAC0B,IAAI,CAACK,OAAL,CAAagC,IAAd,CAA9B;AACA,MAAI;AAAA,OAACE,OAAD;AAAA,OAAUC;AAAV,MAAwBlE,QAAQ,CAAC0B,IAAI,CAACK,OAAL,CAAaoC,KAAb,KAAqB,EAArB,GAAwB,iBAAxB,GAA0CzC,IAAI,CAACK,OAAL,CAAaoC,KAAxD,CAApC;AACA,MAAI;AAAA,OAACA,KAAD;AAAA,OAAQC;AAAR,MAAoBpE,QAAQ,CAACqE,SAAD,CAAhC;;AACA,MAAIC,iBAAiB,GAAKhC,KAAD,IAAW;AAChC8B,IAAAA,QAAQ,CAAC9B,KAAK,CAACE,MAAN,CAAa+B,KAAb,CAAmB,CAAnB,CAAD,CAAR;AACAL,IAAAA,UAAU,CAACM,GAAG,CAACC,eAAJ,CAAoBnC,KAAK,CAACE,MAAN,CAAa+B,KAAb,CAAmB,CAAnB,CAApB,CAAD,CAAV;AACH,GAHD;;AAIA,QAAM;AAAEG,IAAAA;AAAF,MAAclD,KAAK,CAACmD,IAA1B;AACA,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAAoCrD,KAAK,CAACb,kBAAhD;AACA,SACI,MAAC,GAAD;AAAK,IAAA,OAAO,EAAEe,IAAI,CAACoD,iBAAnB;AAAsC,IAAA,KAAK,EAAEpD,IAAI,CAACqD,eAAlD;AAAmE,IAAA,QAAQ,EAAC;AAA5E,KACI,MAAC,IAAD,QACI,qBAAQlD,IAAR,CADJ,EAEI;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAC;AAAjC,IAFJ,EAGI;AAAM,IAAA,QAAQ,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAC;AAAlC,IAHJ,EAII;AAAM,IAAA,QAAQ,EAAC,gBAAf;AAAgC,IAAA,OAAO,EAAC;AAAxC,IAJJ,EAKI;AAAM,IAAA,QAAQ,EAAC,SAAf;AAAyB,IAAA,OAAO,EAAC;AAAjC,IALJ,EAMI;AAAM,IAAA,QAAQ,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAG,GAAER,OAAQ;AAA9C,IANJ,EAOI;AAAM,IAAA,QAAQ,EAAC,QAAf;AAAwB,IAAA,OAAO,EAAG,GAAEA,OAAQ;AAA5C,IAPJ,EAQI;AAAM,IAAA,GAAG,EAAC,WAAV;AAAsB,IAAA,IAAI,EAAG,GAAEA,OAAQ;AAAvC,IARJ,CADJ,EAWI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAEI,OAAO,CAACuD;AAAzB,KACQ,MAAC,WAAD;AAAa,IAAA,SAAS,EAAErD,WAAW,GAACF,OAAO,CAACwD,MAAT,GAAgBxD,OAAO,CAACyD;AAA3D,KAEQR,OAAO,CAACS,IAAR,KAAe,OAAf,GACI,4BACI;AAAK,IAAA,SAAS,EAAE1D,OAAO,CAACwD;AAAxB,KACI;AAAO,IAAA,OAAO,EAAC;AAAf,KACI;AACI,IAAA,SAAS,EAAExD,OAAO,CAAC2D,KADvB;AAEI,IAAA,GAAG,EAAEnB,OAFT;AAGI,IAAA,GAAG,EAAE;AAHT,IADJ,CADJ,+EASI;AAAK,IAAA,SAAS,EAAExC,OAAO,CAACyD;AAAxB,KACI;AAAK,IAAA,GAAG,EAAC,uBAAT;AAAiC,IAAA,OAAO,EAAE,MAAI;AAC1CN,MAAAA,aAAa,CAAC,WAAD,EAAc,MAAC,SAAD;AAAW,QAAA,IAAI,EAAElB,MAAM,CAAC,CAAD,CAAvB;AAA4B,QAAA,MAAM,EAAEE,SAApC;AAA+C,QAAA,GAAG,EAAE;AAApD,QAAd,CAAb;AACAiB,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAHD;AAGG,IAAA,SAAS,EAAEpD,OAAO,CAAC4D;AAHtB,IADJ,EAKI;AAAK,IAAA,GAAG,EAAC,sBAAT;AAAgC,IAAA,OAAO,EAAE,MAAI;AACzCT,MAAAA,aAAa,CAAC,UAAD,EAAa,MAAC,SAAD;AAAW,QAAA,IAAI,EAAElB,MAAM,CAAC,CAAD,CAAvB;AAA4B,QAAA,MAAM,EAAEE,SAApC;AAA+C,QAAA,GAAG,EAAE;AAApD,QAAb,CAAb;AACAiB,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAHD;AAGG,IAAA,SAAS,EAAEpD,OAAO,CAAC4D;AAHtB,IALJ,EASI;AAAK,IAAA,GAAG,EAAC,qBAAT;AAA+B,IAAA,OAAO,EAAE,MAAI;AACxCT,MAAAA,aAAa,CAAC,SAAD,EAAY,MAAC,SAAD;AAAW,QAAA,IAAI,EAAElB,MAAM,CAAC,CAAD,CAAvB;AAA4B,QAAA,MAAM,EAAEE,SAApC;AAA+C,QAAA,GAAG,EAAE;AAApD,QAAZ,CAAb;AACAiB,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAHD;AAGG,IAAA,SAAS,EAAEpD,OAAO,CAAC4D;AAHtB,IATJ,EAaI;AAAK,IAAA,GAAG,EAAC,sBAAT;AAAgC,IAAA,OAAO,EAAE,MAAI;AACzCT,MAAAA,aAAa,CAAC,UAAD,EAAa,MAAC,SAAD;AAAW,QAAA,IAAI,EAAElB,MAAM,CAAC,CAAD,CAAvB;AAA4B,QAAA,MAAM,EAAEE,SAApC;AAA+C,QAAA,GAAG,EAAE;AAApD,QAAb,CAAb;AACAiB,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAHD;AAGG,IAAA,SAAS,EAAEpD,OAAO,CAAC4D;AAHtB,IAbJ,CATJ,CADJ,EA6BI,mBACI,MAAC,SAAD;AACQ,IAAA,KAAK,EAAC,oBADd;AAEQ,IAAA,KAAK,EAAExD,IAFf;AAGQ,IAAA,SAAS,EAAEJ,OAAO,CAAC6D,KAH3B;AAIQ,IAAA,QAAQ,EAAGhD,KAAD,IAAS;AAACR,MAAAA,OAAO,CAACQ,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAP;AAA4B,KAJxD;AAKQ,IAAA,UAAU,EAAE;AACR,oBAAc;AADN;AALpB,IADJ,EAUI,MAAC,WAAD;AAAa,IAAA,SAAS,EAAEhB,OAAO,CAAC6D;AAAhC,KACI,MAAC,UAAD,0FADJ,EAEI,MAAC,KAAD;AACI,IAAA,KAAK,EAAEpD,UADX;AAEI,IAAA,QAAQ,EAAGI,KAAD,IAAS;AAACH,MAAAA,aAAa,CAACG,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAb;AAAkC,KAF1D;AAGI,IAAA,UAAU,EAAE;AACR,oBAAc;AADN,KAHhB;AAMI,IAAA,YAAY,EACR,MAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC;AAAzB,OACI,MAAC,UAAD;AACI,MAAA,OAAO,EAAE,MAAI;AACTL,QAAAA,UAAU;AACb,OAHL;AAII,oBAAW;AAJf,OAMI,MAAC,GAAD,OANJ,CADJ;AAPR,IAFJ,CAVJ,EAgCKJ,OAAO,CAACuD,GAAR,CAAY,CAACC,OAAD,EAAUjD,GAAV,KACT,MAAC,WAAD;AAAc,IAAA,GAAG,EAAEA,GAAnB;AAAwB,IAAA,SAAS,EAAEd,OAAO,CAAC6D;AAA3C,KACI,MAAC,UAAD,yCADJ,EAEI,MAAC,KAAD;AACI,IAAA,WAAW,EAAC,gCADhB;AAEI,IAAA,KAAK,EAAEE,OAFX;AAGI,IAAA,QAAQ,EAAGlD,KAAD,IAAS;AAACD,MAAAA,WAAW,CAACC,KAAD,EAAQC,GAAR,CAAX;AAAwB,KAHhD;AAII,IAAA,UAAU,EAAE;AACR,oBAAc;AADN,KAJhB;AAOI,IAAA,YAAY,EACR,MAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC;AAAzB,OACI,MAAC,UAAD;AACI,MAAA,OAAO,EAAE,MAAI;AACTG,QAAAA,aAAa,CAACH,GAAD,CAAb;AACH,OAHL;AAII,oBAAW;AAJf,OAMI,MAAC,MAAD,OANJ,CADJ;AARR,IAFJ,CADH,CAhCL,EAyDI,MAAC,WAAD;AAAa,IAAA,SAAS,EAAEd,OAAO,CAAC6D;AAAhC,KACI,MAAC,UAAD,iEADJ,EAEI,MAAC,KAAD;AACI,IAAA,KAAK,EAAExC,QADX;AAEI,IAAA,QAAQ,EAAGR,KAAD,IAAS;AAACS,MAAAA,WAAW,CAACT,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAX;AAAgC,KAFxD;AAGI,IAAA,UAAU,EAAE;AACR,oBAAc;AADN,KAHhB;AAMI,IAAA,YAAY,EACR,MAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC;AAAzB,OACI,MAAC,UAAD;AACI,MAAA,OAAO,EAAE,MAAI;AACTO,QAAAA,QAAQ;AACX,OAHL;AAII,oBAAW;AAJf,OAMI,MAAC,GAAD,OANJ,CADJ;AAPR,IAFJ,CAzDJ,EA+EKJ,KAAK,CAAC2C,GAAN,CAAU,CAACC,OAAD,EAAUjD,GAAV,KACP,MAAC,WAAD;AAAc,IAAA,GAAG,EAAEA,GAAnB;AAAwB,IAAA,SAAS,EAAEd,OAAO,CAAC6D;AAA3C,KACI,MAAC,UAAD,6EADJ,EAEI,MAAC,KAAD;AACI,IAAA,KAAK,EAAEE,OADX;AAEI,IAAA,QAAQ,EAAGlD,KAAD,IAAS;AAACW,MAAAA,SAAS,CAACX,KAAD,EAAQC,GAAR,CAAT;AAAsB,KAF9C;AAGI,IAAA,UAAU,EAAE;AACR,oBAAc;AADN,KAHhB;AAMI,IAAA,YAAY,EACR,MAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC;AAAzB,OACI,MAAC,UAAD;AACI,MAAA,OAAO,EAAE,MAAI;AACTW,QAAAA,WAAW,CAACX,GAAD,CAAX;AACH,OAHL;AAII,oBAAW;AAJf,OAMI,MAAC,MAAD,OANJ,CADJ;AAPR,IAFJ,CADH,CA/EL,EAuGI,MAAC,WAAD;AAAa,IAAA,SAAS,EAAEd,OAAO,CAAC6D;AAAhC,KACI,MAAC,UAAD,2JADJ,EAEI,MAAC,KAAD;AACI,IAAA,KAAK,EAAEjC,QADX;AAEI,IAAA,QAAQ,EAAGf,KAAD,IAAS;AAACgB,MAAAA,WAAW,CAAChB,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAX;AAAgC,KAFxD;AAGI,IAAA,UAAU,EAAE;AACR,oBAAc;AADN,KAHhB;AAMI,IAAA,YAAY,EACR,MAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC;AAAzB,OACI,MAAC,UAAD;AACI,MAAA,OAAO,EAAE,MAAI;AACTc,QAAAA,QAAQ;AACX,OAHL;AAII,oBAAW;AAJf,OAMI,MAAC,GAAD,OANJ,CADJ;AAPR,IAFJ,CAvGJ,EA6HKJ,KAAK,CAACoC,GAAN,CAAU,CAACC,OAAD,EAAUjD,GAAV,KACP,MAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,GAAlB;AAAuB,IAAA,SAAS,EAAEd,OAAO,CAAC6D;AAA1C,KACI,MAAC,UAAD,6EADJ,EAEI,MAAC,KAAD;AACI,IAAA,KAAK,EAAEE,OADX;AAEI,IAAA,QAAQ,EAAGlD,KAAD,IAAS;AAACkB,MAAAA,SAAS,CAAClB,KAAD,EAAQC,GAAR,CAAT;AAAsB,KAF9C;AAGI,IAAA,UAAU,EAAE;AACR,oBAAc;AADN,KAHhB;AAMI,IAAA,YAAY,EACR,MAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC;AAAzB,OACI,MAAC,UAAD;AACI,MAAA,OAAO,EAAE,MAAI;AACTkB,QAAAA,WAAW,CAAClB,GAAD,CAAX;AACH,OAHL;AAII,oBAAW;AAJf,OAMI,MAAC,MAAD,OANJ,CADJ;AAPR,IAFJ,CADH,CA7HL,EAqJI,MAAC,SAAD;AACI,IAAA,SAAS,EAAE,IADf;AAEI,IAAA,KAAK,EAAC,8DAFV;AAGI,IAAA,KAAK,EAAEwB,IAHX;AAII,IAAA,SAAS,EAAEtC,OAAO,CAAC6D,KAJvB;AAKI,IAAA,QAAQ,EAAGhD,KAAD,IAAS;AAAC0B,MAAAA,OAAO,CAAC1B,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAP;AAA4B,KALpD;AAMI,IAAA,UAAU,EAAE;AACR,oBAAc;AADN;AANhB,IArJJ,EA+JI;AAAK,IAAA,SAAS,EAAEhB,OAAO,CAACyD;AAAxB,KACI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,YAAS;AACtB,UAAIO,WAAW,GAAG;AACd5D,QAAAA,IAAI,EAAEA,IADQ;AAEdG,QAAAA,OAAO,EAAEA,OAFK;AAGdY,QAAAA,KAAK,EAAEA,KAHO;AAIdO,QAAAA,KAAK,EAAEA,KAJO;AAKdO,QAAAA,MAAM,EAAEA,MALM;AAMdK,QAAAA,IAAI,EAAEA;AANQ,OAAlB;AAQA,UAAGI,KAAK,KAAGE,SAAX,EAAqBoB,WAAW,CAACtB,KAAZ,GAAoBA,KAApB;;AACrB,YAAMuB,MAAM,GAAG,YAAW;AACtB,cAAMtF,UAAU,CAACqF,WAAD,CAAhB;AACH,OAFD;;AAGAb,MAAAA,aAAa,CAAC,cAAD,EAAiB,MAAC,YAAD;AAAc,QAAA,MAAM,EAAEc;AAAtB,QAAjB,CAAb;AACAb,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAfD;AAeG,IAAA,IAAI,EAAC,OAfR;AAegB,IAAA,KAAK,EAAC;AAftB,8DADJ,CA/JJ,CA7BJ,CADJ,GAoNI,4BACA;AAAK,IAAA,SAAS,EAAEpD,OAAO,CAACwD;AAAxB,KACI;AACI,IAAA,SAAS,EAAExD,OAAO,CAAC2D,KADvB;AAEI,IAAA,GAAG,EAAEnB,OAFT;AAGI,IAAA,GAAG,EAAEpC;AAHT,IADJ,EAOQ6B,MAAM,CAAC,CAAD,CAAN,CAAUiC,MAAV,GAAiB,CAAjB,IAAoBjC,MAAM,CAAC,CAAD,CAAN,CAAUiC,MAAV,GAAiB,CAArC,IAAwCjC,MAAM,CAAC,CAAD,CAAN,CAAUiC,MAAV,GAAiB,CAAzD,IAA4DjC,MAAM,CAAC,CAAD,CAAN,CAAUiC,MAAV,GAAiB,CAA7E,GACI,yGAEJ;AAAK,IAAA,SAAS,EAAElE,OAAO,CAACyD;AAAxB,KAEQxB,MAAM,CAAC,CAAD,CAAN,CAAUiC,MAAV,GAAiB,CAAjB,GACI;AAAG,IAAA,IAAI,EAAEjC,MAAM,CAAC,CAAD;AAAf,KACI;AAAK,IAAA,GAAG,EAAC,uBAAT;AAAiC,IAAA,SAAS,EAAEjC,OAAO,CAAC4D;AAApD,IADJ,CADJ,GAKI,IAPZ,EAUQ3B,MAAM,CAAC,CAAD,CAAN,CAAUiC,MAAV,GAAiB,CAAjB,GACI;AAAG,IAAA,IAAI,EAAEjC,MAAM,CAAC,CAAD;AAAf,KACI;AAAK,IAAA,GAAG,EAAC,sBAAT;AAAgC,IAAA,SAAS,EAAEjC,OAAO,CAAC4D;AAAnD,IADJ,CADJ,GAKI,IAfZ,EAkBQ3B,MAAM,CAAC,CAAD,CAAN,CAAUiC,MAAV,GAAiB,CAAjB,GACI;AAAG,IAAA,IAAI,EAAEjC,MAAM,CAAC,CAAD;AAAf,KACI;AAAK,IAAA,GAAG,EAAC,qBAAT;AAA+B,IAAA,SAAS,EAAEjC,OAAO,CAAC4D;AAAlD,IADJ,CADJ,GAKI,IAvBZ,EA0BQ3B,MAAM,CAAC,CAAD,CAAN,CAAUiC,MAAV,GAAiB,CAAjB,GACI;AAAG,IAAA,IAAI,EAAEjC,MAAM,CAAC,CAAD;AAAf,KACI;AAAK,IAAA,GAAG,EAAC,sBAAT;AAAgC,IAAA,SAAS,EAAEjC,OAAO,CAAC4D;AAAnD,IADJ,CADJ,GAKI,IA/BZ,CAFI,CADJ,GAwCI,IA/CZ,CADA,EAmDY,mBACI;AAAK,IAAA,SAAS,EAAE5D,OAAO,CAACI;AAAxB,KACKA,IADL,CADJ,EAII,iBAJJ,EAKI;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACyD;AAAxB,KACI;AAAK,IAAA,SAAS,EAAEzD,OAAO,CAACmE;AAAxB,2CADJ,EAII;AAAK,IAAA,SAAS,EAAEnE,OAAO,CAACwD;AAAxB,KACKjD,OAAO,CAACuD,GAAR,CAAY,CAACC,OAAD,EAAUjD,GAAV,KACT;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAe,IAAA,SAAS,EAAEd,OAAO,CAACgB;AAAlC,KACK+C,OADL,CADH,CADL,CAJJ,CALJ,EAiBI;AAAK,IAAA,SAAS,EAAE/D,OAAO,CAACyD;AAAxB,KACI;AAAK,IAAA,SAAS,EAAEzD,OAAO,CAACmE;AAAxB,uDADJ,EAII;AAAK,IAAA,SAAS,EAAEnE,OAAO,CAACwD;AAAxB,KACK9B,KAAK,CAACoC,GAAN,CAAU,CAACC,OAAD,EAAUjD,GAAV,KACP;AAAG,IAAA,IAAI,EAAG,OAAMiD,OAAQ,EAAxB;AAA2B,IAAA,GAAG,EAAEjD,GAAhC;AAAqC,IAAA,SAAS,EAAEd,OAAO,CAACgB;AAAxD,KACK+C,OADL,CADH,CADL,CAJJ,CAjBJ,EA6BI;AAAK,IAAA,SAAS,EAAE/D,OAAO,CAACyD;AAAxB,KACI;AAAK,IAAA,SAAS,EAAEzD,OAAO,CAACmE;AAAxB,mBADJ,EAII;AAAK,IAAA,SAAS,EAAEnE,OAAO,CAACwD;AAAxB,KACKrC,KAAK,CAAC2C,GAAN,CAAU,CAACC,OAAD,EAAUjD,GAAV,KACP;AAAG,IAAA,IAAI,EAAG,UAASiD,OAAQ,EAA3B;AAA8B,IAAA,GAAG,EAAEjD,GAAnC;AAAwC,IAAA,SAAS,EAAEd,OAAO,CAACgB;AAA3D,KACK+C,OADL,CADH,CADL,CAJJ,CA7BJ,EAyCI,iBAzCJ,EA0CI;AAAK,IAAA,SAAS,EAAE/D,OAAO,CAACsC;AAAxB,KACKA,IADL,CA1CJ,CAnDZ,CAtNZ,CADR,CAXJ,EAuUI;AACI,IAAA,MAAM,EAAC,SADX;AAEI,IAAA,KAAK,EAAE;AAAE8B,MAAAA,OAAO,EAAE;AAAX,KAFX;AAGI,IAAA,EAAE,EAAC,uBAHP;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,QAAQ,EAAEvB;AALd,IAvUJ,CADJ;AAiVH,CAlZe,CAAhB;;AAoZAhD,OAAO,CAACwE,eAAR,GAA0B,kBAAiB;AACvC,SAAO;AACHpE,IAAAA,IAAI,qBACG,MAAMvB,UAAU,EADnB;AADD,GAAP;AAMH,CAPD;;AASA,SAAS4F,eAAT,CAA0BC,KAA1B,EAAiC;AAC7B,SAAO;AACHrB,IAAAA,IAAI,EAAEqB,KAAK,CAACrB,IADT;AAEH/C,IAAAA,GAAG,EAAEoE,KAAK,CAACpE;AAFR,GAAP;AAIH;;AAED,SAASqE,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHvF,IAAAA,kBAAkB,EAAED,kBAAkB,CAACC,kBAAD,EAAqBuF,QAArB;AADnC,GAAP;AAGH;;AAED,eAAehG,OAAO,CAAC6F,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C3E,OAA7C,CAAf","sourcesContent":["import Head from 'next/head';\r\nimport React, { useState } from 'react';\r\nimport App from '../layouts/App';\r\nimport { connect } from 'react-redux'\r\nimport { getContact, setContact } from '../src/gql/contact'\r\nimport contactStyle from '../src/styleMUI/contact'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Input from '@material-ui/core/Input';\r\nimport Button from '@material-ui/core/Button';\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../redux/actions/mini_dialog'\r\nimport Add from '@material-ui/icons/Add';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Confirmation from '../components/dialog/Confirmation'\r\nimport AddSocial from '../components/dialog/AddSocial'\r\nimport { urlMain } from '../redux/constants/other'\r\n\r\nconst Contact = React.memo((props) => {\r\n    const classes = contactStyle();\r\n    const { data } = props;\r\n    const { isMobileApp } = props.app;\r\n    let [name, setName] = useState(data.contact.name);\r\n    let [address, setAddress] = useState(data.contact.address);\r\n    let [newAddress, setNewAddress] = useState('');\r\n    let addAddress = ()=>{\r\n        address = [...address, newAddress]\r\n        setAddress(address)\r\n        setNewAddress('')\r\n    };\r\n    let editAddress = (event, idx)=>{\r\n        address[idx] = event.target.value\r\n        setAddress([...address])\r\n    };\r\n    let deleteAddress = (idx)=>{\r\n        address.splice(idx, 1);\r\n        setAddress([...address])\r\n    };\r\n    let [email, setEmail] = useState(data.contact.email);\r\n    let [newEmail, setNewEmail] = useState('');\r\n    let addEmail = ()=>{\r\n        email = [...email, newEmail]\r\n        setEmail(email)\r\n        setNewEmail('')\r\n    };\r\n    let editEmail = (event, idx)=>{\r\n        email[idx] = event.target.value\r\n        setEmail([...email])\r\n    };\r\n    let deleteEmail = (idx)=>{\r\n        email.splice(idx, 1);\r\n        setEmail([...email])\r\n    };\r\n    let [phone, setPhone] = useState(data.contact.phone);\r\n    let [newPhone, setNewPhone] = useState('');\r\n    let addPhone = ()=>{\r\n        phone = [...phone, newPhone]\r\n        setPhone(phone)\r\n        setNewPhone('')\r\n    };\r\n    let editPhone = (event, idx)=>{\r\n        phone[idx] = event.target.value\r\n        setPhone([...phone])\r\n    };\r\n    let deletePhone = (idx)=>{\r\n        phone.splice(idx, 1);\r\n        setPhone([...phone])\r\n    };\r\n    let [social, setSocial] = useState(data.contact.social);\r\n    let addSocial = (value, idx)=>{\r\n        social[idx] = value\r\n        setSocial([...social])\r\n    };\r\n    console.log(social)\r\n    let [info, setInfo] = useState(data.contact.info);\r\n    let [preview, setPreview] = useState(data.contact.image===''?'/static/add.png':data.contact.image);\r\n    let [image, setImage] = useState(undefined);\r\n    let handleChangeImage = ((event) => {\r\n        setImage(event.target.files[0])\r\n        setPreview(URL.createObjectURL(event.target.files[0]))\r\n    })\r\n    const { profile } = props.user;\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    return (\r\n        <App filters={data.filterSubCategory} sorts={data.sortSubCategory} pageName='Контакты'>\r\n            <Head>\r\n                <title>{name}</title>\r\n                <meta name='description' content='Азык – это онлайн платформа для заказа товаров оптом, разработанная специально для малого и среднего бизнеса.  Она объединяет производителей и торговые точки напрямую, сокращая расходы и повышая продажи. Азык предоставляет своим пользователям мощные технологии для масштабирования и развития своего бизнеса.' />\r\n                <meta property='og:title' content='Азык - электронный склад связывающий производителя с торговой точкой' />\r\n                <meta property='og:description' content='Азык – это онлайн платформа для заказа товаров оптом, разработанная специально для малого и среднего бизнеса.  Она объединяет производителей и торговые точки напрямую, сокращая расходы и повышая продажи. Азык предоставляет своим пользователям мощные технологии для масштабирования и развития своего бизнеса.' />\r\n                <meta property='og:type' content='website' />\r\n                <meta property='og:image' content={`${urlMain}/static/512x512.png`} />\r\n                <meta property=\"og:url\" content={`${urlMain}/contact`} />\r\n                <link rel='canonical' href={`${urlMain}/contact`}/>\r\n            </Head>\r\n            <Card className={classes.page}>\r\n                    <CardContent className={isMobileApp?classes.column:classes.row}>\r\n                        {\r\n                            profile.role==='admin'?\r\n                                <>\r\n                                    <div className={classes.column}>\r\n                                        <label htmlFor='contained-button-file'>\r\n                                            <img\r\n                                                className={classes.media}\r\n                                                src={preview}\r\n                                                alt={'Добавить'}\r\n                                            />\r\n                                        </label>\r\n                                        Наши страницы\r\n                                        <div className={classes.row}>\r\n                                            <img src='/static/instagram.svg' onClick={()=>{\r\n                                                setMiniDialog('Instagram', <AddSocial data={social[0]} action={addSocial} idx={0}/>)\r\n                                                showMiniDialog(true)\r\n                                            }} className={classes.mediaSocial}/>\r\n                                            <img src='/static/facebook.svg' onClick={()=>{\r\n                                                setMiniDialog('Facebook', <AddSocial data={social[1]} action={addSocial} idx={0}/>)\r\n                                                showMiniDialog(true)\r\n                                            }} className={classes.mediaSocial}/>\r\n                                            <img src='/static/twitter.svg' onClick={()=>{\r\n                                                setMiniDialog('Twitter', <AddSocial data={social[2]} action={addSocial} idx={0}/>)\r\n                                                showMiniDialog(true)\r\n                                            }} className={classes.mediaSocial}/>\r\n                                            <img src='/static/telegram.svg' onClick={()=>{\r\n                                                setMiniDialog('Telegram', <AddSocial data={social[3]} action={addSocial} idx={0}/>)\r\n                                                showMiniDialog(true)\r\n                                            }} className={classes.mediaSocial}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <TextField\r\n                                                label='Имя'\r\n                                                value={name}\r\n                                                className={classes.input}\r\n                                                onChange={(event)=>{setName(event.target.value)}}\r\n                                                inputProps={{\r\n                                                    'aria-label': 'description',\r\n                                                }}\r\n                                            />\r\n                                        <FormControl className={classes.input}>\r\n                                            <InputLabel>Добавить адрес</InputLabel>\r\n                                            <Input\r\n                                                value={newAddress}\r\n                                                onChange={(event)=>{setNewAddress(event.target.value)}}\r\n                                                inputProps={{\r\n                                                    'aria-label': 'description',\r\n                                                }}\r\n                                                endAdornment={\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                            onClick={()=>{\r\n                                                                addAddress()\r\n                                                            }}\r\n                                                            aria-label='toggle password visibility'\r\n                                                        >\r\n                                                            <Add/>\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                }\r\n                                            />\r\n                                        </FormControl>\r\n                                        {address.map((element, idx)=>\r\n                                            <FormControl  key={idx} className={classes.input}>\r\n                                                <InputLabel>Адрес</InputLabel>\r\n                                                <Input\r\n                                                    placeholder='Адрес'\r\n                                                    value={element}\r\n                                                    onChange={(event)=>{editAddress(event, idx)}}\r\n                                                    inputProps={{\r\n                                                        'aria-label': 'description',\r\n                                                    }}\r\n                                                    endAdornment={\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            <IconButton\r\n                                                                onClick={()=>{\r\n                                                                    deleteAddress(idx)\r\n                                                                }}\r\n                                                                aria-label='toggle password visibility'\r\n                                                            >\r\n                                                                <Remove/>\r\n                                                            </IconButton>\r\n                                                        </InputAdornment>\r\n                                                    }\r\n                                                />\r\n                                            </FormControl>\r\n                                        )}\r\n                                        <FormControl className={classes.input}>\r\n                                            <InputLabel>Добавить email</InputLabel>\r\n                                            <Input\r\n                                                value={newEmail}\r\n                                                onChange={(event)=>{setNewEmail(event.target.value)}}\r\n                                                inputProps={{\r\n                                                    'aria-label': 'description',\r\n                                                }}\r\n                                                endAdornment={\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                            onClick={()=>{\r\n                                                                addEmail()\r\n                                                            }}\r\n                                                            aria-label='toggle password visibility'\r\n                                                        >\r\n                                                            <Add/>\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                }\r\n                                            />\r\n                                        </FormControl>\r\n                                        {email.map((element, idx)=>\r\n                                            <FormControl  key={idx} className={classes.input}>\r\n                                                <InputLabel>Организация</InputLabel>\r\n                                                <Input\r\n                                                    value={element}\r\n                                                    onChange={(event)=>{editEmail(event, idx)}}\r\n                                                    inputProps={{\r\n                                                        'aria-label': 'description',\r\n                                                    }}\r\n                                                    endAdornment={\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            <IconButton\r\n                                                                onClick={()=>{\r\n                                                                    deleteEmail(idx)\r\n                                                                }}\r\n                                                                aria-label='toggle password visibility'\r\n                                                            >\r\n                                                                <Remove/>\r\n                                                            </IconButton>\r\n                                                        </InputAdornment>\r\n                                                    }\r\n                                                />\r\n                                            </FormControl>\r\n                                        )}\r\n                                        <FormControl className={classes.input}>\r\n                                            <InputLabel>Добавить телефон. Формат: +996555780861</InputLabel>\r\n                                            <Input\r\n                                                value={newPhone}\r\n                                                onChange={(event)=>{setNewPhone(event.target.value)}}\r\n                                                inputProps={{\r\n                                                    'aria-label': 'description',\r\n                                                }}\r\n                                                endAdornment={\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                            onClick={()=>{\r\n                                                                addPhone()\r\n                                                            }}\r\n                                                            aria-label='toggle password visibility'\r\n                                                        >\r\n                                                            <Add/>\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                }\r\n                                            />\r\n                                        </FormControl>\r\n                                        {phone.map((element, idx)=>\r\n                                            <FormControl key={idx} className={classes.input}>\r\n                                                <InputLabel>Организация</InputLabel>\r\n                                                <Input\r\n                                                    value={element}\r\n                                                    onChange={(event)=>{editPhone(event, idx)}}\r\n                                                    inputProps={{\r\n                                                        'aria-label': 'description',\r\n                                                    }}\r\n                                                    endAdornment={\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            <IconButton\r\n                                                                onClick={()=>{\r\n                                                                    deletePhone(idx)\r\n                                                                }}\r\n                                                                aria-label='toggle password visibility'\r\n                                                            >\r\n                                                                <Remove/>\r\n                                                            </IconButton>\r\n                                                        </InputAdornment>\r\n                                                    }\r\n                                                />\r\n                                            </FormControl>\r\n                                        )}\r\n                                        <TextField\r\n                                            multiline={true}\r\n                                            label='Информация'\r\n                                            value={info}\r\n                                            className={classes.input}\r\n                                            onChange={(event)=>{setInfo(event.target.value)}}\r\n                                            inputProps={{\r\n                                                'aria-label': 'description',\r\n                                            }}\r\n                                        />\r\n                                        <div className={classes.row}>\r\n                                            <Button onClick={async()=>{\r\n                                                let editElement = {\r\n                                                    name: name,\r\n                                                    address: address,\r\n                                                    email: email,\r\n                                                    phone: phone,\r\n                                                    social: social,\r\n                                                    info: info\r\n                                                }\r\n                                                if(image!==undefined)editElement.image = image\r\n                                                const action = async() => {\r\n                                                    await setContact(editElement)\r\n                                                }\r\n                                                setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                                                showMiniDialog(true)\r\n                                            }} size='small' color='primary'>\r\n                                                Сохранить\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                    </>\r\n                                :\r\n                                <>\r\n                                <div className={classes.column}>\r\n                                    <img\r\n                                        className={classes.media}\r\n                                        src={preview}\r\n                                        alt={name}\r\n                                    />\r\n                                    {\r\n                                        social[0].length>0||social[1].length>0||social[2].length>0||social[3].length>0?\r\n                                            <>\r\n                                        Наши страницы\r\n                                        <div className={classes.row}>\r\n                                            {\r\n                                                social[0].length>0?\r\n                                                    <a href={social[0]}>\r\n                                                        <img src='/static/instagram.svg' className={classes.mediaSocial}/>\r\n                                                    </a>\r\n                                                    :\r\n                                                    null\r\n                                            }\r\n                                            {\r\n                                                social[1].length>0?\r\n                                                    <a href={social[1]}>\r\n                                                        <img src='/static/facebook.svg' className={classes.mediaSocial}/>\r\n                                                    </a>\r\n                                                    :\r\n                                                    null\r\n                                            }\r\n                                            {\r\n                                                social[2].length>0?\r\n                                                    <a href={social[2]}>\r\n                                                        <img src='/static/twitter.svg' className={classes.mediaSocial}/>\r\n                                                    </a>\r\n                                                    :\r\n                                                    null\r\n                                            }\r\n                                            {\r\n                                                social[3].length>0?\r\n                                                    <a href={social[3]}>\r\n                                                        <img src='/static/telegram.svg' className={classes.mediaSocial}/>\r\n                                                    </a>\r\n                                                    :\r\n                                                    null\r\n\r\n                                            }\r\n                                        </div>\r\n                                        </>\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                </div>\r\n                                            <div>\r\n                                                <div className={classes.name}>\r\n                                                    {name}\r\n                                                </div>\r\n                                                <br/>\r\n                                                <div className={classes.row}>\r\n                                                    <div className={classes.nameField}>\r\n                                                        Адрес:&nbsp;\r\n                                                    </div>\r\n                                                    <div className={classes.column}>\r\n                                                        {address.map((element, idx)=>\r\n                                                            <div key={idx} className={classes.value}>\r\n                                                                {element}\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className={classes.row}>\r\n                                                    <div className={classes.nameField}>\r\n                                                        Телефон:&nbsp;\r\n                                                    </div>\r\n                                                    <div className={classes.column}>\r\n                                                        {phone.map((element, idx)=>\r\n                                                            <a href={`tel:${element}`} key={idx} className={classes.value}>\r\n                                                                {element}\r\n                                                            </a>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className={classes.row}>\r\n                                                    <div className={classes.nameField}>\r\n                                                        E-mail:&nbsp;\r\n                                                    </div>\r\n                                                    <div className={classes.column}>\r\n                                                        {email.map((element, idx)=>\r\n                                                            <a href={`mailto:${element}`} key={idx} className={classes.value}>\r\n                                                                {element}\r\n                                                            </a>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <br/>\r\n                                                <div className={classes.info}>\r\n                                                    {info}\r\n                                                </div>\r\n                                            </div>\r\n                                            </>\r\n                        }\r\n                        </CardContent>\r\n                </Card>\r\n            <input\r\n                accept='image/*'\r\n                style={{ display: 'none' }}\r\n                id='contained-button-file'\r\n                type='file'\r\n                onChange={handleChangeImage}\r\n            />\r\n        </App>\r\n    )\r\n})\r\n\r\nContact.getInitialProps = async function() {\r\n    return {\r\n        data: {\r\n            ...await getContact()\r\n        }\r\n\r\n    };\r\n};\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        user: state.user,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);"]},"metadata":{},"sourceType":"module"}