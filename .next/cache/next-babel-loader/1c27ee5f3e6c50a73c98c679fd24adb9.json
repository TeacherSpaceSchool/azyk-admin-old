{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nexport let urlGQL;\nexport let urlGQLws;\nexport let urlMain;\n\nif (process.env.URL.trim() === 'azyk.store') {\n  urlGQL = `https://${process.env.URL}:3000/graphql`;\n  urlGQLws = `ws://${process.env.URL}:3000/graphql`;\n  urlMain = `https://${process.env.URL}:3000`;\n} else {\n  urlGQL = `http://${process.env.URL}:3000/graphql`;\n  urlGQLws = `ws://${process.env.URL}:3000/graphql`;\n  urlMain = `http://${process.env.URL}:3000`;\n}\n\nexport const validMail = mail => {\n  return /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()\\.,;\\s@\\\"]+\\.{0,1})+([^<>()\\.,;:\\s@\\\"]{2,}|[\\d\\.]+))$/.test(mail);\n};\nexport const validPhone = phone => {\n  return /^[+]{1}996[0-9]{9}$/.test(phone);\n};\nexport const checkInt = int => {\n  return isNaN(_parseInt(int)) ? 0 : _parseInt(int);\n};","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\redux\\constants\\other.js"],"names":["urlGQL","urlGQLws","urlMain","process","env","URL","trim","validMail","mail","test","validPhone","phone","checkInt","int","isNaN"],"mappings":";AAAA,OAAO,IAAIA,MAAJ;AACP,OAAO,IAAIC,QAAJ;AACP,OAAO,IAAIC,OAAJ;;AACP,IAAGC,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAgBC,IAAhB,OAAyB,YAA5B,EAA0C;AACtCN,EAAAA,MAAM,GAAI,WAAUG,OAAO,CAACC,GAAR,CAAYC,GAAI,eAApC;AACAJ,EAAAA,QAAQ,GAAI,QAAOE,OAAO,CAACC,GAAR,CAAYC,GAAI,eAAnC;AACAH,EAAAA,OAAO,GAAI,WAAUC,OAAO,CAACC,GAAR,CAAYC,GAAI,OAArC;AACH,CAJD,MAKK;AACDL,EAAAA,MAAM,GAAI,UAASG,OAAO,CAACC,GAAR,CAAYC,GAAI,eAAnC;AACAJ,EAAAA,QAAQ,GAAI,QAAOE,OAAO,CAACC,GAAR,CAAYC,GAAI,eAAnC;AACAH,EAAAA,OAAO,GAAI,UAASC,OAAO,CAACC,GAAR,CAAYC,GAAI,OAApC;AACH;;AAED,OAAO,MAAME,SAAS,GAAIC,IAAD,IACzB;AACI,SAAO,gIAAgIC,IAAhI,CAAqID,IAArI,CAAP;AACH,CAHM;AAIP,OAAO,MAAME,UAAU,GAAIC,KAAD,IAC1B;AACI,SAAO,sBAAsBF,IAAtB,CAA2BE,KAA3B,CAAP;AACH,CAHM;AAIP,OAAO,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAC7B,SAAOC,KAAK,CAAC,UAASD,GAAT,CAAD,CAAL,GAAqB,CAArB,GAAuB,UAASA,GAAT,CAA9B;AACH,CAFM","sourcesContent":["export let urlGQL\r\nexport let urlGQLws\r\nexport let urlMain\r\nif(process.env.URL.trim()==='azyk.store') {\r\n    urlGQL = `https://${process.env.URL}:3000/graphql`\r\n    urlGQLws = `ws://${process.env.URL}:3000/graphql`\r\n    urlMain = `https://${process.env.URL}:3000`\r\n}\r\nelse {\r\n    urlGQL = `http://${process.env.URL}:3000/graphql`\r\n    urlGQLws = `ws://${process.env.URL}:3000/graphql`\r\n    urlMain = `http://${process.env.URL}:3000`\r\n}\r\n\r\nexport const validMail = (mail) =>\r\n{\r\n    return /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()\\.,;\\s@\\\"]+\\.{0,1})+([^<>()\\.,;:\\s@\\\"]{2,}|[\\d\\.]+))$/.test(mail);\r\n}\r\nexport const validPhone = (phone) =>\r\n{\r\n    return /^[+]{1}996[0-9]{9}$/.test(phone);\r\n}\r\nexport const checkInt = (int) => {\r\n    return isNaN(parseInt(int))?0:parseInt(int)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}