{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nconst regexpUA = /(Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile|iOS|Mobile)/;\nexport const checkMobile = ua => {\n  return regexpUA.exec(ua) !== null;\n};\nconst regexpAuth = /(\\s)?jwt=(\\S)+(;)?/;\nexport const checkAuth = auth => {\n  return regexpAuth.exec(auth) !== null;\n};\nexport const getJWT = auth => {\n  let res = regexpAuth.exec(auth);\n  return res !== null ? res[0].trim().replace('jwt=', '') : undefined;\n};\nexport const checkInt = int => {\n  return isNaN(_parseInt(int)) ? 0 : _parseInt(int);\n};\nexport const pdDDMMYYYY = date => {\n  date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\n  date = _JSON$stringify(date).split('-');\n  date = date[2].split('T')[0] + '.' + date[1] + '.' + date[0].replace('\"', '');\n  return date;\n};\nexport const pdDDMMYY = date => {\n  date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\n  date = _JSON$stringify(date).split('-');\n  date = date[2].split('T')[0] + '.' + date[1] + '.' + date[0].replace('\"', '').substring(2, 4);\n  return date;\n};\nexport const pdDatePicker = date => {\n  date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\n  date = _JSON$stringify(date).split('-');\n  date = date[0].replace('\"', '') + '-' + date[1] + '-' + date[2].split('T')[0];\n  return date;\n};\nexport const pdDDMMYYHHMM = date => {\n  date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\n  date = _JSON$stringify(date).split('-');\n  date = date[2].split('T')[0] + '.' + date[1] + '.' + date[0].replace('\"', '').substring(2, 4) + ' ' + date[2].split('T')[1].split(':')[0] + ':' + date[2].split('T')[1].split(':')[1];\n  return date;\n};","map":null,"metadata":{},"sourceType":"module"}