{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\components\\\\employment\\\\CardEmployment.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport cardEmploymentStyle from '../../src/styleMUI/employment/cardEmployment.js';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport Button from '@material-ui/core/Button';\nimport CardActions from '@material-ui/core/CardActions';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport { onoffEmployment, deleteEmployment } from '../../src/gql/employment';\nimport Confirmation from '../../components/dialog/Confirmation';\nvar CardEmployment = React.memo(function (props) {\n  var classes = cardEmploymentStyle();\n  var element = props.element,\n      setList = props.setList;\n  var isMobileApp = props.app.isMobileApp;\n  var profile = props.user.profile;\n  var _props$mini_dialogAct = props.mini_dialogActions,\n      setMiniDialog = _props$mini_dialogAct.setMiniDialog,\n      showMiniDialog = _props$mini_dialogAct.showMiniDialog;\n\n  var _useState = useState(element !== undefined ? element.user.status : ''),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  return __jsx(Card, {\n    className: isMobileApp ? classes.cardM : classes.cardD,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/employment/[id]\",\n    as: \"/employment/\".concat(element.user._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"\\u0418\\u043C\\u044F:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, element.name)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D:\\xA0\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, element.phone.map(function (phone, idx) {\n    return __jsx(\"div\", {\n      key: idx,\n      className: classes.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, phone);\n  }))), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, element.organization.name)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.nameField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"\\u0420\\u043E\\u043B\\u044C:\\xA0\"), __jsx(\"div\", {\n    className: classes.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, element.user.role))))), (profile.role === 'admin' || profile.role === 'организация') && profile._id !== element.user._id ? __jsx(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return onoffEmployment([element._id]);\n\n                        case 2:\n                          setStatus(status === 'active' ? 'deactive' : 'active');\n\n                        case 3:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function action() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 74\n                },\n                __self: this\n              }));\n              showMiniDialog(true);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    })),\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, status === 'active' ? 'Отключить' : 'Включить'), __jsx(Button, {\n    onClick:\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var action;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              action =\n              /*#__PURE__*/\n              function () {\n                var _ref4 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee3() {\n                  var list;\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.next = 2;\n                          return deleteEmployment([element._id]);\n\n                        case 2:\n                          list = _context3.sent.employments;\n                          setList(list);\n\n                        case 4:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function action() {\n                  return _ref4.apply(this, arguments);\n                };\n              }();\n\n              setMiniDialog('Вы уверенны?', __jsx(Confirmation, {\n                action: action,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 84\n                },\n                __self: this\n              }));\n              showMiniDialog(true);\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    })),\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")) : null);\n});\n\nfunction mapStateToProps(state) {\n  return {\n    app: state.app,\n    user: state.user\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardEmployment);","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\employment\\CardEmployment.js"],"names":["React","useState","Card","CardActionArea","CardContent","cardEmploymentStyle","connect","Link","Button","CardActions","bindActionCreators","mini_dialogActions","onoffEmployment","deleteEmployment","Confirmation","CardEmployment","memo","props","classes","element","setList","isMobileApp","app","profile","user","setMiniDialog","showMiniDialog","undefined","status","setStatus","cardM","cardD","_id","row","nameField","value","name","phone","map","idx","organization","role","action","list","employments","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport cardEmploymentStyle from '../../src/styleMUI/employment/cardEmployment.js'\r\nimport { connect } from 'react-redux'\r\nimport Link from 'next/link';\r\nimport Button from '@material-ui/core/Button';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport { onoffEmployment, deleteEmployment  } from '../../src/gql/employment'\r\nimport Confirmation from '../../components/dialog/Confirmation'\r\n\r\nconst CardEmployment = React.memo((props) => {\r\n    const classes = cardEmploymentStyle();\r\n    const { element, setList } = props;\r\n    const { isMobileApp } = props.app;\r\n    const { profile } = props.user;\r\n    const { setMiniDialog, showMiniDialog } = props.mini_dialogActions;\r\n    let [status, setStatus] = useState(element!==undefined?element.user.status:'');\r\n    return (\r\n        <Card className={isMobileApp?classes.cardM:classes.cardD}>\r\n            <CardActionArea>\r\n                <Link href='/employment/[id]' as={`/employment/${element.user._id}`}>\r\n                    <CardContent>\r\n                            <div className={classes.row}>\r\n                                <div className={classes.nameField}>\r\n                                    Имя:&nbsp;\r\n                                </div>\r\n                                <div className={classes.value}>\r\n                                    {element.name}\r\n                                </div>\r\n                            </div>\r\n                        <div className={classes.row}>\r\n                            <div className={classes.nameField}>\r\n                                Телефон:&nbsp;\r\n                            </div>\r\n                            <div>\r\n                                {element.phone.map((phone, idx)=>\r\n                                    <div key={idx} className={classes.value}>\r\n                                        {phone}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                            <div className={classes.row}>\r\n                                <div className={classes.nameField}>\r\n                                    Организация:&nbsp;\r\n                                </div>\r\n                                <div className={classes.value}>\r\n                                    {element.organization.name}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.row}>\r\n                                <div className={classes.nameField}>\r\n                                    Роль:&nbsp;\r\n                                </div>\r\n                                <div className={classes.value}>\r\n                                    {element.user.role}\r\n                                </div>\r\n                            </div>\r\n                    </CardContent>\r\n                </Link>\r\n            </CardActionArea>\r\n            {\r\n                (profile.role === 'admin' || profile.role === 'организация') && profile._id!==element.user._id ?\r\n                    <CardActions>\r\n                        <Button onClick={async()=>{\r\n                            const action = async() => {\r\n                                await onoffEmployment([element._id])\r\n                                setStatus(status==='active'?'deactive':'active')\r\n                            }\r\n                            setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                            showMiniDialog(true)\r\n                        }} size='small' color='primary'>\r\n                            {status==='active'?'Отключить':'Включить'}\r\n                        </Button>\r\n                        <Button onClick={async()=>{\r\n                            const action = async() => {\r\n                                const list = (await deleteEmployment([element._id])).employments\r\n                                setList(list)\r\n                            }\r\n                            setMiniDialog('Вы уверенны?', <Confirmation action={action}/>)\r\n                            showMiniDialog(true)\r\n                        }} size='small' color='primary'>\r\n                            Удалить\r\n                        </Button>\r\n                    </CardActions>\r\n                    :\r\n                    null\r\n            }\r\n        </Card>\r\n    );\r\n})\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        app: state.app,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardEmployment)"]},"metadata":{},"sourceType":"module"}