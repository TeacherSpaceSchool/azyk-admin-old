{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\azyk\\\\azyk-admin\\\\components\\\\dialog\\\\Geo.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog';\nimport dialogContentStyle from '../../src/styleMUI/dialogContent';\nimport { Map, YMaps, Placemark } from 'react-yandex-maps';\nimport Fab from '@material-ui/core/Fab';\nimport GpsFixed from '@material-ui/icons/GpsFixed';\nimport * as snackbarActions from '../../redux/actions/snackbar';\nconst Geo = React.memo(props => {\n  const {\n    showSnackBar\n  } = props.snackbarActions;\n  const {\n    isMobileApp\n  } = props.app;\n  const {\n    showMiniDialog,\n    setMiniDialog\n  } = props.mini_dialogActions;\n  const {\n    classes,\n    geo,\n    name\n  } = props;\n  const width = isMobileApp ? window.innerWidth - 126 : 500;\n  let {\n    0: newGeo,\n    1: setNewGeo\n  } = useState(geo ? geo : '42.8700000, 74.5900000');\n\n  let getGeo = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setNewGeo(position.coords.latitude + ', ' + position.coords.longitude);\n      });\n    } else {\n      showSnackBar('Геолокация не поддерживается');\n    }\n  };\n\n  let dragend = e => {\n    let geo = e.get('target').geometry.getCoordinates();\n    setNewGeo(geo[0] + ', ' + geo[1]);\n  };\n\n  console.log(newGeo);\n  return __jsx(YMaps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.column,\n    style: {\n      width: width\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(Map, {\n    height: window.innerWidth,\n    width: window.innerWidth - 60,\n    defaultState: {\n      center: [42.8700000, 74.5900000],\n      zoom: 12\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Placemark, {\n    onDragEnd: dragend,\n    options: {\n      draggable: true,\n      iconColor: '#ffb300'\n    },\n    properties: {\n      iconCaption: name\n    },\n    geometry: newGeo.split(', '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))), __jsx(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"\\u041D\\u0430\\u0439\\u0442\\u0438 \\u0433\\u0435\\u043E\\u043B\\u043E\\u043A\\u0430\\u0446\\u0438\\u044E\",\n    className: classes.fab,\n    onClick: getGeo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(GpsFixed, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })));\n});\n\nfunction mapStateToProps(state) {\n  return {\n    mini_dialog: state.mini_dialog,\n    app: state.app\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    snackbarActions: bindActionCreators(snackbarActions, dispatch),\n    mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\n  };\n}\n\nGeo.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(Geo));","map":{"version":3,"sources":["C:\\projects\\azyk\\azyk-admin\\components\\dialog\\Geo.js"],"names":["React","useState","PropTypes","withStyles","connect","bindActionCreators","mini_dialogActions","dialogContentStyle","Map","YMaps","Placemark","Fab","GpsFixed","snackbarActions","Geo","memo","props","showSnackBar","isMobileApp","app","showMiniDialog","setMiniDialog","classes","geo","name","width","window","innerWidth","newGeo","setNewGeo","getGeo","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","dragend","e","get","geometry","getCoordinates","console","log","column","center","zoom","draggable","iconColor","iconCaption","split","fab","mapStateToProps","state","mini_dialog","mapDispatchToProps","dispatch","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport * as mini_dialogActions from '../../redux/actions/mini_dialog'\r\nimport dialogContentStyle from '../../src/styleMUI/dialogContent'\r\nimport { Map, YMaps, Placemark } from 'react-yandex-maps';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport GpsFixed from '@material-ui/icons/GpsFixed';\r\nimport * as snackbarActions from '../../redux/actions/snackbar'\r\n\r\nconst Geo =  React.memo(\r\n    (props) =>{\r\n        const { showSnackBar } = props.snackbarActions;\r\n        const { isMobileApp } = props.app;\r\n        const { showMiniDialog, setMiniDialog } = props.mini_dialogActions;\r\n        const { classes, geo, name } = props;\r\n        const width = isMobileApp? (window.innerWidth-126) : 500;\r\n        let [newGeo, setNewGeo] = useState(geo?geo:'42.8700000, 74.5900000');\r\n        let getGeo = () => {\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition((position)=>{\r\n                    setNewGeo(position.coords.latitude+', '+position.coords.longitude)\r\n                });\r\n            } else {\r\n                showSnackBar('Геолокация не поддерживается')\r\n            }\r\n        }\r\n        let dragend = (e) => {\r\n            let geo = e.get('target').geometry.getCoordinates()\r\n            setNewGeo(geo[0]+', '+geo[1])\r\n        }\r\n        console.log(newGeo)\r\n        return (\r\n            <YMaps>\r\n                <div className={classes.column} style={{width: width}}>\r\n                    <Map height={window.innerWidth} width={window.innerWidth-60} defaultState={{ center: [42.8700000, 74.5900000], zoom: 12 }} >\r\n                        <Placemark\r\n                            onDragEnd={dragend}\r\n                            options={{draggable: true, iconColor: '#ffb300'}} properties={{iconCaption: name}} geometry={newGeo.split(', ')} />\r\n                    </Map>\r\n                </div>\r\n                <Fab color='primary' aria-label='Найти геолокацию' className={classes.fab} onClick={getGeo}>\r\n                    <GpsFixed/>\r\n                </Fab>\r\n            </YMaps>\r\n        );\r\n    }\r\n)\r\n\r\nfunction mapStateToProps (state) {\r\n    return {\r\n        mini_dialog: state.mini_dialog,\r\n        app: state.app\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        snackbarActions: bindActionCreators(snackbarActions, dispatch),\r\n        mini_dialogActions: bindActionCreators(mini_dialogActions, dispatch)\r\n    }\r\n}\r\n\r\nGeo.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(dialogContentStyle)(Geo));"]},"metadata":{},"sourceType":"module"}